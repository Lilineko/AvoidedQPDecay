(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    613682,      11893]
NotebookOptionsPosition[    607947,      11789]
NotebookOutlinePosition[    608300,      11805]
CellTagsIndexPosition[    608257,      11802]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "projectDir", " ", "=", " ", 
   "\"\</Users/pwrzosek/Documents/GitHub/AvoidedQP/t-J_model\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotsDir", " ", "=", "\"\<./plots/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDir", "=", "\"\<./data/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "projectDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ToExpression", "::", "sntx"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ToExpression", "::", "sntxi"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.810376366370266*^9, 3.810376438000781*^9}, {
  3.810376528964566*^9, 3.81037659966924*^9}, {3.810378724939012*^9, 
  3.810378726407338*^9}, {3.810378797254983*^9, 3.810378799205646*^9}, {
  3.810382647596902*^9, 3.810382648137683*^9}, {3.810383800791376*^9, 
  3.810383813027672*^9}, {3.810388842435267*^9, 3.810388843306177*^9}, {
  3.8103903787410994`*^9, 3.810390383278997*^9}, {3.810390520457258*^9, 
  3.810390539829296*^9}, {3.810390620046638*^9, 3.8103906203914137`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f83cadff-8e27-4166-9dac-92335885fc6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Read", " ", 
    RowBox[{"Lehmann", "'"}], "s", " ", "representation", " ", "of", " ", 
    "the", " ", 
    RowBox[{"Green", "'"}], "s", " ", "function", " ", "from", " ", "a", " ", 
    
    RowBox[{"file", " ", "'"}], 
    RowBox[{"filename", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReadData", "[", "filename_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stream", " ", "=", " ", 
        RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Read", "[", 
          RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"momentum", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0.0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"energy", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"weight", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"doMomentum", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEnergy", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doWeight", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"in", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"in", "\[LessEqual]", " ", "n"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"doMomentum", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"token", "=", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Read", "[", 
                  RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                 RowBox[{"token", "=", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"momentum", "[", 
                 RowBox[{"[", "in", "]"}], "]"}], "=", "token"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"doMomentum", "=", "False"}], ";"}], 
              "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"doEnergy", ",", 
                RowBox[{"(", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"token", "=", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                   "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", "token", "]"}], ",", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"energy", "[", 
                    RowBox[{"[", "in", "]"}], "]"}], ",", "token"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"doEnergy", "=", "False"}], ";"}], 
                 "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"doWeight", ",", 
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"NumberQ", "[", "token", "]"}], ",", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"weight", "[", 
                    RowBox[{"[", "in", "]"}], "]"}], ",", "token"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doWeight", "=", "False"}], ";"}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"doMomentum", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doEnergy", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doWeight", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"in", "++"}], ";"}], "\[IndentingNewLine]", 
                    ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"momentum", ",", " ", "energy", ",", " ", "weight"}], "}"}]}],
       "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "exact", " ", "representation", " ", "of", " ", "possible", 
     " ", "momenta", " ", "in", " ", "units", " ", "of", " ", "\[Pi]"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getMomentumInPi", "[", "momentum_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"momentum", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "momentum", "]"}], "-", "1"}], ")"}], "/", 
         RowBox[{"(", "Pi", ")"}]}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "momentum", "]"}], "-", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Calculate", " ", "spectral", " ", "function", " ", "A", 
     RowBox[{"(", 
      RowBox[{"k", ",", "\[Omega]"}], ")"}], " ", "from", " ", 
     RowBox[{"Lehmann", "'"}], "s", " ", "representation", " ", "of", " ", 
     "the", " ", 
     RowBox[{"Green", "'"}], "s", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculate", "[", 
      RowBox[{"momentum_", ",", "energy_", ",", "weight_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Omega]Min", "=", 
        RowBox[{"Min", "[", "energy", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Max", "=", 
        RowBox[{"Max", "[", "energy", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i\[Delta]", "=", 
        RowBox[{"0.01", "I"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Set", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"\[Omega]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", 
            RowBox[{"\[Omega]Min", "-", "1"}], ",", 
            RowBox[{"\[Omega]Max", "-", "1"}], ",", "0.01"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"kSet", "=", 
        RowBox[{
         RowBox[{"getMomentumInPi", "[", "momentum", "]"}], "*", "Pi"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"spectrum", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"kSet", "[", 
             RowBox[{"[", "kDim", "]"}], "]"}], ",", 
            RowBox[{"\[Omega]Set", "[", 
             RowBox[{"[", "\[Omega]Dim", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Im", "[", 
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"weight", "[", 
                  RowBox[{"[", "kDim", "]"}], "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Omega]Set", "[", 
                    RowBox[{"[", "\[Omega]Dim", "]"}], "]"}], "+", 
                   "i\[Delta]", "-", 
                   RowBox[{"energy", "[", 
                    RowBox[{"[", "kDim", "]"}], "]"}]}], ")"}]}], "]"}], 
               "]"}]}], "/", "Pi"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]Dim", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Omega]Set", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kDim", ",", "1", ",", 
            RowBox[{"Length", "[", "kSet", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"spectrum", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Definitions", " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810376626373351*^9, 3.810376681703945*^9}, {
   3.8103767165449743`*^9, 3.810376732108768*^9}, {3.810376774763689*^9, 
   3.810376776377264*^9}, {3.8103787462203608`*^9, 3.81037875338736*^9}, {
   3.810378831916213*^9, 3.810378856182395*^9}, {3.810378960576898*^9, 
   3.8103789627187138`*^9}, {3.8103790412637987`*^9, 3.810379053328946*^9}, {
   3.810379127729329*^9, 3.810379236768886*^9}, {3.810379432637445*^9, 
   3.810379470874033*^9}, {3.810380781487191*^9, 3.8103808610195847`*^9}, {
   3.810380908836014*^9, 3.8103809263445463`*^9}, {3.810380956964862*^9, 
   3.8103810149694853`*^9}, {3.810381046065974*^9, 3.8103813053257723`*^9}, {
   3.810381580177771*^9, 3.810381625142024*^9}, {3.810381661929336*^9, 
   3.810382105601828*^9}, {3.810382138360569*^9, 3.8103821450767384`*^9}, {
   3.810382242683181*^9, 3.810382246969778*^9}, {3.81038228606592*^9, 
   3.810382288450636*^9}, {3.810382437568595*^9, 3.810382443929315*^9}, {
   3.8103824858751163`*^9, 3.810382503613666*^9}, {3.810382563536317*^9, 
   3.810382593818511*^9}, {3.8103826368386106`*^9, 3.810382646101956*^9}, {
   3.810383816510055*^9, 3.8103838173846483`*^9}, {3.81038884559372*^9, 
   3.810388849003641*^9}, {3.8103906697810163`*^9, 3.810390699810843*^9}, {
   3.810390760750798*^9, 3.810390761951206*^9}, {3.810394352083129*^9, 
   3.810394368561453*^9}, {3.810394434839192*^9, 3.810394681501354*^9}, {
   3.810394800537978*^9, 3.810394815686274*^9}, {3.810394896393325*^9, 
   3.8103949027118263`*^9}, {3.810394955659092*^9, 3.8103949566373453`*^9}, {
   3.81039579981538*^9, 3.810395809712092*^9}, {3.810396310791771*^9, 
   3.810396330794058*^9}, {3.81039636429146*^9, 3.810396391328713*^9}, {
   3.8103964303034687`*^9, 3.810396430474443*^9}, 3.810396578851117*^9, {
   3.81039676972056*^9, 3.8103967852585697`*^9}, {3.810400656023312*^9, 
   3.810400671237116*^9}, {3.810404459687192*^9, 3.810404461238873*^9}, {
   3.810406250636938*^9, 3.810406255362336*^9}, {3.8104063297652397`*^9, 
   3.8104063299799747`*^9}, {3.810407063925943*^9, 3.81040715020478*^9}, {
   3.810560189586678*^9, 3.810560189623322*^9}, {3.810560271316864*^9, 
   3.8105602945590553`*^9}, 3.810560531433834*^9, {3.8107365448358793`*^9, 
   3.810736559757663*^9}, 3.8115299240318108`*^9, {3.811575864722541*^9, 
   3.811575865733472*^9}, {3.8115830239698143`*^9, 3.8115830244798822`*^9}, 
   3.8115875421896963`*^9, {3.8116582711990643`*^9, 3.811658271483317*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"2c5d6007-3fce-4311-9dde-8f46d72d4221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Listing", " ", "Files"}], " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<lehmann_*.txt\>\"", ",", "dataDir"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
       "files"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Listing", " ", "Files"}], " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.81039599757122*^9, 3.810396125433206*^9}, {
  3.810398060516449*^9, 3.810398063494487*^9}, {3.810398122484665*^9, 
  3.810398139524791*^9}},
 CellLabel->
  "In[974]:=",ExpressionUUID->"d9ed871e-408b-44eb-a809-8c8aa4b97d03"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\<\"./data/lehmann_l=02_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"2", "\<\"./data/lehmann_l=04_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"3", "\<\"./data/lehmann_l=06_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"4", "\<\"./data/lehmann_l=06_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"5", "\<\"./data/lehmann_l=06_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"6", "\<\"./data/lehmann_l=06_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"7", "\<\"./data/lehmann_l=08_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"8", "\<\"./data/lehmann_l=08_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"9", "\<\"./data/lehmann_l=08_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"10", "\<\"./data/lehmann_l=08_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"11", "\<\"./data/lehmann_l=10_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"12", "\<\"./data/lehmann_l=10_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"13", "\<\"./data/lehmann_l=10_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"14", "\<\"./data/lehmann_l=10_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"15", "\<\"./data/lehmann_l=12_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"16", "\<\"./data/lehmann_l=12_t=-1.0_J=0.4_m=1.0_.txt\"\>"},
    {"17", "\<\"./data/lehmann_l=12_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"18", "\<\"./data/lehmann_l=12_t=1.0_J=0.625_m=1.0_.txt\"\>"},
    {"19", "\<\"./data/lehmann_l=12_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"20", "\<\"./data/lehmann_l=12_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"21", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"22", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.1_.txt\"\>"},
    {"23", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.2_.txt\"\>"},
    {"24", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.3_.txt\"\>"},
    {"25", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.4_.txt\"\>"},
    {"26", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.5_.txt\"\>"},
    {"27", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.6_.txt\"\>"},
    {"28", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.7_.txt\"\>"},
    {"29", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.8_.txt\"\>"},
    {"30", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.9_.txt\"\>"},
    {"31", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"32", "\<\"./data/lehmann_l=14_t=1.0_J=0.625_m=1.0_.txt\"\>"},
    {"33", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"34", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.2_.txt\"\>"},
    {"35", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.4_.txt\"\>"},
    {"36", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.6_.txt\"\>"},
    {"37", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.8_.txt\"\>"},
    {"38", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"39", "\<\"./data/lehmann_l=16_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"40", "\<\"./data/lehmann_l=16_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"41", "\<\"./data/lehmann_l=16_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"42", "\<\"./data/lehmann_l=16_t=1.0_J=1.0_m=1.0_.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.810396025741809*^9, 3.81039604362904*^9}, {
   3.810396085764331*^9, 3.8103960960540733`*^9}, 3.810396163283956*^9, 
   3.810396215785585*^9, 3.8103970005654573`*^9, 3.81039830116523*^9, 
   3.8103986670184307`*^9, 3.8103990824755087`*^9, 3.810399694179892*^9, 
   3.810400025159423*^9, 3.810401235180163*^9, 3.8104043761497717`*^9, 
   3.8104057200612*^9, 3.810406015024948*^9, 3.810406295024506*^9, 
   3.810406797011745*^9, {3.8104069410558023`*^9, 3.810406955546688*^9}, 
   3.810443223474375*^9, 3.8104459289350863`*^9, 3.8104542459573517`*^9, 
   3.8104546041668587`*^9, 3.810560200225421*^9, 3.810560901771048*^9, 
   3.810736440312437*^9, 3.810786104287901*^9, 3.810842787303564*^9, 
   3.810844524484291*^9, 3.810877356757101*^9, 3.811514060423943*^9, 
   3.811518492181432*^9, 3.8115221167275343`*^9, 3.811524680267994*^9, 
   3.811525023259783*^9, 3.8115739546841173`*^9, 3.811574203373485*^9, 
   3.81157633291473*^9, 3.811576727962811*^9, 3.8115829217381687`*^9, 
   3.8115863889109383`*^9, 3.811587548964389*^9, 3.811658275301527*^9},
 CellLabel->
  "Out[975]//TableForm=",ExpressionUUID->"9d3c7deb-d248-4f44-ba9a-\
da777ea9179a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Spectral", " ", "Function"}], " ", "-", " ", "BEGIN"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"whichFiles", "=", 
     RowBox[{"{", "16", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filename", "=", 
        RowBox[{"files", "[", 
         RowBox[{"[", "it", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"momentum", ",", "energy", ",", "weight"}], "}"}], "=", 
        RowBox[{"ReadData", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"A", ",", 
         RowBox[{"calculate", "[", 
          RowBox[{"momentum", ",", "energy", ",", "weight"}], "]"}]}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "whichFiles"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Spectral", " ", "Function"}], " ", "-", " ", "END"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810389140911186*^9, 3.810389232423902*^9}, {
   3.810389607848843*^9, 3.8103896206504498`*^9}, {3.810390650241652*^9, 
   3.8103906512426043`*^9}, {3.810390787565298*^9, 3.8103908359451723`*^9}, {
   3.810394965108252*^9, 3.8103950165725307`*^9}, {3.810395049030242*^9, 
   3.810395049611656*^9}, {3.810395613133753*^9, 3.8103956317130947`*^9}, {
   3.810395716482202*^9, 3.81039577935992*^9}, {3.810395924995694*^9, 
   3.810395931667713*^9}, {3.810395981696918*^9, 3.810396016565071*^9}, {
   3.810396105076209*^9, 3.8103961214727297`*^9}, {3.810397004868931*^9, 
   3.810397005011612*^9}, {3.810398906457726*^9, 3.8103989065984573`*^9}, {
   3.8103989544616003`*^9, 3.810398954596925*^9}, {3.810399012375163*^9, 
   3.810399012548181*^9}, {3.8104002011681633`*^9, 3.810400337112453*^9}, {
   3.810400553032855*^9, 3.81040056878815*^9}, {3.810400647336173*^9, 
   3.8104006500234003`*^9}, {3.810400760655737*^9, 3.810400783884313*^9}, {
   3.810401245025242*^9, 3.810401258763464*^9}, 3.810401312330393*^9, 
   3.810404384798785*^9, {3.8104057268898973`*^9, 3.810405727734165*^9}, {
   3.810406018413013*^9, 3.810406018819355*^9}, {3.8104062706977367`*^9, 
   3.810406270975472*^9}, {3.810406948219822*^9, 3.810406950008585*^9}, {
   3.8104459382977877`*^9, 3.810445956212764*^9}, 3.810454261246662*^9, 
   3.810560212790255*^9, 3.810560905602434*^9, {3.810736446642755*^9, 
   3.810736448155588*^9}, {3.810786111749064*^9, 3.810786116176743*^9}, {
   3.810842841718924*^9, 3.810842951173872*^9}, {3.810877751858386*^9, 
   3.810877755231174*^9}, {3.810878447308474*^9, 3.810878451885536*^9}, {
   3.811514073439703*^9, 3.811514074124442*^9}, {3.81151443827774*^9, 
   3.811514438588633*^9}, {3.8115184861204576`*^9, 3.81151848711061*^9}, {
   3.811524673680773*^9, 3.811524674129386*^9}, {3.811524830956483*^9, 
   3.811524832436639*^9}, {3.811524923886986*^9, 3.811524951948861*^9}, {
   3.81152520435625*^9, 3.811525204660201*^9}, {3.811527206905467*^9, 
   3.811527207309351*^9}, {3.8115282682933693`*^9, 3.811528269216008*^9}, {
   3.8115299320765553`*^9, 3.8115299337455053`*^9}, {3.811572454953424*^9, 
   3.8115724560645523`*^9}, {3.811573963542282*^9, 3.811573964590851*^9}, {
   3.811574214177923*^9, 3.811574214692297*^9}, {3.8115829158049383`*^9, 
   3.811582916142436*^9}, {3.811586396409649*^9, 3.81158639667478*^9}, {
   3.811658285555101*^9, 3.8116582860673723`*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"1ada7f96-63c7-4f2e-8408-26b0161bd61b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Plot", " ", "Setup"}], " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FrameTicksFontSize", "=", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LegendFontSize", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<SunsetColors\>\"", ",", "\"\<Reverse\>\""}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListDensityPlot", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "GoldenRatio"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "colors"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FrameTicksFontSize", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"getMomentumInPi", "[", "momentum", "]"}], "*", "Pi"}], 
          ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"BarLegend", "[", 
         RowBox[{"Automatic", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"LegendFontSize", ",", " ", "Black"}], "]"}]}]}], "]"}], 
        ",", "Right"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<k\>\"", ",", "FrameTicksFontSize", ",", "Black"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[Omega]\>\"", ",", "FrameTicksFontSize", ",", "Black"}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FrameTicksFontSize", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Pi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "6"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "Identity"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Plot", " ", "Setup"}], " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8103909062969522`*^9, 3.810390938447989*^9}, {
   3.8103914034289494`*^9, 3.810391478918695*^9}, {3.8103915094855747`*^9, 
   3.810391516321938*^9}, {3.81039154802481*^9, 3.8103915905346413`*^9}, {
   3.8103919290884333`*^9, 3.810391932636866*^9}, {3.8103919753528137`*^9, 
   3.81039197644311*^9}, {3.810392037643795*^9, 3.810392039151093*^9}, {
   3.810392920156106*^9, 3.810392976137426*^9}, {3.810393035948379*^9, 
   3.8103930537918873`*^9}, {3.810393107408752*^9, 3.8103931522075644`*^9}, {
   3.810393242861773*^9, 3.810393272518208*^9}, {3.810393353425254*^9, 
   3.8103933766020107`*^9}, {3.810393446708737*^9, 3.810393528079771*^9}, {
   3.8103939088417892`*^9, 3.8103939902174587`*^9}, {3.810394030581053*^9, 
   3.810394034449313*^9}, {3.810394107308866*^9, 3.810394131278425*^9}, {
   3.810394179044854*^9, 3.810394303459477*^9}, {3.810395071262528*^9, 
   3.810395125465225*^9}, {3.81039517580977*^9, 3.810395176377693*^9}, {
   3.810396504439508*^9, 3.8103965542968493`*^9}, {3.810397873596547*^9, 
   3.810397894880501*^9}, {3.810398814378429*^9, 3.810398885544795*^9}, {
   3.8103989301775723`*^9, 3.810398930396819*^9}, {3.810400934080658*^9, 
   3.810400958912231*^9}, {3.810408470293249*^9, 3.810408491707555*^9}, {
   3.810877706986392*^9, 3.810877719594139*^9}, {3.810877763107994*^9, 
   3.8108777635064173`*^9}, {3.8115220090808153`*^9, 3.81152205638853*^9}, 
   3.811522097835623*^9, {3.811527811500085*^9, 3.811527812041835*^9}, {
   3.81152784920562*^9, 3.811527851233184*^9}, {3.811527988081359*^9, 
   3.8115279890043087`*^9}, 3.8115280385311337`*^9, {3.81152809456561*^9, 
   3.811528123864709*^9}, {3.8115281665428963`*^9, 3.811528189082412*^9}, 
   3.811528247299938*^9, {3.811528954468864*^9, 3.811528973306384*^9}, 
   3.811529009373105*^9, {3.811529102993867*^9, 3.811529103890979*^9}, {
   3.8115292349156713`*^9, 3.811529244167405*^9}, {3.811529276049247*^9, 
   3.811529276801052*^9}, {3.811529332625198*^9, 3.8115293378911753`*^9}, {
   3.811529423577096*^9, 3.811529425274981*^9}, 3.811529471135352*^9, {
   3.811529534149588*^9, 3.8115295395365963`*^9}, {3.8115295766183777`*^9, 
   3.811529670937402*^9}, {3.811529706782659*^9, 3.8115297315283823`*^9}, 
   3.811530497449891*^9, {3.81153067341747*^9, 3.81153067594421*^9}, {
   3.811530974033003*^9, 3.811531005648448*^9}, 3.8115312789757147`*^9, {
   3.811531345496416*^9, 3.8115313476309357`*^9}, 3.811531382909293*^9, {
   3.8115723387428083`*^9, 3.811572354881505*^9}, {3.811572796222313*^9, 
   3.811572796473592*^9}, {3.811572991896453*^9, 3.8115729926368313`*^9}, {
   3.8115730575077267`*^9, 3.811573057869924*^9}, {3.811573098940668*^9, 
   3.811573114979587*^9}, {3.81157319723293*^9, 3.811573198766609*^9}, {
   3.811574715848421*^9, 3.811574719889657*^9}, {3.8115747582727118`*^9, 
   3.811574837819132*^9}, {3.811575889884302*^9, 3.811575890721258*^9}, {
   3.8115767503488913`*^9, 3.8115767546877537`*^9}, 3.811576949600582*^9, {
   3.811587589097731*^9, 3.8115876980285187`*^9}, {3.8116583036453247`*^9, 
   3.811658306150412*^9}},
 CellLabel->
  "In[979]:=",ExpressionUUID->"3ffeba7c-2101-4d6e-bbce-0b9ed19f234c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "GoldenRatio"]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ColorDataFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SunsetColors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SunsetColors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ColorDataFunction["SunsetColors", "Gradients", {1, 0}, Blend[{{1., 
         RGBColor[0., 0., 0.]}, {0.8333333333333334, 
         RGBColor[0.372793, 0.1358, 0.506503]}, {0.6666666666666667, 
         RGBColor[0.788287, 0.259816, 0.270778]}, {0.5, 
         RGBColor[0.979377, 0.451467, 0.0511329]}, {0.33333333333333337`, 
         RGBColor[1., 0.682688, 0.129771]}, {0.16666666666666674`, 
         RGBColor[1., 0.882236, 0.491094]}, {0., 
         RGBColor[1., 1., 1.]}}, #]& ],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DataRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["\<\"k\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       FontSize->18,
       FontColor->GrayLevel[0]], ",", 
      StyleBox["\<\"\[Omega]\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       FontSize->18,
       FontColor->GrayLevel[0]]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False], ",", 
      RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "6"]}], ",", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"]}], ",", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "3"]}], ",", 
          RowBox[{"-", 
           FractionBox["\[Pi]", "6"]}], ",", "0", ",", 
          FractionBox["\[Pi]", "6"], ",", 
          FractionBox["\[Pi]", "3"], ",", 
          FractionBox["\[Pi]", "2"], ",", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]"}], "3"], ",", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "6"], ",", "\[Pi]"}], "}"}], ",", 
        "Automatic"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"18", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"18", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"LightingAngle", "\[Rule]", "None"}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#1", "&"}], ",", 
      RowBox[{"#2", "&"}]}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"BarLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"14", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->GrayLevel[0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}], "]"}]}]}], "]"}], ",", "Right"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"True", "&"}], ")"}]}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"VertexColors", "\[Rule]", "Automatic"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.810393264474996*^9, 3.810393273308497*^9}, {
   3.810393360841194*^9, 3.8103933771284924`*^9}, {3.810393447546379*^9, 
   3.810393528414008*^9}, 3.810393991808907*^9, {3.810394110738168*^9, 
   3.8103941319853973`*^9}, 3.810394182178844*^9, 3.810394223679051*^9, 
   3.8103942678438*^9, 3.810394304156865*^9, 3.8103951268801117`*^9, 
   3.810396164797023*^9, {3.810396505312909*^9, 3.810396555202681*^9}, {
   3.8103978749822607`*^9, 3.810397895766415*^9}, 3.810398888638749*^9, 
   3.810398931174327*^9, 3.810400959534902*^9, 3.810408493159732*^9, 
   3.810446188129653*^9, 3.81045431529989*^9, 3.8105602182478113`*^9, 
   3.810736491266333*^9, 3.81087772007207*^9, 3.810878480711172*^9, 
   3.811514087306121*^9, {3.811522028746595*^9, 3.811522057218382*^9}, 
   3.8115221209126587`*^9, 3.8115278129334517`*^9, 3.811527851873994*^9, 
   3.811527989920226*^9, 3.8115280393157167`*^9, 3.811528124648892*^9, {
   3.8115281678516903`*^9, 3.811528189918352*^9}, 3.81152824814217*^9, 
   3.8115289117922363`*^9, {3.811528957165606*^9, 3.811528974160067*^9}, 
   3.811529011371751*^9, 3.8115291047454777`*^9, 3.8115292445295067`*^9, 
   3.811529282087047*^9, 3.8115293385392942`*^9, 3.8115294258171997`*^9, 
   3.8115294719364347`*^9, 3.8115295404146023`*^9, 3.81152958062633*^9, 
   3.811529671897772*^9, {3.811529707776959*^9, 3.81152973204285*^9}, 
   3.811530499754015*^9, 3.8115306767893353`*^9, {3.8115309906244307`*^9, 
   3.811531006048718*^9}, 3.81153127957295*^9, 3.811531348073501*^9, 
   3.81153138332955*^9, 3.811572360087845*^9, 3.8115727968565407`*^9, 
   3.811572993580405*^9, 3.811573059017458*^9, {3.81157310104049*^9, 
   3.8115731160191107`*^9}, 3.811573199514142*^9, 3.811574726939747*^9, 
   3.811574761180126*^9, {3.811574794945956*^9, 3.811574838894115*^9}, 
   3.8115759816539087`*^9, 3.8115767556003942`*^9, 3.811576950378771*^9, {
   3.8115875918934803`*^9, 3.811587645631768*^9}, {3.811587677139715*^9, 
   3.8115876989577923`*^9}, 3.811658308245617*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"546a0cd8-b1a3-47e3-a383-b90224134d87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", "it", "]"}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"Characters", "[", 
           RowBox[{"files", "[", 
            RowBox[{"[", 
             RowBox[{"whichFiles", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"16", ";;", 
            RowBox[{"-", "6"}]}], "]"}], "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", 
       RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "plots", "]"}]}], "Input",
 CellChangeTimes->{{3.810390561175123*^9, 3.8103905743637657`*^9}, {
   3.810390607706459*^9, 3.810390617477171*^9}, 3.810390818702232*^9, {
   3.8103919039656353`*^9, 3.810391926648754*^9}, {3.810392042484671*^9, 
   3.8103920474465027`*^9}, {3.810392219164463*^9, 3.810392248715217*^9}, {
   3.810392948512353*^9, 3.810392949362302*^9}, {3.810396516583766*^9, 
   3.810396518331938*^9}, {3.810396559053966*^9, 3.810396561788746*^9}, {
   3.810400397316264*^9, 3.8104004535157537`*^9}, {3.810400797854093*^9, 
   3.8104008613657827`*^9}, {3.8104008948027143`*^9, 3.810400920520214*^9}, {
   3.8104009959739933`*^9, 3.810401023538859*^9}, {3.81040116394839*^9, 
   3.8104011867738867`*^9}},
 CellLabel->
  "In[983]:=",ExpressionUUID->"c433c2a1-e7a1-4265-9857-8aa1b75525d9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJyMvXn073O5/o8KlSEqemuQpJxSVCrklzFOGlQnicrcRFIk6ciQMWmgVCdC
nQ5lKAoZKhQylMjQJJlpYBu2Mvuu334/H2/r+Xita92vv8661vO+7mudrsd+
fz57789tL7fNTu94/wLzzTffTzeZb77///++f5eXrfaO8y5fa8NvPulDb33p
/OdOXrb+Ox9a7m8z7XfrtS5f7cJj754708+S3/vu+dzGN278jkei3/p3y71q
rz3+uMDa9r8l7Dtxz9cvesWTF1o7+a09b/2B9v/vK//5swOuXKr+34P/f5m3
v9rn/738vyf/++B3nnXyJ83/nq9qfuclnfp1X/zvj//e9r5S085P/qpP9jsv
6bE8eH/S5uN5r//k/717gZoH+mLe/mpfxcParS/8E+U53/6Kh7mtL/zOs7bf
/ZsP+sLP/OpNOz/5Ew/0h995SVc8pP1Jm4+nfPnl5//ljvlKHuiLefurfal/
94XfeUmP5YG+8DvP2n73bz7oCz95y0jznvyJB/rD77ykKx7S/qT9+XDfDbfe
uM0fax7oy/OVHssD/eF3XtJjeaAv/M5L2jwkPugLv/Oskz/xQH/4nZd0xUPa
n7T5uP5VR89/+/k1D/Tl+UqP5YFf7/idl/RYHujrhuZ3nrX9FQ/0hZ+8hVft
NfnJn/RJrT/2Oy/pioe039rzfH359f6bPn/Hk2se6It5+6t9FQ/0hd95Saf+
rekLv/Os7Xf/5oO+8JN3gzTvyZ94oD/8zks68ZD4wG/tefo94/eLr3XPETUP
9MW8/dW+igf6wu+8pMfyQF9nNr/zrO13/+aDvvCTd6E0+cmfeKA/9jsv6cRD
4gO/tefp+3//46L37XZgzQN9eb7SY3mgL/zOSzr1b01f+J1nbb/7Nx/0hZ+8
b0nznvyJB/rD77ykEw+JD/zWnqffL/733ns8vHPNwzKtL89XeiwP9Id/ojzn
J3/S9IXfeUmbh8QHfeEn71Rp3pM/8UB/+J2XdOIh8YHf2vN8ffn0b1Y7Yp8t
ah74/Tfz9lf7Uv/uC/9Eec5P/qTpa/fmd17S5iHxQV/4yfucNPnJn3igP/Y7
L+nEQ+IDv7Xn6fcDy9595oIb1TzQF/P2V/tS/+4Lv/OSrvr/tPrC77ykzcPu
gQ/6wk/eLtK8J3/igf7wOy/pxEPiA7+15+n37R///h8+/+qaB/pi3v5qX8UD
32/gd17SY3ngz//wO8/afvdvPugLP3zs2rTzkz/xQH/4nZd04iHxgd/a8/S7
5i+3/vfTlqt5oC/m7a/2VTzQF37nJT2WB/rC7zxr+92/+aAv/ORtLc178ice
6BO/85JOPCSNP2l/Pqz4zGWW+toiNQ/05flKj+WBvvA7L+mxPNAXfudZ2+/+
zQd94SfvFdK8J3/igf7wOy/pioe0P2l/Prz4su9++DV3PXZOxQN9MW9/ta/i
gb5WbH7nJT2WBz4/2O88a/vdv/mY9df88LFB086P/qBnfTa/86IueEj7oxYf
j378mcet/auaB/pi3v5qX8UD/eF3XtL2Jx7oE7/zkl4x9G8+6As/76/audd+
tz/xQH/4nZd0yUPYn/SK4uOqZx5w80ZH1TzQF/P2V/sqHujrmuZ3XtJjebi7
9cV+5yXtvhMf9IWf9/Oadn7yJx7oD7/zkq54SPuT9ufDiWf+a7lNdq15oC/P
V7rq/yr1hd95SdufeKAv/M5L+pqi//PUF37efyDtd/sTD/SH33lJVzyk/Ulf
o8+Hfd/3wS23fHPNA30xb3+1r+KBvvZrfuclPZYH+mK/85K2P/FBX/h5P0La
7/YnHugPv/OSrnhI+5M2H5vN/4cjP7x8zQN9MW9/ta/igb7wOy9p+xMP9LV5
8zsvafsTH/SFn/eDpDeXtj/xQH/sd17SFQ9pf9L76fPhlf/3n3/a5cFHSx5m
Py+q+UqP5YG+XtX8zku66t99st95Sdvv/g9SX/h531Xa7/YnHugPv/OSrnhI
+5M2Hwu/8cyl97yi5oG+PF/pqv9Xqi/8zkva/sTD7Odtmt95Sduf+KAv/Lxv
I+13+xMP9IffeUlXPKT9Sb9KfPz1n/+xyUHfq3mgL89XeiwP9HV98zsv6bE8
0Bf7nZe0/YmP2c9rNT/vc6T9bn/igf7wOy/pioe0P2nm+f7ktC9/87DD9qp5
oC/m7a/2VTzQF37nJW1/4oG+Tm9+5yVtf+KDvvDzfq306dL2Jx7oj/3OS7ri
Ie1P+nrx8YVVn3r5ke+qeaAv5u2v9lU88Oe9X2p+5yVd9e8+2e886+R3/9eq
L/y8Xyztd/sTD/SH33lJVzyk/Un782G7P/z3ose9rOaBvjxf6ar/L6gv/M5L
+gsjeeDPb/A7z9r+1P/F6gs/75s27fzkTzzQH37nJV3xkPYn/SXx8bo9/rnR
KU+seaAvz1d6LA+zv69sfuclPZaH2d9/Nr/zkt6u6H9T9YWf9/Wl/W5/4mH2
95fN77ykKx7S/qTNxxLPf99BZ//5kZIHfv7L85Wu+n+d+sI/UZ7zkz/xQF9L
Nr/zkrY/8UFf+Hl/hfSS0vYnHuiP/c5LuuIh7U+aeb4/+dsvf3PBBT+qeaAv
5u2v9qX+3dc/mt95SVf9u0/2Oy9p+93/K9QXft6fd36v/W5/4oH+8Dsv6YqH
tD9p83HuB1//hMs/V/NAX8zbX+2reKAv/M5L2v7EA33hd17S9ic+6As/70/9
UK/9bn/igf7wOy/pioe0P+l/6PPh60/94dp/2qrmgb48X+mxPNDXN5rfeUmP
5YG+2O+8pO1PfNAXfuclbX/i4YTWH37nJV3xkPZbe55+d/zhsnve/NqaB/ry
fKWr/r+uvvA7L2n7Ew/0hd95SY/lgb7w876/tN/H8kB/+J2XdOIh8YHf2vP0
+4b/+vLZdy5W80Bfnq/0WB74/fIGze+8pMfyQF8bNr/zrJM/8UFf+HnfWXpD
afsTD/TJfuclnXhIGn/SzH+w9fucf8/3wP23PFzywPe/zNtf7at4oC/8E+U5
3/6KB35+EL/zrO1P/e+svvDzvmXTzk/+xAP94Xde0hUPaX/SzPP97b3f/Phr
nvCzmgf6Y97+al/q3/3Nbf6J8pyf/Enz88b4nZf0c4r+t1Rf+Mlb54hek5/8
iQf6Y7/zkq54SPuTZp6+L3n9jbss+tWaB/ryfKWr/t3npc3vvKTH8kBf+J2X
tHm4N/BBX/jJu1Wa/ORPPNAf+52XdMVD2p8083x9+faN7zhl6R1qHuiLefur
fRUPfL34TvM7L+mxPPD5wX7nWdvv/s0HfeGHjzObdn7yJx7oD7/zkq54SPuT
vlR87H7AL+9cbt2aB+7Xmbe/2lfxQH+fbv6J8pyf/IkH+sLvvKS/E/o3H/SF
n7xfSJOf/IkH7j/Z77ykKx7SfmvP0/fGL1l1pZUmNQ/05flKV/27z7c1v/OS
HssDfbHfeUmbh90DH/SFn7xDpXlP/sQD/eF3XtKJh8QHfmvP0+/0fuqhkgf6
93ylq/43Vl8rNv9Eec5P/sQDfeF3XtLmIfFBX/jJW0ua/ORPPNAf+52XdOIh
8YHf2vN8fZne89Q89PdWDw381b7UP5rvNx5rfuclPZYH+sLvPGv73b/5oC/8
5D1l516Tn/yJB/pjv/OSTjwkPvBbe56+r553z1PzQF+er3TVv/u8pvmdl/RY
HuiL/c5L2jw8GvigL/yzn3ddqte8J3/iob+/GuYlnXhIGn/Sj4mP6T1PzUN/
b5X9aV/FA32d1PzOS9r+xAPf/+J3XtLmIfFBX/h5v69p5yd/4oH+2O+8pCse
0v6kmefry/Sep+aBvpi3v9pX8UBf+ze/85Iey0N/vzXMS/qkov/71Bd+3m+U
3k/a/sQD/bHfeUlXPKT9SZ8kPqb3PDUP/b3V0F/tq3jg+43Nm995SY/lob/f
GuZZJ7/7v1F94ef9Y9J+tz/xQH/4nZd0xUPan/T+4mN6z/NgyQN9MW9/ta/i
ob+3enCQl/RmI3no77ceHORZJ3/ig77w8/4+ab/bn3jo768eHOQlXfGQ9ie9
ufiY3vPUPPT3Vg8O/NW+igf6e3LzOy/psTz091vDvKTtT3zQF37eN5JeWNr+
xAP9sd95SVc8pP1J+/Nhes9T80Bfnq901b/7vKH5nZf0WB76+61hXtL2u/+N
1Bd+3n8vfb20/YkH+mO/85KueEj7k2aevx+f3vPUPPT3VkN/ta/igb5Ob37n
JT2Wh/5+a5iXtP3u//fqCz/v50v73f7EA/3hd17SFQ9pf9I3iI/pPU/NA30x
b3+1r+KBvvA7L2n7Ew/c3+B3XtLuO/FBX/h5P6Vp5yd/4qG/vxrmJV3xkPYn
zTzfn0zveWoe+nurob/aV/HQ31sN85IeywN94Xde0l8q+j9FfeHn/Shpv9uf
eOjvr4Z5SVc8pP1Jm4/pPU/NA30xb3+1r+Khv7ca5iU9lof+fmuYl7T9iQ/6
ws/756X9bn/igZ8/xu+8pCse0n5rz/f3WQ+UPPT3Vg9Ef9pX8cDvl5dsfucl
PZaH/n7rgUGedfInPugLP+8Tab/bn3igP/zOSzrxkPjAb+15Ph+m9zw1D/z8
IPP2V/sqHvp7q8ff0c63v+Khv98a5lknf+KDvvDzvuD5vfa7/YmH/v5qmJd0
4iFp/EkvKT6m9zw1D/291dBf7Uv9uz/8zkt6LA/8/QN+5yXtvhMf9IWf93ub
dn7yJx76+6thXtIVD2l/0uZjes9T80BfzNtf7at46O+thnlJj+Whv7ca5iV9
btH/veoLP+97S/vd/sQD/eF3XtIVD2l/0uZjes9T89DfWw391b6Kh/7eapiX
9Fge+P0Tfucl7b4TH/SF/17lOT/5Ew/9/dUwL+mKh7Q/afMxveepeaAv5u2v
9lU88P3Ghs3vvKTH8sDP27Dfedb2p/7dF37yviHNe/InTX/4nZd0xUPan7Q/
H547757n/pIHfn7Q85Wu+t9AfeGfKM/59lc80B9+51knf+KDvvDP7tubdn7y
Jx74+T/8zku64iHtt/Z8f59V89Dfb90f/Wlf6t/9zW3+ifKcn/xJ8/0L+52X
tPtOfNAXfuafdsRUOz/5Ew/9/dUwL+nEQ+IDv7Xn+/usmof+3ir7077U/73q
69Lmd17S9ice6Iv9zksav/s3H/SFn7zbpHlP/sQD/eF3XtKJh8QHfmvP9/dZ
NQ/9vdXQX+2reODrxf82v/OSvmQkD/T1neZ3nrX97t980Bd+8m6XJj/5Ew/8
+R37nZd04sHa+609T7/Te56aB/pi3v5qX8UDfeF3XtLfHskDfeF3nrX97t98
0Bd+8n4pzXvyJx749Y/feUknHqy939rz9Du9n6p5oC/m7a/2VTz091bDvKTH
8tDfbw3zrO13/+aDvvCTt7U078mfeOjvr4Z5SSceksaftPmY3jP9u+SBvpi3
v9pX8dDfW/17kJe0/YmH/n7r34O8pM1D4oO+8JO3tjT5yZ94oD/2Oy/pioe0
P+m36fNhes9U80Bfnq901T+aX+/4nZf0WB76+61hnrX97t980Bd+8lbfude8
J3/igf7wOy/pioe0P+kV9fkwvZ+qeeD338zbX+2reKA//BPlOT/5k+7vt4Z5
SZuHxAd94SfvOUv1mvzkTzzQH/udl3TFQ9qfNPP9fVbNQ39vlf1pX+rffeF3
XtJV/1err5Oa33lJm4drAh/0hZ+8U6TJT/7EA/2x33lJVzyk/Un782H676/V
PNA/8/ZX+yoe+HqBf6I859tf8dDfbw3zrO13/+aDvvDP/r5MmvzkTzzw+2f2
Oy/pioe039rz9D29n6p54M//PF/pqn/3tXnzT5TnfPsrHuiL/c6ztt/9mw/6
wk/e56R5T/7EQ39/NcxLOvGQ+MBv7Xn6nf77a/8qeaAvz1e66n8z9YffeUnb
n3igL/zOS9o8JD7oCz95b5DmPfkTD/z5C37nJZ14sPZ+a8/z9WWhefc8NQ98
fjBvf7Wv4oG+Fm7+ifKcn/xJ9/dbw7yk7U980Bf+2by03+1PPNAffuclnXhI
fOC39jz9Tu+Zah76e6uhv9qX+l9IfeF3XtL2Jx76+61hXtL2Jz7oCz/vy97R
a7/bn3igT/zOSzrxkDT+pBfW58P0fqrmga8/nq/0WB76e6vH39nn/ORPmr//
ZL/zknbfiQ/6ws/7IodOtfOTP/HQ318N85KueEj7kzYf039/reaBvjxf6ar/
09TXF5vfeUnbn3igL/Y7L2n8qX/4oC/8vD8g7Xf7Ew/0h995SVc8pP1Jny4+
pvc8NQ/9vVX2p30VD/291TAvafsTD/391jAvafsTH/SFn/cDpf1uf+Khv78a
5iVd8ZD2J808359M//21mgf6Yt7+al/FQ39vNcxLeiwP/f3WMC9p+xMf9IWf
909I+93+xAP94Xde0hUPaX/S5mN6z3NfyQN9MW9/ta/igb7wOy9p+xMP/Pwy
fucl7b4TH/SFn/f5m3Z+8ice+vur+wZ5SVc8pP1Jr6nPh7/Pu+epeaAvz1d6
LA/0hd95SY/lgb7wOy/pJYv+51df+Hm/U9rv9ice6A+/85KueEj7kzYf03ue
mge+//V8pcfy0N9bPf6Odn7yJ01f+J2XtP2JD/rCz/ufpf1uf+Khv78a5iVd
8ZD2J20+pvc8NQ/9vVX2p32pf/eF33lJj+Whv98a5iVtf+KDvvDzfpG03+1P
PPT3V8O8pCse0v6kmef7k4/Ou+epeaAv5u2v9lU80Bd+5yU9lgf6wu+8pO1P
fNAXft5Pk/a7/YkH+sPvvKQrHtL+pJmn7+n9VM1Df2+V/WlfxUP/77UN85Ie
ywN/34Tfedb2p/5PU1/4yfugNO/Jn3igP/zOS7riIe1P2p8P03ueuSUP/b3V
3IG/2lfx0N9bzR3kJT2WB/rC7zxr+92/+aAv/OQtKs178ice+vuruYO8pCse
0n5rz9Pv9J6n5oHvX5i3v9pX8dDfWz3+jnZ+8ifd328N85I2D4kP+sIPH2sd
MdXOT/7EQ39/NcxLOvGQ+MBv7fn+Pqvmob+3Gvqrfal/93Vp8zsv6bE80Cf7
nZc0fvdvPugLP3z8rWnnJ3/igT7xOy/pxEPS+JM2H9N7ppoH+mLe/mpfxUN/
bzXMS/qSkTz091vDPOvkT3zQF37mfyJNfvInHvr7q2Fe0hUPab+15+l3+u+h
1Tz0//7b0F/tq3igP/wT5Tk/+RMP/f3WMC9p8/CdwAd94SfvAmnykz/xQH/s
d17SiYfEB35rz9P39H6q5qG/t8r+tC/1777e1vzOS7rqf3f1xX7nJW0ePh34
oC/85H1JmvfkTzz091fDvKQTD0njT9qfD9N7pntLHvp//+3egb/aV/FAX/gn
ynN+8ice+vutewd5SZuHxAd94SdvHWnekz/xQH/4nZd0xUPan/TbxMf0nqfm
ob+3unfgr/al/tH9vdUwL+mxPPT3W8M8a/vdv/mgL/zkLbxzr3lP/sRDf381
zEu64iHtT9p8TO95ah76e6uhv9pX8UB/1zS/85IeywP94Xde0vYnPugL/+z3
+0tNtfOTP/HA75/Z77ykKx7SfmvP9/dZNQ/9vVX2p30VD/291TAv6bE80Bd+
5yVt/9WBD/rCz/z10rwnf+Khv78a5iWdeEh84Lf2fH+fVfPQ31sN/dW+igf6
wu+8pMfyQF/4nZe0eUh80Bd+8r4pzXvyJx76+6thXtKJh8QHfmvP9/++W81D
f7819Ff7Kh76e6vH39nn/ORPur/fGuYlbR4SH/SFn7x3S/Oe/ImH/v5qmJd0
4iHxgd/a8/191j0lD/291T0Df7Uv9b+Z+sLvvKTtTzz091v3DPKSNg+JD/rC
T97LpHlP/sQDfeJ3XtKJh6TxJ725Ph+m91M1D/291T3Rn/ZVPNAXfuclPZYH
fn5w4eZ3XtLmIfFBX/h5X6Zp5yd/4oH+2O+8pCse0v6kzcf0nqfmgd9/e77S
Y3no760ef0c7P/mT7u+3hnlJL1T0v4z6ws/7Qnf02u/2Jx76+6thXtIVD2l/
0uZjej9V89DfW2V/2pf6d1/4nZf0WB7o6/Tmd17S9ic+6As/73OlT5e2P/FA
f+x3XtIVD2l/0uZjej9V88D3L56v9Fge+nurx9/Z5/zkT7q/3xrmJW2/+5+r
vvDzfoO03+1PPPT3V8O8pCse0v6kzcf0nqfmob+3yv60L/X/BfX1/uZ3XtL2
Jx76+61hXtL2Jz7oCz/vO0lvJ21/4oH+2O+8pCse0v6kvyg+pvdTNQ/9vVX2
p30VD/291TAv6bE88PM77Hde0ubB/e+kvvDz/t6mnZ/8iYf+/mqYl3TFQ9qf
9PvFx/Se5+6Sh/7e6u7oT/sqHujr6c3vvKTtTzzQF37nJb1m0f971Rd+3t8o
vaS0/YkH+mO/85KueEj7k15TfEzveWoe+nuru6M/7at44O8r/9H8zkt6LA/9
/dYwzzr53f8b1Rd+3l9zfq//rnf7Ew/0x37nJV3xkPYn/XTxMb3nqXno762y
P+2reKC/85rfeUmP5aG/3xrmJW2/+4cP+sLP+/If6vW5erc/8UB/7Hde0hUP
aX/S/xAf03uemgd+/+35Slf9o/n1/j/NP1Ge8+2veODPb/A7z9r+1D980Bd+
3k9u2vnJn3igP/Y7L+mKh7Q/6fPEx/Sep+ahv7fK/rQv9e8+d2p+5yU9lof+
fmuYl/T/FP2frL7w8/4t6Y9K2594oD/2Oy/pioe0P+n/ER/Te56ah/7eKvvT
vooH+tqw+Z2X9Fge6Au/85K23/1/S33h5/1g6Q2k7U880B/7nZd0xUPan/RO
4uM58+557ip5oC/PV7rq333id17SY3mgL/zOS9p+93+w+sLP+7Ok/W5/4oH+
8Dsv6YqHtD/pDcXH9J6n5qG/t7or+tO+igf6uq/5nZf0WB5mf97b/M5L2v7E
B33h5/1JR/R6rt7tTzzQH/udl3TFQ9qftPmY3k/VPPT3Vtmf9lU80Bd+5yU9
lgf6wu+8pO13//BBX/h5v0fa7/YnHrifwe+8pCse0n5rz/f3WTUPfP/LvP3V
vooH+sI/UZ7zkz9p+sLvvKTtT3zQF37e/yrtd/sTD/SH33lJJx4SH/itPU+/
u82756l5oC/m7a/2pf7d16ea33lJj+WBvtjvvKTtT3zQF37efy3td/sTD/SJ
33lJJx6Sxp+0Px+m9zw1D/z9p+crXfW/m/rCP1Ge85M/8cDfP+B3XtLuO/FB
X/h5P7Np5yd/4qG/vxrmJV3xkPYn/Sl9PrzlyDde+ZHr55Q80B/z9lf7Uv9o
/rxu4+afKM/59lc80B/7nWed/IkP+sLPz6ce3rTzkz/xQH/4nZd0xUPan7T5
eOSml7x1ny/WPNAX8/ZX+1L/b1Ffjza/85J+y0ge+PM/9jvP2n73bz7oCz98
fPDmqXZ+8iceZvdXze+8pCse0v6kNxYfx790kYsPX7Pmgb6Yt7/aV/FAfyc0
v/OStj/xQJ/sd17S+N2/+aAv/Lx/Vtrv9ice6A+/85KueEj7k35UfGy2yx3r
Hf/3O0se+P6XefurfRUPs3uH5p8oz/nJn3igf/Y7L2n3nfiY3Ts0/+znM5p2
fvInHmb3D83vvKQrHtL+pE/Q58OCZ1/2859/o+aBvjxf6ar/zdTXQs3vvKTt
TzzMft64+Z2X9OZF/+9VX/hnf78u7Xf7Ew+zn19vfuclXfGQ9ie9ufg4dYGT
V79yg5oH+vJ8pav+F1Rfpze/85K2P/Ew+/nl5nde0vYnPugLP+9Pe0Kv/W5/
4oH+8Dsv6YqHtD/phcTHNhsdeuptc+8oeaAvz1e66v9U9bVt8zsvafsTD/TF
fuclbX/ig77wz35eSNrv9ice6A+/85KueEj7k2ae70+edtjOKz/8nZoH+mLe
/mpfxQN9Ldn8zkva/sQDfS3R/M5L2v7EB33h5/186SWk7U880B/7nZd0xUPa
n/S24uOcP/7X8U97e80DfTFvf7Wv4oG+zm1+5yVtf+KBvvA7L2n73f/56gv/
7M+Xpc+Rtj/xQH/sd17SFQ9pf9JL6vPhI8u9eoUVHvtnyQN9eb7SVf9o/rxl
x+Z3XtJjeaAv9jvPOvnd/1/VF/7Znw9K+93+xAP94Xde0hUPaX/S54qPZ394
qWNWP6nmgb48X+mq/4+ov+c0v/OStj/xQF/4nZe0/YmP2c9LND/vX5F+trT9
iYfZz080v/OSrnhI+5PeUXxcdPK/l3nre2oe+P235ytd9Y/m1/vFzT9RnvPt
r3igL/Y7zzr53f9X1Bd+3n8g7Xf7Ew/0h995SVc8pP1JM8/3J7vd/4fDt3ly
zcPs7yvbvP3VvtT/RervU83vvKTtTzzQF37nJW1/4mP295XNz/tB0rtJ2594
mP39ZfM7L+mKh7Q/6YvFxwvXPutpu/3kHyUP/P0V8/ZX+yoe6GuF5p8oz/nJ
n3igL/Y7L2n73f9B6gs/79tI+93+xAP94Xde0hUPaX/Sn9Lnw5UHHvH5z7+/
5oG+PF/pqv8Xqq+rmt95SdufeKAv/M5L2v7EB33h533Ng3p9pd7tTzzQH/ud
l3TFQ9qf9AriY+/f7rHgMU+veaAvz1e66t997tP8zkt6LA/0xX7nJW2/+4cP
+sLP+1KX99rv9ice6A+/85KueEj7k75KfKy89Bb7nHre30se6Mvzla7631t9
rdL8zkva/sQDfeF3XtL2Jz7oCz/vr5BeWdr+xAP9sd95SVc8pP1JM8/3J3/Z
Yq2HL9qp5oHvf5m3v9pX8cDvd65r/onynG9/xQN9sd951snv/l+hvvDz/tQt
e+13+xMP9IffeUlXPKT9Sa8iPj5/7PN3+8tzax74/oV5+6t9qf+/qC/8E+U5
3/6KB/rC7zzr5E980Bd+3m+R9rv9iQf6w++8pCse0v6kr9Pnw+p3zn/P3Zf+
reSB/jxf6ap/97dG80+U5/zkT5q+2O+8pO1PfNAX/tmfV0v73f7EA/3hd17S
FQ9pf9Lm47ZX3/SRBT9d80Bfnq901f/q6gu/85K2P/HAz5/id17S7jvxQV/4
ef+f10y185M/8UB/+J2XdMVD2p/0GuLj8M+cf9syK9Y80JfnKz2WB/r6WvM7
L+mxPNAX+52XNP7UP3zQF37eT5X2u/2JB/rD77ykKx7S/qSZ5/uT9S74v21W
vub2kgf6Yt7+al/FA33hd17S9ice+PlB/M5L2n0nPugLP+9fbNr5yZ94oD/8
zku64iHtT/pr4uPuRQ78y3r71TzQF/P2V/sqHujrnuZ3XtJjeaAv9jsv6fWK
/r+ovvDz/qFFe+13+xMP9IffeUlXPKT9Sfvz4ah3fujd735lzQN9eb7SVf93
q6+jm995SdufeKAv9jsvafsTH/SFn/d1N+m13+1PPNAffuclXfGQ9id9jz4f
pvdTt5U89Pdbtw381b6KB36/jH+iPOfbX/HA9y9vbX7nWduf+ocP+sLPfdc9
TTs/+RMP9Md+5yVd8ZD2J320+JjeT9U89PdWtw381b7Uv/vC77ykU//W9IXf
edb2u3/zQV/4yXvtzb3mPfkTD/SH33lJVzyk/Umbj+k9T80DfTFvf7Wv4oH+
Tmx+5yU9lgf6x++8pM1D4oO+8M9+3nWlqXZ+8ice6I/9zku64iHtT9p8TO+n
bi156O+tbh34q30VD/SF33lJj+WBvvA7L2n8qX/4oC/8vP9D2u/2Jx7oD7/z
kq54SPuTPlGfD9N7npoH+vJ8pcfywNcL/M5LeiwP/f3WMM86+RMf9IWf9wuk
/W5/4oH+8Dsv6YqHtD9p83HqvHuemof+3ir7076KB/o7rfmdl/RYHuiL/c5L
2v7EB33h5/16ab/bn3igP/zOS7riIe1P2nxM76duKXno761uif60r+Khv7e6
ZZCX9KkjeeDPb9jvPGv7U//Xqy/8vJ/VtPOTP/FAf/idl3TFQ9qfNPP9fVbN
Q39vdcvAX+2reKC/JZrfeUnbn3jo77eGeUlvW/R/lvrCz/tXpf1uf+KB/vA7
L+mKh7Q/6W3Fx8/n3fPUPPD7b+btr/ZVPNDXOc0/UZ7zkz/x0N9vDfOStj/x
QV/4ef+htN/tTzzQH37nJV3xkPYnvYQ+H6b3UzeXPPT3VjdHf9qX+v+5+tqx
+Z2XtP2Jh/5+6+ZBXtL2Jz7oCz/vn5P2u/2JB/rD77ykKx7S/qTPER/LzLvn
qXmgL89Xuur/I+rr2c3vvKTtTzz091vDvKTtT3zQF37et5X2u/2JB/rD77yk
Kx7S/qR3FB/T+6mah/7eKvvTvoqH/t5qmJe0/YmH/n5rmJe0/YkP+sLP+/93
Sq/9bn/igf9+Ln7nJV3xkPZbe76/z6p54OdPmbe/2lfxwO938E+U53z7Kx76
+61hnnXyJz7oCz/vSz/Qa7/bn3igP/zOSzrxkPjAb+15+p3e89xU8sD3L8zb
X+1L/bsv/BPlOd/+iof+fuumQZ518ic+6As/76+U9rv9iQf6xO+8pBMPSeNP
2p8P03ummof+3uqm6E/7Uv/uD7/zkh7LA3//gN95SbvvxAd94ed9kYOm2vnJ
n3igP/zOS7riIe1P2nxM73lqHujL85Uey0N/bzXMS3osD/391jAvafypf/ig
L/y83yrtd/sTD/SH33lJVzyk/Umbj+k9040lD/291Y3Rn/ZVPNAXfuclPZYH
/vwPv/OSdt+JD/rCz/v8TTs/+RMP9IffeUlXPKT9STPf32fVPPT3VjcO/NW+
igf6wu+8pMfyQF/4nZf0ykX/86sv/Lz/Wdrv9ice6A+/85KueEj7kzYf03ue
mof+3mror/ZVPPT3VsO8pMfy0N9vDfOStj/xQV/4Z39fJu13+xMP9IffeUlX
PKT9SfvzYXo/dUPJQ39vdUP0p30VD/SF33lJj+WBvvA7L2n7Ex/0hZ/3L0n7
3f7EA/3hd17SFQ9pf9LmY3rPU/PQ31vdEP1pX8VDf281zEt6LA/0hd95Sduf
+KAv/Lx/+DW99rv9iQf6w++8pCse0v6kzcf0fqrmob+3yv60r+KBvvA7L+mx
PNAXfuclbX/ig77w877enr32u/2JB/rD77ykKx7S/qSZ7++zri956O+trh/4
q30VD/291fWDvKTH8kBf6ze/85K2P/FBX/h530J6fWn7Ew/0x37nJV3xkPYn
bT6m91M1D/291fUDf7Wv4oG+8Dsv6ap/94nfeUnb7/63UF/4eV9t0V773f7E
A/3hd17SFQ9pf9L+fJje89Q80JfnKz2WB/6+AL/zkh7LQ3+/NcyzTv7EB33h
533JTXrtd/sTD/SH33lJVzyk/Umbj2+u9pVj/3juX0se6MvzlR7LA/3hd17S
Y3mgL/zOS9r+xAd94ef9D6v32u/2Jx7oD7/zkq54SPuTNh/3/2qTIxd4bs0D
fXm+0mN54Nc7fuclPZYH7vXwO8/a/tQ/fNAXfvKuuKjXvCd/4oH+8Dsv6YqH
tD9p5vn+ZNNNn3XYS3e/ruSBvpi3v9pX8UB/72p+5yU9lgf6wu+8pM1D4oO+
8JP3C2nykz/xQH/sd17SFQ9pf9Lm48e3/unAd179l5IH+mLe/mpfxQN9/aj5
nZf0WB7oD7/zkrZ/08AHfeHn/ZO39frHerc/8UB/7Hde0hUPaX/S79Lnw2Kf
/NZnPvOKmgf68nylq/7dJ37nJT2WB/pavPmdl7T97h8+6As/7y/ZrdeL693+
xAP9sd95SVc8pP1J/0ifD9s/aatdjv3CtSUP9MW8/dW+igf6wu+8pKv+3ecO
ze+8pO13//BBX/h530p6B2n7Ew/0x37nJV3xkPYnbT4u/OoLPvzbv/255IG+
mLe/2lfxQF/4nZd01b/7/FXzOy9p+93/VuoLP+/POLzXv9K7/YkH+mO/85Ku
eEj7kzYfL3jhLVvc/4aaB37+lHn7q30VD/x+B/9Eec63v+KBvpZvfudZJ7/7
hw/6ws/7RdLLS9ufeKA/9jsv6YqHtD9p8/GZHx/3zuW+86eSB37+lHn7q32p
f/eFf6I859tf8UBfezW/86yT3/1fpL7w877Hqb3eS+/2Jx7oj/3OS7riIe1P
2p8Pf1x3+402evSPJQ/05flKV/27P/zOSzr1bz37eZvmd17S9rt/+KAv/Lyv
sn6v/6x3+xMP9Md+5yVd8ZD2J+3Ph1V/t9Lau2xe80BfzNtf7at4oK9XN7/z
kq76R/Pzy+x3XtLmwf3DB33h5/3mK6fa+cmfeKA//M5LuuIh7U/afBy29ZxX
H3n6H0oe6It5+6t9FQ/0hd95SdufeKCvrzS/85LGn/qHD/rCz/sy2/T6K3q3
P/FAf+x3XtIVD2l/0q8WH3fedcpLL1iy5oG+mLe/2lfxQF/4nZd01T+an1+e
0/zOS9o8uH/4oC/8vF9291Q7P/kTD/THfuclXfGQ9idtPjba+xPL3fnR35c8
0Bfz9lf7Kh7oC7/zkq76d5/4nZc0/tQ/fNAXft6fKO13+xMP9IffeUlXPKT9
Sfvz4djFX7v00pdeU/JAX56v9Fge6Au/85IeywN94Xde0vYnPugLP+9nSPvd
/sQD/eF3XtIVD2l/0v58WODoBxZZ+8U1D/TFvP3VvooH+sLvvKTH8kBf+J2X
tP2JD/rCz/tHpP1uf+KB/vA7L+mKh7Q/afOxxct/usCH97265IG+mLe/2lfx
QF/4nZf0WB5mP+/X/M5L2v7EB33h5/35K/fa7/YnHugPv/OSrnhI+5M2H2f+
bM/7D/3rVSUP9MW8/dW+igf6Oqv5nZf0WB74/RP7nZe0+0580Bd+3q/6+VQ7
P/kTD/SH33lJVzyk/Umbj2e+ZZ07z3pdzQN9MW9/ta/igb6Wan7nJW1/4oG+
2O+8pPGn/uGDvvDzftBbe+13+xMP9IffeUlXPKT9SZ+lz4ePX/uEm2/6+pUl
D/Tl+UpX/aP5+4Kdm995ST9zJA/0xX7nWSd/4oO+8PN+jrTf7U880B9+5yVd
8ZD2J72UPh8u2+HCPy4y93clD/TFvP3VvooH+sPvvKTtTzzMfr/c/M5L2v7E
B33h532Xj/Ta7/YnHugPv/OSrnhI+5PeWXy85KGDfvvqt9U80Bfz9lf7Kh74
9Y7feUmP5YE/v8HvPGv7U//wQV/4eX/xw1Pt/ORPPNAffuclXfGQ9idtPg44
+E0XbHHiFSUP9MW8/dW+igf6w++8pMfyQF/4nZc0/tQ/fNAXft7fJ+13+xMP
9IffeUlXPKT9SZuPGyeLnX3gwjUP9MW8/dW+igf6wu+8pMfyQF/4nZe0/YkP
+sLP+xLL9Nrv9ice6A+/85KueEj7k/bnw+u/f/nJJ293eckDfXm+0mN5oC/8
zkt6LA/0hd95Sduf+KAv/LxfIO13+xMP9IffeUlXPKT9Sfvz4dUff9FbfrzP
b0se6It5+6t9FQ/0tWrzOy/psTzQF37nJW1/4oO+8PN+9869frXe7U880B/7
nZd0xUPan7T5mPOlE1Z70hqXlTzQF/P2V/sqHujrruZ3XtJjeeDeCr/zkjYP
7h8+6As/ect8udfkJ3/igf7Y77ykKx7S/qRXFR8n/mCVF256z69LHvj5U+bt
r/ZVPPD7nROaf6I859tf8UBf+J1nbb/7Nx/0hX/2+SJNfvInHuiP/c5LuuIh
7U/6LvGx3W9OW/z7x19a8sDPnzJvf7Uv9X+i+tq2+SfKc779FQ/0h9951sl/
YuCDvvDz/rLLer2d3u1PPNAf+52XdMVD2p/0Cfp8eO4/13jowW0uKXmgL89X
uurffT6v+Z2X9Fge+PsH/M5L2jy4f/igL/y8H37HVDs/+RMP9Md+5yVd8ZD2
J72tPh+ufsq5t7752ReXPNAX8/ZX+yoe6Au/85IeywN94Xde0vhT//BBX/h5
f2SRXvvd/sQD/eF3XtIVD2l/0s8TH4f8xxt+d9SVvyp5oC/m7a/2VTzQF37n
JT2WB/787wvN77yk3Xfig77w8759085P/sQD/bHfeUlXPKT9SZuP9f/zkp/d
9fkLSx7oi3n7q30VD/SF33lJV/27T/zOS/qQov/t1Rd+3n8n7Xf7Ew/0h995
SVc8pP1Jm4+HP7Dx99dd/4KSB/pi3v5qX8UDfeF3XtJjeZj9em9+5yVtf+KD
vvDzvsaHev2I3u1PPNAf+52XdMVD2p+0Px9O3f+qr3714V+WPPD9r+crPZYH
+sI/UZ7zkz9p+sLvvKTtd//wQV/4ef/Ogb32u/2JB/rD77ykKx7S/qT9+fCh
7262962n/qLkgd9/M29/tS/1777wT5Tn/ORPmr7wOy9p+xMf9IV/9v3xsb32
u/2JB/rD77ykKx7S/qTNx7K/vG6H1XY8r+SBvpi3v9qX+kfz5y3Pb37nJT2W
B/68jv3Os7Y/9Q8f9IWfvJukeU/+xAP94Xde0hUPaX/S/nz4ww3bbnrwCueW
PNCX5ytd9b+s+sLvvKSXHckDfeF3nrX97t980Bd+8na/sde8J3/i4aTWH37n
JV3xkPZbe57Ph2Xn/93+Z5z9s5IHvv4wb3+1r+Lh9fTV/BPlOd/+igf6wu88
a/vdv/mY9dX85L3lsSs6TX7yJx5m/TW/85JOPEQ+mt/a8/R99Ouvfe97Vzq7
5IG+PF/pqv9l1dcxze+8pMfyQH/sd5518i8b+KAv/LwvKu13+xMP9InfeUkn
HpLGn/Tz9fmw+B63vmq+b51R8kBfzNtf7at44OvFEs3vvKSPHskDv96f1vzO
s7Y/9b+o+sJP3mH79Jr85E880B/7nZd0xUPan/Qx4mOvM+96yncXPb3kgb6Y
t7/aV/FAX3s3v/OSXnwkD/TFfudZ2+/+zQd94Sfvi2f3mvfkTzzQH37nJV3x
kPYnvYT4mPOvB2/YcM8flzzMfl6izdtf7at4mP28RPM7L2n7Ew/0xX7nJW0e
Eh+zn5dofvI2f6DXvCd/4oHvP/A7L+mKh7Tf2vP0u9WqTzrzH3eeXPLA9y/M
21/tq3igr62bf6I85yd/4oG+8DsvafOQ+KAv/OQttnqvyU/+xAP9sd95SSce
Eh/4rT1Pv8fc9LznL3vOiSUP/PkN8/ZX+1L/7vPbzT9RnvOTP/FAX/idl7R5
2CrwQV/4yXvDjb0mP/kTD/THfuclnXhIfOC39vzs68sWr7rsA8ccV/Iw+3rR
5u2v9qX+3efeze+8pMfywM9fsN95SZuHYwIfs68XzQ8fK2091c5P/sTD7OtH
8zsv6cRD4gO/tefpd6s/brjHD/b5TsnD7Nd7m7e/2lfxQF/4nZe0/YkH+tq6
+Z2XNH73bz7oC//s5wv/0mvykz/xQH/sd17SiYfEB35rz9Pv3t87453/vOCb
JQ/0xbz91b6KB36/s0/zOy/pqv+t1Bf7nWdtv/s3H/SFn7x3n9Fr3pM/8UB/
+J2XdOIh8YHf2vP0u/ZRN5z83wd9ueSBvpi3v9pX8UBf+J2X9N4jeaCvdZrf
edb2u3/zQV/4yTv4R70mP/kTD/TJfuclnXhIGn/S++jz4bGNX7LqSivtXvLA
97+er/RYHugL/0R5zre/4oG+8DvP2n73bz7oCz95257Za96TP/FAf/idl3TF
Q9qftD8f5vvRtqev9JWd1qp4oC/m7a/2pf7dH37nJT2Wh/taX/idl7R5SHzQ
F374OH7nqXZ+8ice6A+/85KueEj7k2Z+1vf8G+564paHlDzM+vN8pUfywK93
/M6LeiQP9DV/8zvP2n73bz5m/TX/7O8nbtug0+RHf+Bh1mfzOy/qgoe0P2p9
Ppx78Kev22DHb5Q88Ptv5u2v9lU80B/+ifKcn/xJ0x9+5yVt//yBD/rCDx+r
fmmqnZ/8iQf6w++8pEsewv6kzcdel6x43ns2+XbJA19/mLe/2pf6d197N/9E
ec5P/qRnf//Q/M5L2v7Ex+z3y83P/I+leU/+xMPs98/N77ykKx7S/qTNxzEb
P+Ppz/jEsSUPsz+va/P2V/tS/2i+XuB3XtJ7jeRh9vfnze886+RPfMz+vrv5
4WOZN0+185M/8TD7++/md17SFQ9pf9J7+/Phqse2+/VhJ5Q80L/nKz2WB/o6
r/knynO+/RUP/PkffudZ2+/+zQd94Wf+R7+daucnf+KB/tjvvKQrHtL+pM3H
nBN3fc8v3n1yycPs7ys1X+mqf/d5V/M7L+mxPMz+/rP5nZc0fvdvPmZ/X9n8
5L3le73mPfkTD/SH33lJVzyk/UmfJz723mmH/Z53+49KHmZ/Xqf5Slf9o/n1
jt95Sc8ZycPs60/zO8/afvdvPmZfL5qfvM227zXvyZ94mH39aH7nJV3xkPYn
zTzfnzztlVuf9OndTit5oC/m7a/2VTzMfl6r+Z2X9FgeZj//1fzOS9o8JD5m
P6/V/OTtv0qvyU/+xMPs57ea33lJVzyk/UkzT9/HzH3XNdcseEbJw+z7Dc1X
uuofPfv77uZ3XtJjeaCvo5vfedb2u3/zMfv77uYn74p7ek1+8ice6I/9zku6
4iHtT3oJ8bHyT9782Cu/dlbJA315vtJV/8eov1Wa33lJ2594oC/2Oy9p83B0
4IO+8M/+fvRHveY9+RMP/P0lfuclXfGQ9lt7nn7P3X3dFb+0ws9KHmbfr2q+
0lX/aH69n9f8zkt65ZE8zP78pvmdZ22/+zcfs+9Xm5+8t+/aa/KTP/Ew+/61
+Z2XdOIh8YHf2vN8f/L2NVd7+z9OPafkgb6Yt7/aV/FAX29rfuclPZYH+sLv
PGv73b/5oC/85D28Rq/JT/7EA/2x33lJJx4SH/itPU+/H3tsqZ8t/4LzSh74
/Tfz9lf7Kh64t/p480+U53z7Kx7oi/3Os7bf/ZsP+sJP3s2P9pr35E880B9+
5yWdeEh84Lf2PP2ecf2hV1zx4V+UPPD3D8zbX+1L/aP59X5m80+U53z7Kx7o
i/3Os7bf/ZsP+sJP3lHX9Zr35E880Cd+5yWdeEgaf9IfFx/z/WKRW/c65Zcl
D7O/r2zz9lf7Uv/o2d9XNr/zkj5jJA/0hd951va7f/Mx+/vK5ifvhef2mvfk
TzzM/v6y+Z2XdMVD2p/0mfp8WPt/D3zwZQ+cX/Iw+3ktzVd6LA/0t1bzOy/p
sTzQH37nJW1/4oO+8M++X5JeW9r+xAP9sd95SVc8pP1J+/PhoP0WWPzatS8s
eaAv5u2v9lU88PXic83vvKTH8kBf7HeedfK7/3PVF34+Xzbad6qdn/yJB/rD
77ykKx7S/qTXEh+/ff9nlj/4oF+VPPD9C/P2V/sqHujr8uafKM/59lc80Bf7
nWed/IkP+sI/+7yS5j35Ew/0h995SVc8pP1Jf058PGvD+1+72uUXlTzQF/P2
V/tS/79Vf/idl7T9iQf6wu+8pM1D4oO+8JP3AWnekz/xQH/4nZd0xUPan/Tl
4mPLFXd5861LX1LyQF/M21/tq3igL/zOS3osD/SF33lJm4fEB33hn329e1Gv
eU/+xMMJrT/8zku64iHtt/Y8/R735Du3+uqWl5Y80Bfz9lf7Kh7o63vN77yk
x/JAX99vfuclbR4SH/SFn7wDFu41+cmfeKA/9jsv6cRD4gO/tefp966/f2jX
dY/7dckDfTFvf7Wv4oHfL9/d/M5L+riRPNAXfudZ2+/+zQd94SdvD2nykz/x
QJ/sd17SiYek8Sf9PfGx2q9v+txdd/6m5IE/v2He/mpfxQP9rd78E+U5P/kT
D/SF33lJm4e7Ah/0hZ+8Yy/uNfnJn3jgz3/Z77ykKx7SfmvPz34+56Qtjjrq
Nb8teeD7X89XuurffeKfKM/5yZ94mP38TvM7L2nzsFrgY/bzNs1P3k9P6DXv
yZ94mP38TfM7L+nEQ+IDv7Xn+XzY7lcf2exFa11e8kD/zNtf7Uv9uy/8E+U5
P/mTpi/8zkvaPCQ+6As/eTdc2Gvekz/xQH/4nZd04iHxgd/a8/S98GrHb/vI
jTUP9OX5Slf9o/l+48nN77ykx/JAX+x3nrX97t980Bd+8h5+ba95T/7EA/3h
d17SiYfEB35rz/P5cOL3btvxqgOuKHmgL+btr/ZVPNDfSc3vvKTtTzzQF37n
JW0eEh/0hZ+8OdLkJ3/igf7Y77ykEw+JD/zWnqfft01W+NQJL/ldyQN9MW9/
ta/iYfbzEs3vvKTH8kBf+J2XtHk4MfAx+3mJ5ifvyGf1mvfkTzzQH37nJZ14
SHzgt/Y8/c793Daf/exlNQ/0xbz91b6KB/q6r/mdl/RYHuiL/c5L2jwkPugL
P3l7SfOe/IkH+sPvvKQTD4kP/Naep+9vPHj0IZvtfGXJA315vtJV/3PVF37n
JW1/4oG+8DsvafOQ+KAv/OSdJc178ice6A+/85JOPCQ+8Ft7nn7X3OEvX1tl
qatKHujL85UeywPfr+J3XtJjeaAv/M6ztt/9mw/6wk/e4tv3mvfkTzzw57/4
nZd04sHa+609z9eX6/+8zLcXOqvmgb6Yt7/aV/FAf/idl/RYHujrhuZ3XtLm
IfFBX/jJ21ya/ORPPNAf+52XdOIh8YHf2vP0ve+b333Cde+7uuSBvjxf6bE8
0Nd+ze+8pKv+r1df7Hde0ubhhsAHfeEn77nSvCd/4oE+8Tsv6cRD0viTNh8r
/uzw006b/5qSB/ryfKWr/tF8vcDvvKT3HckDfeF3nrX97t980Bd+8h48u9e8
J3/igf7wOy/pioe0P+n9xMevX3blOYf8X80Df/7n+UqP5YH+8E+U5/zkT5r+
8DsvafsTH/SFHz5OWmmqnZ/8iQf6w++8pCse0v6kmef7k48d9bRLtn3j70se
ZvcObd7+al/qH82vd/zOS3osD/SF33nWyZ/4oC/8zD9LmvfkTzzQH37nJV3x
kPYnzTx9P33xt161xh01D/Tl+UqP5YG+ntH8zkt6LA/0xX7nWdvv/s0HfeEn
7+zFes178ice6A+/85KueEj7kzYfZ+z1+euWOPQPJQ/8/afnK131j+bnjfFP
lOd8+yse6Au/86ztd//mg77wk/eavXvNe/InHugPv/OSrnhI+5N+hvh4z10X
3X77qn8seaAvz1e66t99vbf5nZf0WB7oi/3Os7bf/ZsP+sJP3pvm9Jr35E88
0B9+5yVd8ZD2J8083588ttWC957zh5oH+mLe/mpfxQP94Xde0vYnHu5ufc2/
9dTvvKTNQ+KDvvDDxzVNOz/5Ew/0x37nJV3xkPYnzTx9H33Feo98bY8/lTzQ
l+crPZYH+jqm+Z2XdNW/+2S/85J+LPRvPugLP+8vkva7/YkH+sPvvKQrHtL+
pP35sN66+yz00ef/ueSBvpi3v9pX8UBf6ze/85K2P/FAX29ofuclbX/ig77w
8/ny7XWm2vnJn3igP/Y7L+mKh7Q/6WPEx+0/+vkSbzi/5oHvX5i3v9pX8UBf
f2v+ifKcn/yJB/rC77yk7X9D4IO+8DN/4Sm9Jj/5Ew/0x37nJV3xkPYnvb74
OGT5h5/9nA9dW/LAn98wb3+1L/XvPj/f/BPlOT/5Ew/0h995Sdt/e+CDvvDD
xw+adn7yJx7oj/3OS7riIe1P+m/6fFj5q6u/6N6n/qXkgb48X+mqfzR/3rJK
8zsv6bE80Bf7nWed/IcEPugLP/M3faXXvCd/4oG/v8TvvKQrHtJ+a8/T75VP
3G2VS35Y80Bfnq901f/K6uvq5nde0iuP5IG+rmp+51nb7/7NB33hJ+/10uQn
f+KBn79hv/OSTjxYe7+15/n68qldT13j2/91XckDfTFvf7Wv4oG+8Dsv6StH
8kBf+J1nbb/7Nx/0hZ+8fT/Ra96TP/HAr3/8zks68WDt/daep99n33r3+p/6
d80DfTFvf7Wv4oG+ntP8zkt6LA+zv+9ufudZ2+/+zQd94SfvC7f0mvzkTzzQ
J/udl3TiIWn8Sfvz4bx3rbzxxkf8teSB7389X+mq/2erL/wT5Tnf/ooH+sLv
PGv73b/5oC/85N24Sa95T/7EA/3hd17SFQ9pf9LP0efDvH8ObNnrSx7oi3n7
q32pf/eH33lJj+WBvvA7L2nzkPigL/yzny+U5j35Ew/0h995SVc8pP1JM0/f
T3jO1afs+fGaB/ryfKXH8sCv9yc2v/OSHssDfbHfedb2u3/zQV/4Z/99H2ne
kz/xQH/4nZd0xUPan7Q/H9511b2v2f6XNQ/8/pt5+6t9FQ/0h3+iPOcnf+KB
vjZtfuclbR4SH/SFn7ylpMlP/sQD/bHfeUlXPKT9ST9RfHzvkCV/uskzbyh5
oC/m7a/2pf7dF37nJV31/y71hd95SZuHTQMf9IV/di8mzXvyJx7oD7/zkq54
SPuTNh8Prv+Kddb5YM0DfTFvf7Wv4oGvFw81v/OSHssDfeF3nrX97t980Bd+
8n4mTX7yJx7oj/3OS7riIe1P2p8Pb35k4wtXOrPmgb48X+mq/wfVF37nJT2W
B/rC7zxr+92/+aAv/LOvT9K8J3/igf7wOy/pioe0P+mHxMdRp330Tc966o0l
D3z98Xylx/JAX0c3/0R5zre/4oG+2O88a/vdv/mgL/zkvV+a9+RPPPDnd/id
l3TFQ9pv7Xm+vszZ8QuXP+F9NQ/0xbz91b7U/1Hq767md17S9iceZv/9sOZ3
XtLmIfFBX/jJ+6E078mfeKA//M5LOvGQ+MBv7Xn6XvdFJ24y5wc1D/Tl+UpX
/c9RX/idl7T9iQf6Wq/5nZe0eUh80Bf+2X3FCr0mP/kTD/THfuclnXhIfOC3
9jz9fvW6S/70p/luKnmgL89XeiwP9IXfeUlX/a+rvvA7L2nzsF7gg77wz/57
rdK8J3/igf7wOy/pxEPiA7+15+n31q/9bcsL31HzQF+er/RYHvh+A7/zkh7L
A33hd561/e7ffNAXfvJOleY9+RMP9IffeUknHhIf+K09P/vvW2688C2nfLfm
gb6Yt7/aV/FAX/idl/RYHvj3t1dvfudZ2+/+zQd94Z99fXrrVDs/+RMP9Md+
5yWdeEh84Lf2PH0fvNCLt//Wv2oe6MvzlR7LA33hd17SqX9r+sTvPGv73b/5
oC/88PGepp2f/IkH+sTvvKQTD0njT9qfD38+5w1zDvrPm0se+PtP5u2v9lU8
cG91bfNPlOd8+yse6Iv9zrNO/sQHfeFn/ufSvCd/4oH+8Dsv6YqHtD9p8/Hy
T233iU98s+aB338zb3+1L/WP5tc7/onynG9/xQN94Xeetf3u33zQF37y/ne3
XvOe/IkHfv4Pv/OSrnhI+609T797rbLvA1v+s+aBvpi3v9qX+kfz633v5nde
0mN54H6L/c6ztt/9mw/6wg8fOzbt/ORPPNAffuclnXhIfOC39jx9X377t/d8
0+tvKXmgL89Xuup/L/WH33lJ2594oE/8zkt679C/+aAv/LwfLu13+xMP9Inf
eUknHpLGn/Te+nxY7tvnPuG1X655oC/m7a/2VTzw6/0Fze+8pMfywK939jvP
2v7U/+HqCz95lx3Ta96TP/FAf/idl3TFQ9qftPn4xGZ/PegFN9Y88P0L8/ZX
+yoe6Av/RHnOt7/igb7wO8/afvdvPugLP3nrS/Oe/IkH+sPvvKQrHtL+pF8g
Pi5c4tFFF1v11pIH+mLe/mpf6t/94Xde0mN5oC/8zkvaPCQ+6As/eZ+U5j35
Ew/8+Qt+5yVd8ZD2W3uevp91yXO+8sD+NQ/05flKj+WBX+/4nZf0WB5m/72m
5neetf3u33zQF/7Zn1df3Gvekz/xwPev+J2XdOLB2vutPU+/23/2dc+65fc1
D/Tl+UqP5YG+8Dsv6bE80NcOze88a/vdv/mgL/yzew1p8pM/8UB/7Hde0omH
xAd+a8/z9eWna2z+rcv/47aSB77+MG9/ta/igf7wT5Tn/ORPmr7wOy9p87BD
4IO+8M++PknznvyJB75+4Hde0okHa++39jz9Lnbvp17w0/+ueeDPb5i3v9qX
+kfz6x3/RHnOt7/igb7wO8/afvdvPugLP3nn39Nr3pM/8UCf+J2XdOIhafxJ
m4+tTvj6ccf9puaB/pm3v9qX+nd/Wzf/RHnOT/6k6Qu/85I2D4kP+sJP3r3H
95r85E880B/7nZd0xUPan7Q/H06Zd89ze8kD/Xu+0lX/7vNHzT9RnvOTP/HQ
32/dPshL2jxsFfigL/zkLSLNe/InHvr7q9sHeUlXPKT9SW+tz4fp/VTNQ39v
dfvAX+1L/aP7e6thXtKnjOShv98a5lnb7/7NB33hJ28Bad6TP/HQ318N85Ku
eEj7k2a+v8+qeejvrbI/7at46O+thnlJ2594oL9Nm995Sduf+KAv/PDx9Kad
n/yJB75/Zb/zkq54SPutPc/nw3Hz7nn+VvJAX8zbX+2reKAv/M5Luur/XeoL
v/OStn/TwAd94Wf+HdK8J3/igf7wOy/pxEPiA7+15/v7rJqH/t7qbwN/ta/i
gb4ean7nJT2WB/piv/OSNg+JD/rCP/vvg0vznvyJB/rD77ykEw+JD/zWnu/v
s2oe+nur7E/7Kh76e6thXtL2Jx76+61hXtLmIfFBX/hnX5+keU/+xEN/fzXM
SzrxkPjAb+35/j7r7yUP/b3V36M/7at44PtV/M5LeiwP9IXfedb2u3/zQV/4
ydtGmvfkTzzQJ37nJZ14SBp/0sz391k1D/z+m3n7q30VD/R1V/NPlOd8+yse
+vutYZ61/e7ffNAXfvJOkeY9+RMP/f3VMC/pioe0P2nm+/usmof+3ir7077U
/xz1tV7zOy/pOSN56O+3hnnW9rt/80Ff+Mk7foVe8578iQf6w++8pCse0v6k
7xIfh8+75/lHyQN9eb7SVf/rqj/8zkva/sTD7Oe1mt95SZuHxAd94Sdva2ne
kz/xQH/4nZd0xUPan/R64uOWefc8NQ/8+Z/nKz2Wh/7e6vF39jnf/oqH/n5r
mGdtv/s3H/SFn7xTpHlP/sQD/eF3XtIVD2l/0sz391k1D/291dBf7Uv936K+
Vm9+5yV9y0ge+vutYZ61/e7ffNAX/tnXp7dOtfOTP/FAf/idl3TFQ9qfNPP9
fVbNQ39vlf1pX8XD7L/33vzOS3q1kTzQF37nWdvv/s0HfeEnbzNp8pM/8cDv
n9nvvKQrHtJ+a8/z+TC95/lnyQPf/zJvf7Wv4oH+/tz8E+U5P/kTD/391j8H
eUmbh4MDH/SFn7xzpclP/sQD/bHfeUknHhIf+K09T78vm3fPU/NAX8zbX+1L
/bvPlze/85IeywN9rdz8zkvaPFwb+KAv/LN/X2e3XpOf/IkH+mO/85JOPCQ+
8Ft7nn73mXfPU/NAX8zbX+2reOjvrYZ5SdufeKAv/M5L2jysHPigL/zk7SRN
fvInHvr7q2Fe0omHxAd+a8/T95Xz7nnuKHmgL89Xuuofzfcbv2t+5yU9lof7
Wl/4nWdtv/s3H/SFHz7+s2nnJ3/igf7Y77ykEw+JD/zWnufzYfl59zw1D3z9
Yd7+al/FA329sPknynO+/RUP9LVC8zvP2n73bz7oCz955xzTa/KTP/FAf+x3
XtKJh8QHfmvP0+8u8+55ah7oj3n7q32p/+XV3yeaf6I85yd/4oH+dm1+5yVt
/wqBD/rCz/uG0rtK25946O+vhnlJJx6Sxp/0C8XHr+bd89xZ8sCf3zBvf7Uv
9b+L+rqw+SfKc37yJx749Y7feUmbB/e/ofrCT94u0uQnf+Khv7+6c5CXdMVD
2m/tefpdet49T80DfTFvf7Uv9Y/u762GeUmP5YG+Js3vPGv73b/5oC/85H39
4l6Tn/yJh/7+apiXdOLB2vutPd/fZ9U80D/z9lf7Kh7oD/9Eec5P/sQDfeF3
XtLmYRL4oC/85D1bmvfkTzz091fDvKQTD4kP/Naep9+z5t3zzCl5oC/m7a/2
pf7R/b3VnEFe0mN56O+35gzyrO13/+aDvvCTt4E078mfeOjvr+YM8pJOPFh7
v7Xn6XfRefc8NQ/0xbz91b6KB/pbrPmdl7T9iYf+fmuYl7R5SHzQF37yfnFP
r3lP/sRDf381zEs68ZA0/qR/qs+H6T1TzUN/v5X9aV/FQ39v9fg7+5xvf8XD
7O+7m9951va7f/NBX/jJ+9fxveY9+RMP/f3VMC/pioe0P+nF9Pnwx1e852sX
L35XyQN9MW9/tS/1v5X6w++8pO1PPPDnN/idl7R5SHzQF3742L9p5yd/4oH+
8Dsv6YqHtD/prcXHAl/8+7vPWa3mgb6Yt7/aV/HAr3f8zkt6LA+znzdufudZ
2+/+zQd94XeedfInHugPv/OSrnhI+5P258NL/r77s0/buuaB7389X+mxPNDf
S5t/ojznJ3/S9Md+5yU9lgf6wg8fT27a+cmfNP3hd17SFQ9pf9L+fPivDZ58
3fEH1zzQF/P2V/tS/y9RX/idl7T9iQf6emfzOy9p+xMf9IWf+ZdIk5/8iQf6
Y7/zkq54SPuTfqn4+Mx3vnHMMT+ueaAv5u2v9lU88PUCv/OSrvp3n/idZ538
7wx80Bd++Hhv085P/sQD/eF3XtIVD2l/0ubj2EdfvO3Xrq15oC/m7a/2VTzQ
F37nJT2Wh9n9aPM7zzr5Ex/0hZ/5z0qTn/yJB/pjv/OSrnhI+5M2H7/d/Ccr
HPKku0se+PrDvP3VvooH+sI/UZ7z7a94oC/8zrO23/2bD/rCT97J0rwnf+KB
/vA7L+mKh7Q/aX8+3H/6Brfv8/KaB37/7flKV/27L/wT5Tnf/ooH+sLvPGv7
3b/5oC/85P1JmvfkTzzQH37nJV3xkPYn7c+H5Z5+zfG7bVrzQF/M21/tS/27
L/zOS3osD7P/fnPzO8/afvdvPugLP3lXLdlr8pM/8UB/7Hde0hUPaX/SzNP3
Rju9f8cd9655oC/PV3osD/T3puZ3XtKpf2v6Yr/zkjYPLwh80Bf+2e/PpXlP
/sQD/eF3XtIVD2l/0v582OXSuStv+/2ah9nP27R5+6t9FQ/8esfvvKQ3GsnD
7Oclmt951va7f/NBX/jJe7c078mfeODvL/E7L+mKh7Tf2vP0feSL97vn3b+r
eaAvz1d6LA/0hd95SY/lgfst/M6ztt/9mw/6wg8fmzft/ORPPNAffuclnXhI
fOC39jz9XrDv009760M1D/Tl+UqP5YG+8Dsv6bE80Bd+51nb7/7NB33hJ+8E
ad6TP/FAf/idl3TiIfGB39rzfH2586/f2W39F95T8sD3v8zbX+2reKA//BPl
OT/5k6Yv/M5L2jwkPugLP3k3SPOe/IkH+sPvvKQTD4kP/Naep9+l1nzlGmu8
peaB338zb3+1L/WP5tf70s0/UZ7z7a94oC/2O8/afvdvPugL/+z3+6/rNe/J
n3igT/zOSzrxkDT+pM3H2t847+GVP1nzQF/M21/tS/0vpb7WaX7nJb3USB7o
C7/zrO13/+aDvvCTt7o0+cmfeKA/9jsv6YqHtD/ppfX58OG5bztnhaNrHujf
85Wu+l9bfW3f/BPlOd/+igf6wu88a/vdv/mY/bxo85O3vDT5yZ94oD/2Oy/p
ioe0P+l19Plw6Nuu3+fZF9U88PWHefurfan/D6uvw5p/ojzn21/xQF/sd561
/e7ffNAX/tnPm0nznvyJB/rD77ykKx7S/qS3Fx9nnbjT+kvcXfNAf8zbX+1L
/R+q/vBPlOf85E888Psn/M5L2jwkPugLP+/fbdr5yZ94oD/8zku64iHtT/ow
8XHTwo8tuNAy95Y80Bfz9lf7Uv/u6+bmd17SY3ng1zv7nZf0WUX/31Vf+Mk7
U5r35E880B9+5yVd8ZD2J20+nvr+L1788Lo1D/TFvP3VvooHvl4s0vzOS/qm
kTzQF/udZ22/+zcf9IWfvF9v12vekz/xwP0VfuclXfGQ9lt7nn5ffd5zD7ln
h5oH+mLe/mpfxQN94Xde0k8dyQN94Xeetf3u33zQF/7Zv48izXvyJx7oD7/z
kk48JD7wW3ueft/33JPeevtXax7oi3n7q30VD/S3RfM7L+mxPNAX+52XtHlI
fNAXfvJeKM178ice6BO/85JOPCSNP2nzccDuay5x3c9qHvj9E/P2V/sqHvj1
fmDzT5TnfPsrHuiL/c6ztt/9mw/6wk/eVtK8J3/igT//xe+8pCse0n5rz9Pv
yVdfeuWVt9Y80Bfz9lf7Uv8HqD/8zkva/sQDfeF3XtLmIfFBX/jJ20Oa9+RP
PNAffuclnXhIfOC39jz9Tu955pY80D/z9lf7Kh76e6u5uu+aO8hP/qTpC7/z
kjYPiQ/6wk/eftK8J3/igf7wOy/pxEPiA7+15+l3es9T89DfW80d+Kt9qX90
f281zEt6LA/9vdUwz9p+928+6As/eU+Q5j35Ew/9/dUwL+nEQ+IDv7Xn+/us
mof+3mror/ZVPPT3VsO8pMfyQF/sd17S5iHxQV/4yVtImvfkTzzQH37nJZ14
SHzgt/Z8f59V89DfWw391b6KB/p6Z/M7L2n7Ew/9/dYwL2nzkPigL/yze0Np
3pM/8UB/+J2XdOIh8YHf2vP0u8e8e56aB/pi3v5qX8UDfX2m+Z2XtP2JB/ra
s/mdl7R5SHzQF37y3iNNfvInHuiP/c5LOvGQ+MBv7fn+Pqvmob+3GvqrfRUP
/b3VMC9p+xMP9IXfeUmbhz0DH/SFn7x9pXlP/sRDf381zEs68ZD4wG/t+f4+
676Sh/7e6r6Bv9pX8dDfW903yEt6LA/9/dZ9gzxr+92/+aAv/OT9UJr35E88
9PdX9w3ykk48JI0/aX8+TO95ah76+637oj/tq3jo760ef0c73/6Kh/5+a5hn
bb/7Nx/0hZ+8P0vznvyJh/7+apiXdMVD2p+0Px+m9zw1D/291dBf7Uv9uy/8
zkt6LA/0hd951va7f/NBX/jJu3LJXvOe/ImH/v5qmJd0xUPanzTz/X1WzUN/
b5X9aV/FA/3hd17SY3no77eGeUmbh8QHfeGf/f5cmvzkTzzQH/udl3TFQ9qf
tD8fpvc8NQ/8+R/z9lf7Kh76e6vH39HOt7/igf7wO886+d8U+KAv/PDxrqad
n/yJB/rD77ykKx7S/qTNx/Sep+ahv7ca+qt9qX/3hd95SY/lob/fGuZZ2+/+
zQd94Wf+PU07P/kTD/391TAv6YqHtD9p8zG956l56O+thv5qX8UDfV3Y/M5L
eiwP9MV+51nb7/7NB33hJ+94ad6TP/FAf/idl3TFQ9qftD8f7ph3z/Ovkgf6
8nylq/4vUH93Nr/zkrY/8dDfb/1rkJe0eUh80Bd+8m6U5j35Ew/9/dW/BnlJ
Vzyk/UlfKD6m91M1D/291b+iP+2reKCvpZvfeUnbn3jo77eGeUmbh8QHfeEn
79HX9Zr35E889PdXw7ykKx7S/qSZ7++zah76e6uhv9pX8dDfWw3zkrY/8UBf
7Hde0uYh8UFf+MlbQ5r35E889PdXw7ykKx7S/qSXFh/Te6aah/7eauiv9lU8
9PdWw7yk1x7Jw+zfr2h+51nb7/7NB33hn/33gqR5T/7Ew+zfn2h+5yVd8ZD2
W3uefqf3UzUP/f3W0F/tq3jo760ef2ef8+2veOjvt4Z51va7f/NBX/jJ20aa
9+RPPPT3V8O8pBMPiQ/81p6n3+k9T81Df7819Ff7Uv+Hqr+zm3+iPOcnf+Kh
v98a5iVtHhIf9IV/9vdlTTs/+RMP9Ml+5yWdeEgaf9KH6fNhej/175IH/vzG
85Wu+nefNzf/RHnOT/7EA33hd17SZxf9H6u+8PP58pOmnZ/8iYf+/urfg7yk
Kx7S/qTP1ufD9H6q5qG/t/r3wF/tS/2j+3urYV7SY3no77eGedbJf1Pgg77w
M3/Zdr3mPfkTD/391TAv6YqHtN/a8/19Vs0D/TNvf7Wv4oH+8E+U5/zkTzz0
91vDvKTNQ+KDvvCT91Rp3pM/8cD3H/idl3Tiwdr7rT3f32fVPPT3VkN/tS/1
j+7vrYZ5SY/lob/fGuZZ2+/+zQd94SdvBWnekz/x0N9fDfOSTjxYe7+15+l7
ej9V89DfW2V/2lfxQH8HNr/zkrY/8dDfbw3zkjYPiQ/6wk/eltK8J3/igT7x
Oy/pxEPS+JPeQnz8cN49T80DfXm+0lX/aH69n9L8zkv6gJE89Pdbwzxr+92/
+aAv/OR9Rpr85E880B/7nZd0xUPanzTz/X3W/SUP/b3V/QN/ta/iob+3un+Q
l7T9iYf+fuv+QV7S5uHkwAd94SdvX2nekz/xQH/4nZd0xUPan/Qp4mP+efc8
NQ/0xbz91b6KB36943de0mN56O+3hnnW9rt/80Ff+Ml7kjT5yZ94oD/2Oy/p
ioe0P2nzMb3nqXng+1/m7a/2VTz091aPv6Odn/xJ09dKze+8pM3DAoEP+sJP
3oLS5Cd/4oH+2O+8pCse0v6kzcf0fqrmob+3Gvqrfal/94XfeUlX/b9UfeF3
XtLmYaXAB33hJ+9l0rwnf+KB/vA7L+mKh7Q/afMxveepeaAv5u2v9lU88PVi
z+Z3XtJjeejvt4Z51va7f/NBX/jJ21ya9+RPPNAffuclXfGQ9idtPqb3PDUP
/b3V0F/tq3igP/zOS9r+xAN9Hdf8zkvaPCQ+6As/eftJk5/8iYf+/mqYl3TF
Q9qf9J76fLhs3j3PAyUPfP3xfKXH8tDfWz0we2ef85M/6f5+64FBXtLm4bjA
B33hJ+8H0rwnf+KBP7/D77ykKx7SfmvP0+/0nqfmob/feiD6077UP7q/t3r8
He18+yse+vutYZ61/e7ffNAXfvKuleY9+RMP/f3VMC/pxEPiA7+15+n3+fPu
eWoe6Mvzla76d1/LNb/zkh7LQ3+/Ncyztt/9mw/6wk/e75bsNe/Jn3igP/zO
SzrxkPjAb+35/j6r5qG/t8r+tK/iob+3GuYlbX/igb7wOy9p85D4oC/85D1R
mvfkTzz091fDvKQTD4kP/Nae7++zah76e6uhv9pX8dDfWw3zkh7LA33t2vzO
s7bf/ZsP+sJP3ibS5Cd/4qH/99uGeUknHhIf+K09T79HzLvnqXng6w/z9lf7
Kh7o78jmnyjP+cmfdH+/NcxL2jzsGvigL/zw8d6mnZ/8iYf+/mqYl3TiIfGB
39rz9PvLefc8NQ/0xbz91b7U/xHq6/zmd17S9ice6POC5nde0keG/s0HfeGH
j+837fzkTzzQJ/udl3TiIWn8SR8pPqb3Uw+WPPT3Vg8O/NW+iof+3urBQV7S
9ice+vutBwd5Sdt/QeCDvvDPfl5RmvfkTzz091cPDvKSrnhI+5M+X3xM73lq
Hvj9N/P2V/sqHvh+Y6nmnyjP+fZXPNDXs5rfedb2u3/zQV/4yXvkdb0mP/kT
D/z8H/udl3TFQ9pv7Xn6XmvePU/NA315vtJV/0urr7Wb33lJLz2SB/rC7zxr
+92/+aAv/OS9Tpr85E880B/7nZd04iHxgd/a8/19Vs1D/++/ZX/aV/HQ31s9
/s4+59tf8dDfbw3zrO13/+aDvvDPfr8vzXvyJx7oE7/zkk48JI0/aeb7+6ya
h/5+a+iv9qX+P6y+Dmv+ifKcb3/FA33hd561/e7ffNAXfvK2lSY/+RMP/f3V
MC/pioe0P2nm6Xt6z1Tz0N9vZX/al/p3n2c2/0R5zk/+xEN/vzXMS9o8HBr4
oC/8s78va9r5yZ94oD/2Oy/pioe0P+nD9PkwvWd6qOShv7d6aOCv9qX+3Sd+
5yU9lgd+veN3XtJnFv0fp77wk3e6NO/Jn3jgz1/wOy/pioe039rz9L3ovHue
mgf68nylx/LQ31sN85IeywN94Xeetf3u33zQF37yfrtdr8lP/sRDf381zEs6
8WDt/dae7++zah76e6vsT/sqHujrNc3vvKTH8kBfr21+51nb7/7NB33hJ+8p
0uQnf+KB/tjvvKQTD4kP/Nae7++zah76e6uhv9pX8dDfWw3zkrY/8UBfWza/
85I2D68NfNAXfvJeJE1+8ice+vurYV7SiQdr77f2fH+fVfPQ//tv2Z/2VTz0
/17b4+/sc779FQ/0dVDzO8/afvdvPugLP3lbSJOf/ImH/v5qmJd04iFp/Elv
oc+H6f1UzUN/bzX0V/tS/weov5Ob33lJ2594oK9Tmt95SZuHgwIf9IWfvD2l
yU/+xAP9sd95SVc8pP1JM9/fZz1c8tD/+28PR3/aV/HQ31s9rPuuhwf5yZ94
oK8/Nb/zkjYPpwQ+6As/eZ+VJj/5Ew/9/dXDg7ykKx7S/qRP1ufD9J6n5oHf
fzNvf7Uv9Y9+fetrgeafKM/59lc8zP573c3vPGv73b/5oC/85C0oTX7yJx7o
j/3OS7riIe1P2nxM75lqHuiLefurfal/dH9vNcxLev6RPNAffudZJ/8TAh/0
hR8+ntS085M/8dD/+23DvKQrHtJ+a8/391k1D/291dBf7at4oL93Nr/zkh7L
A32x33lJ279S4IO+8DP/cmnekz/xQH/4nZd04iHxgd/a8/Q7/ffXah7oi3n7
q30VD/SF33lJ2594oK/PNL/zkjYPiQ/6wk/eZtLkJ3/igf7Y77ykEw+JD/zW
nqff786756l5oC/m7a/2VTz091bDvKSr/vdQX+x3nrX97t980Bd+8vaX5j35
Ew/9/dUwL+nEQ+IDv7Xn6Xt6z/NIyQN9eb7SVf/fVX+XNb/zkrY/8dDfbz0y
yEvaPCQ+6As/eSdJk5/8iQf6ZL/zkk48JI0/6WPFx/Sep+ahv996JPrTvooH
fr0/0PwT5Tnf/ooH+mK/86ztd//mg77wk/cXad6TP/FAf/idl3TFQ9qf9GXi
Y3rPU/NAX56vdNX//eoLv/OSvn8kD/391jDP2n73bz7oCz95VyzZa96TP/FA
f/idl3TFQ9qf9APiY3rPU/PQ31tlf9pX8UB/b2p+5yU9lgf6Yr/zkjYPiQ/6
wj/77/tI8578iQf6w++8pCse0v6kmef7253n3fPUPNAX8/ZX+yoe6Au/85K2
P/FAf7s0v/OStj/xQV/4eX+j9C7S9ice6I/9zku64iHtT/pN4mN6z1PzQF/M
21/tq3jo/722YV7SVf/o/n5rmJe0eXD/b1Rf+Hn/WNPOT/7EQ39/NcxLuuIh
7U/anw/Tfw+s5oHvXzxf6bE80NcFzT9RnvOTP2n6wu+8pI8s+v+Y+sLP+8el
L5S2P/FAf+x3XtIVD2l/0uZjej/1aMlDf2/1aPSnfal/dH9v9eggL+mxPNDX
nOZ3nnXyu/+Pqy/8vN8sPUfa/sRDf3/16CAv6YqHtD/pC8TH9J6n5oG+PF/p
qv871B9+5yVtf+KBvvA7L2n73f/N6gv/7L/38rpe+93+xAP94Xde0hUPaX/S
zPP9yfSep+aBvpi3v9pX8cCv93Wa33lJj+WBrz/rNr/zrO1P/cMHfeHnffGm
nZ/8iQf6Y7/zkq54SPuTNh/T+6mah/7eauiv9lU80Bd+5yW99kge6Au/86zt
T/0vrr7w8/42ab/bn3igP/zOS7riIe1Peh3xMb1nqnno77eG/mpfxUN/b/X4
O/ucn/xJ9/dbw7yk7U980Bd+3reTPlTa/sRDf381zEu64iHtT9p8nDHvnqfm
gb6Yt7/al/p3n2c2v/OSHssDfZ3V/M5L2n73v536ws/796TPkrY/8dDfXw3z
kq54SPuTPkyfDzfMu+d5rOSBvjxf6ap/NF8v8Dsv6TNG8kBf+J1nnfzu/3vq
Cz/vP5X2u/2JB/rD77ykKx7S/qTP1OfD9J6n5oG+mLe/2lfxQF+LNr/zkh7L
A30t1vzOs07+xAd94Z/991626/Vierc/8UB/7Hde0hUPaX/SzNP39J6n5oGv
P56vdNX/IuoP/0R5zk/+xAPf/+J3XtLmwf3DB33h5/0ZTTs/+RMP9Iffef+v
sTMP33wuv/jMYMaSJbJ8SYxStlJCwsWEFBWyttgqQpKfpSxjzTbWX2Qple0X
KoRClmTshezL2PedsY19+13X837O87nu132d637671zvc84t53zf7+cxbl+H
qz44f4dnxf3Q9qfqPsR9q6yv/Fz+zGuLvp7zHB62D3F/K89zePki/48hL+l1
vhgwz6l3fVB+0nOew1UfnL/D4sf9rLoPyp/8Clf5C+u9kH4E8zif+qoPykt6
ziN2etcP5SW9zlcG5jn1rg/aH5ae8xyu+uD8iclXvm1/qu5D3Lfyeufn8md+
5/X1nOfwsH1QXvLnPIepd/1QXtLr/ChgnlPv+hD3r/I8h10fXD+kJyZ/8OcL
v/nsjU+MGzWh6sPgzwvAr3CV/7nIS3rOc5h61wflJT3nOUy964fykl7nNwDz
nHrXB+UpPec57PrgsPQOi6/PJ6O+9vOzt/h43QfdH+JTX/lVfdC+1ei+fgTz
OJ/6qg/KS/6cR+z0rh/KS/rBvhgwz6l3fVB+0nOew1UfnL/D7Mfcr//zyPs+
X/dBeYlPfeXn8hfW5w3pOc/hUUP2QXlJz3nETu/6obyk1/mswDyn3vVB+UnP
eQ5XfXD+Do9GP5b4v+l33OirdR+Ul/jUV35VH/TzLj3nOTxsH5SX9JxH7PSu
H8pLep3PC8xz6l0flJ/0nOdw1Qfn7zD7seq3v7nerd+t+6C8xKe+8qv6oLyk
5zyHh+2D8lqlr+c8Yqd3/VBe0uv8y8CrAFPv+qD85M95Dld9cP4O835Y/8Nf
f+EbP6v7oLzIr/CwfVBeG/T1nOewy59Yecmf84idnvl/GXlJr/PVgXlOveuD
8pOe8xyu+uD8Heb9sM0598953S/rPujzi/jUV35VH5SX9COYx/nUV31QXtJz
HrHTu34oL+l1/i1gnlPv+qD8pOc8h6s+OH+HxVfeE7//yWkTTqj7oLzIr3CV
P/Pbq6/nPIeH7YPykj/nOUy964fykl7nPwbmOfWuD8pPes5zuOqD83eY98PR
M21/12Vn1X0Y/PsSfT71lV/VB/28S895Dk8csg/68wfpOY+Yepf/j5GX9Drf
o4853+ldH5Sf9JzncNUH5++w+Mr79H/87aLlJ9d9UF7kV3jYPgz2zft6znN4
2D4oL+k5z+Gji/z3QF7S6/wA4NOBqXd9UH7y5zyHqz44f4fZj0u2fueE8++s
+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
qfsQ96283vm5/NdHXtJznsPUuz4oL+k5z2HqXT+Ul/Q6XweY59S7PsT9qzzP
4aoPzt/hDdCPtj9V9yHuW3m986v6EPet8jyHh+2D8pI/5zlMveuH8pJe5xOB
eU6964Pyk57zHK764PwdZj/aPk/dh7hv5fXOr+pD3LfK8xyeOGQflJf0nEfs
9K4fykt6ne8JzHPqXR/i/lWe53DVB+fv8F7oR9vnqfsQ96283vlVfYj7Vnme
w8P2QXlJz3kOU+/6obyk1/mBwDyn3vUh7l/leQ5XfXD+DrMfbX+q7oM+v5Bf
4WH7oJ936Ucwj/Opr/ow2Hfo6zmP2OldP5SX9Do/A/hSYOpdH5Sf/DnP4aoP
zt9h9qPt89R9iPtbXu/8XP7MS/oRzON86qs+KC/pOY/Y6Zn/GchLep3/HZjn
1Ls+6M+fpOc8h6s+OH9i8uN+Vt2HuG/l9c7P5c/8pOc8h4ftg/KSnvMcpt71
Q3lJP+gbMM+pd32I+1d5nsOuD64f0hOTrz/fbPs8M5R9iPtWMyR95Vf1Ie5b
zZDmOTxsH+L+1gxpHjH1Lv9LkZf0Op/Wx5zv9K4Pcf9qhjTPYdcHh6V3WPy4
n1X3Ie5bzWD1zq/qQ9y3yvMcHrYPykv+nOfwm0X+05CX9Dr/YMGIeU6960Pc
v8rzHK764Pwd5v3Q9nnqPsR9q6yv/Ko+KK/xfT3nOUy964Pykp7zHKbe9UN5
Sa/z+YEXBqbe9UH5yZ/zHK764PwdFj/uZ9V9iPtWXu/8qj4or+X6es5zeNg+
KC/5c57D1DP/+ZGX9IM/LwPmOfWuD8pPes5zuOqD83d4PPrR9qfqPsR9K693
flUflJf0nOcw9a4Pymutvp7zHKbe9UN5Sa/zZYHXAqbe9UH5yZ/zHK764Pwd
Fj/uZ9V9iPtbWV/5VX2I+1bdufw43+kdVl7y5zyHqWf+yyIv6XW+MTDPqXd9
iPtXeZ7DVR+cv8PsR9ufqvsQ962yvvJz+W+KvHbu6znPYepdH5SX/DnPYepd
P5SX9Dr/CTDPqXd9UH7Sc57DVR+cv8Ob4X5o+1N1H+K+ldc7v6oPyuuQvp7z
HKbe9UF5yZ/zHKbe9UN5ST84B07nQ/ZB+UnPeQ5XfXD+Du+MfrR9nroPcd/K
651f1Ye4b5XnOUy960Pc38rzHGberh/KS3qdH97HnO/0rg9x/yrPc7jqg/N3
+BD0o+3z1H2I+1Ze7/yqPsR9qzzP4WH7oLzO6+s5j5h6l//hyEt6nR8HfB4w
9a4Pyk/+nOdw1Qfn7zD70faZ6j7E/S2vd35VH+Lva+vOhTnf6R0e7Mv09Zzn
MPXM/zjkJb3OTwbmOfWuD/H3t+V5Dld9cP7E5Mf9rLoPyk986is/lz/zmtLX
j2Ae5zu9w/H3v+V5DjNv1w/lJb3Or+pjznd61wflJz3nOez64PohPTH5cT9r
bNmHuL81NukrP5f/PchL+hHM43ynd31QXtJznsNTivyvQl7S6/xGYJ5T7/oQ
96/GpnkOuz44LL3DU3A/tP2pug9x32qs1Ts/l79w3LfK8xwetg/KS/6cR+z0
rh/KS/oBf82IeU6960Pcv8rzHK764PwdZj/aPk/dh7hv5fXOr+pD3LfK8xym
3vVBeUnPeQ5T7/qhvKTX+ezAPKfe9SHuX+V5Dld9cP4Oj0Y/2j5T3Ye4b+X1
zq/qg/KSnvMcHrYPen+k5zyHmbfrh/KSXudz9jHnO73rg/KTnvMcrvrg/B0W
X59P2j5T3Ye4b5X1lV/VB70X0nOew8P2QXlJz3nE1Lv850Re0ut8JWCeU+/6
oPyk5zyHqz44f4fZj7Y/Vfch7m9lfeVX9SHuW3Xn8uN86qs+KC/5cx6x07t+
KC/pdf5VYJ5T7/oQ96/yPIerPjh/h9mPts9T9yHuW2V95efyXx/5Sc95DlPv
+qD7Q3rOc5h5u34oL+l1vm4fc77Tuz7E/as8z+GqD87f4Q3Qj7Z/VPch7ltl
feVX9SHuW+V5Dg/bB+Ulf85zeJsi/3WRl/Q63wOY59S7PsTf35bnOVz1wfkT
k6982z5P3Ye4b5X1lV/Vh7hvlec5PHHIPsT9rTyP2OldP5SX9DqfCMxz6l0f
4v5Vnuew64Prh/TE5Mf9rLoPcd8q6yu/qg9x3yrPc3jYPgz2Zfp6znOYetcP
5SW9zg8CPgOYeteHuH+V5zns+uCw9A7zfmj7PHUf4v6W1zu/qg9x36o7F+Z8
6qs+KC/pOY/Y6Zn/QchLep2fCcxz6l0f4v5Vnudw1Qfn7zD70fZ56j7E/S2v
d34uf+Yl/QjmcT71VR/0+UV6ziOm3uV/JvKSXufn9zHnO73rg/KTnvMcrvrg
/B1mP9o+T92HuG/l9c7P5c/8pOc8h4ftQ9zfyvMcvrnI/3zkJb3OLwPmOfWu
D3H/Ks9zuOqD83eY/Wj7POPKPsR9q3FW7/yqPsR9q3FpnsPD9iHub41L84ip
d/lfhrykj/td49J8p3d9iPtX49I8h6s+OH+HxY/7WXUf4r7VuKSv/Ko+xH2r
PM/hYfsQ97fyPIffLPKfhrykj/tdeb7Tuz7E/as8z+GqD87fYfHj73er+xD3
rbze+VV9UF7Sc57D1Ls+KK/xfT3nOUy964fykl7nI8Djgal3fVB+8uc8h6s+
OH+HZ8H90Pan6j7Efausr/yqPsR9qzzP4Sp/5il/znOYeuY/grykj/tdeb7T
uz7E/as8z+GqD87fYfHjflbdB33+Jb/CVf7LIq+1+voRzON8p3d9iPtbeZ7D
1Lt+KC/p435Xnu/0rg/KT3rOc7jqg/N3eDn0o+1P1X2I+1te7/xc/l9HXpv1
9SOYx/lO7/oQ97fyPIepd/1QXtLH/a483+ldH+L+VZ7ncNUH5++w+PH3u9V9
iPtWWV/5ufw3RV479/Wc5zD1rg9xfyvPc5h61w/lJb3OtwXmOfWuD/H3t+V5
Dld9cP7E5Mf9rLoPcd8q6yu/qg/Ka1Jfz3kOU+/6EPe38jyHqXf9UF7Sx/2u
PN/pXR+Un/w5z2HXB9cP6YnJj/tZdR/ivpXXO7+qD3HfKs9zmHrXB/3zv9/3
9ZznMPvA/H+CvKTX+RF9zPlO7/oQ96/yPIddHxyW3uFJ6Efb56n7EPetvN75
VX2I+1Z5nsNV/sxTes4jpt7lfwTykl7nxwPznHrXh7h/lec5XPXB+TvMfrR9
nroPcX/L651f1Ye4b9WdC3O+0zusvK7p6znPYepdP5SX9Do/BfgaYOpdH5Sf
/DnP4aoPzt9h9qPtT9V9iPtbXu/8XP7Ma0pfP4J5nO/0Disv+XOew9Qz/1OQ
l/Q6nwzMc+pdH7S/Jz3nOVz1wfkTk698X+jt88xY9kH5kV/hKv97kJf0I5jH
+U7v+hD3t2ZM8xym3vVDeUmv85uAXwSm3vVB+cmf8xx2fXD9kJ6YfH0/avtT
dR/ivtWMSV/5ufyF475VnudwlT/zlD/nETs9878JeUmv86lrRsxz6l0f4v5V
nuew64PD0jvMfrR9nroPcd8q6yu/qg9x3yrPc5h61wflNU9fz3kOU+/6obyk
1/kcwPMAU+/6EPev8jyHqz44f4dHox9tn6fuQ9y3yvrKr+pD3LfK8xyu8mee
S/b1nOcw9cx/DuQl/eAceEmeD9mHuH+V5zlc9cH5O8z7of0+sLoPyov8Cg/b
B70X0nOew1X+zFN6ziN2+pQ/8pJe5ysD85x61wflJz3nOVz1wfk7zH60/am6
D3F/y+udX9WHuG/VncuP86mv+qC85M95xE7v+qG8pNf5msA8p971Ie5f5XkO
V31w/g6zH22fp+5D3Lfyeufn8l8f+UnPeQ5T7/oQ97fyPIeZt+uH8pJe5+v1
Mec7vetD3L/K8xyu+uD8Hd4A/Wj7U3Uf4r6V1zu/qg9x3yrPc3jYPigv+XOe
w9sU+a+HvKTX+W7APKfe9UH5Sc95Dld9cP4Oi6/Pt22fp+5D3LfK+sqv6oPe
i2P6es5zeOKQfVBe8uc8Yqd3/VBe0ut8IjDPqXd9UH7Sc57DVR+cv8PiK++2
z1T3QXmRX+Eq/6ORn/Sc5zD1rg/K6/S+nvMcpt71Q3lJr/ODgE8Hpt71QfnJ
n/Mcrvrg/B0+BvfDxb19nroP+vwiPvWVX9WHuG/VncuP86mv+qC85M95xE7P
/A9CXtLr/ExgnlPv+hD3r/I8h6s+OH+HxVfebZ+n7kPc3/J65+fyvxh53dLX
j2Ae51Nf9UF5yZ/ziJ3e9UN5ST/481ZgnlPv+qA/P5Ce8xyu+uD8icmP+1l1
H5Sf+NRXfi7/m5Gf9COYx/lO7/qgvJ7o6znPYepdP5SX9Dq/DPgJYOpdH+L+
VZ7nsOuD64f0xOQr7zd6+zwzlX1QXuRXuMpfWD/v0nOew1X+wtrfkp7ziKl3
+V+GvKTX+et9zPlO7/qgPKXnPIddHxyW3mH2o+1P1X2I+1YzWb3zq/oQ963y
PIeH7YPykj/nOfxGkf/ryEt6nX+4YMQ8p971Ie5f5XkOV31w/g6Lr/dlod4+
T90H3R/iU1/5VX2I+1bdufw43+ldH5SX/DnPYepdP5SX9DqfF5jn1Ls+xP2r
PM/hqg/O3+FZ0I+2z1P3QXmJT33l5/JfCHlJz3kOU+/6oLyk5zyHqXf9UF7S
D/68DJjn1Ls+xP2rPM/hqg/O3+GF0Y+2P1X3Ie5vZX3lV/VBeUk/gnmc7/QO
Ky/pOc9h6l0/lJf0Az4wz6l3fVB+0nOew1UfnL/D7Efbn6r7EPetsr7yc/kL
6/PqZn095zk8bB+Ul/w5j9jpXT+Ul/Q63wSY59S7PsT9qzzP4aoPzt9h9qPt
89R9UF7iU1/5VX1QXrv09Zzn8KZD9kF/fiV/ziOm3uW/CfKSXufb9DHnO73r
g/avpOc8h6s+OH9i8pV325+q+xD3rbze+VV9UH6H9PWc5zD1rg/KS/6c5/Au
Rf7bIC/pdb49MM+pd31QftJznsOuD64f0hOTr3x/29vnqfugvMivcJX/wcjr
xL6e8xym3vVB+cuf8xxm3q4fykt6nR/Zx5zv9K4PylN6znPY9cFh6R0WX+/L
X3v7PHUflJf41Fd+VR/ivlWe5/Bvh+yD8pKe84ipd/kfibyk1/kJwH8Fpt71
Ie5f5XkOV31w/g6Lr7yv6u3z1H3Q51/yK1zlzzyv7utHMI/znd71QXnJn/Mc
pp75n4C8pNf5qcA8p971Ie5f5XkOV31w/g6fi/uh7U/VfYj7W1lf+bn8r0Je
U/r6EczjfKd3fYi//y3Pc5h5u34oL+l1/q8+5nynd31QftJznsNVH5y/w+Ir
77bPNHPZB+VFfoWr/O9BXtJznsPUuz4oL+k5z+EpRf7/Ql7Sx/2umdN8p3d9
UH7Sc57DVR+cv8NT0I+2z1P3QXmRX+Fh+6DPG2P6es5zeNg+KC/5cx6x07t+
KC/p435Xnu/0rg/KT3rOc7jqg/N3WHy9L22fqe6D8hKf+sqv6oPyk57zHKbe
9SHub+V5DlPv+qG8pI/7XXm+07s+KD/pOc/hqg/O32HxlffivX2eug/Ki/wK
D9sH5SU95zk8bB+Ul/Sc5zD1rh/KS3qdzwbMc+pdH5Sf9JzncNUH5+8w+9F+
H1jdB+VFfoWH7UP8fW15nsPD9kF5Sc95xE7v+qG8pNf5p4B5Tr3rg/KTnvMc
rvrg/B0WX+9L2+ep+6DPv+JTX/lVfVBeG/b1I5jH+dRXfVBe0nMesdO7figv
6XW+JvAGwNS7Pig/+XOew1UfnL/D7Efb56n7EPetsr7yc/kzz237es5zeNg+
6PuT/DnPYfaB+a+JvKTX+Xp9zPlO7/qg/KTnPIerPjh/hzdEP/bu7fPUfVBe
4lNf+VV9iPtWeZ7D1Ls+KC/pOc/hbYv810Ne0uv8F8B7A1Pv+hB/f1ue53DV
B+dPTH6Vf9UXnlf585x/f9353ubvD/U8r/5+V3+/RvX/97UTZ9h2nSVHT273
50wThHW+zAuXH3zHPB12fGHyP7HKL07/zpjsR74w+TP/6nPXPPjiqORHvjD5
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
Bx3/xBV+fca9kx9OfuQLk//W9Rv9fsyCDyc/8oXJ32ST+Y5Zco+Hkh/5whuD
//en7jtkw7seTH7kC/8N/Nl+8Ye99/7Cg8mPfGHyfzLDlrucceQDyY98YfKv
O3aR7W559v7kR74w+Yt86snN3/rq/cmPfGHy9/77mRuOP+2+5Ee+MPn3rvaT
tdf+4N7kR74w+cvevtSEXb53b/IjX3g58I/5wUvL/f6iKcmPfGHyp758/pLX
zjkl+ZEvTP7a++06furP7kl+5AuTf8bsX5p33hvvTn7kC5M/5uS3PzLhM3cn
P/KFyd/8c/8cs90BdyU/8oXJv+Tyfd46+uE7kx/5wpeCP/e3vjL10pXuTH7k
C88D/k4PTPfE4yfckfzIF94Z/Ju3v+7ej0y7PfmRL0z+Eu9OumW59W5PfuQL
k3/wYd+4dvOzb0t+5AuT/9jIbJcdMuNtyY98YfJX+fOt55231a3Jj3xh8pfb
6dPf+vv+tyQ/8oWXBf+l/z1rhRlWvDn5kS/8Mvhn//Xzn9rk1ZuSH/nCZ4G/
1X8vnP3Pf7kx+ZE/+DwO/oIvrPjuOz+8IfmRL/wJ8O+aefJT31zgP8mPfGHy
j1j8q7efdMf1yY98YfLX+PoNl798+HXJj3xh8t/78bp/Xm2Na5Mf+cLkX3DQ
ncce+97VyY98YfK3/eN393vqgquSH/nC5C909UPbr7DDlcmPfOGFwZ/y6I82
OWzRycmPfOHEH337QRdfdnnyI3/gB/7Jqzyw6aZLXZb8yBc+BfzZ93rqi6P+
cHHyI3/wfRL8fS95eeY/znpR8iNfeD/wX3rjnUe/ts/fkx/5g59n8LdcdoZL
np96XvIjX/gH4J/y+CcWXuiKs5Mf+cKngr/v5l+8+cennJn8yB/8/wF/y3u/
ttdf9z8t+ZEvTP5+f7p4wxeuPTH5kT/4Pgj+hJMePW/ipF8lP/KFyf+w9wfe
eyQ/8oXJH/W3H1201K93XJV+5AuTP6r3H/A4YlX6kT/A4E8+bM+H1tzhN8mP
fGHy971hsSu/v9GpyY/8QZ7gn7Lux+b62K5nJD/yBz+P4E++88OtbjrmrORH
vvCV4L909s+/f9V3zkt+5A9+nsDfb8ftD/zEM39LfuQP/v+AP8cyPzhnz90u
TH7kD+4T8E+ZtvHdd4+9OPmRP/h5BH/pf3zzw2WOvzT5kS/8efAn77HaYv+7
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
E/76Mp/no8L/5pisfITj+XwT4vl8E/4fWTbU/w==
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               
               PolygonBox[{{21921, 1, 19729, 21945}, {21944, 19728, 21920, 
                21948}}], 
               PolygonBox[CompressedData["
1:eJwl3Hu4TeXeBuCFEEInlSRJEkIUOYQQQoiiJBVSqVAqhSRJUumgEKIQoiQK
IYlSKTrtTiokUSqd9lap1Hc/1/fHfc3nWe+aY475G+8Yy/72d+3KfQZ1HVi4
oKCgyQEFBUW9ruxWUHBox4KCQ+RDeUZfxeMU+Pm/5xQULJQXU1QvxgE8pz/P
gXIJirNEf5oy3lqWg1mgz6eUfBCleUp/jC8cewufM02f0+3/z6kYxXlSn5fP
kEtQkrn6bPIdiuBrFMzSF+VnzqEIhXhW33h+QcF9rQsKxnMvb+t3n1tQcFKl
goLqVGOsPtXvfuocNvMZU/T7uVYewEDG6w9ynXw9g3hAn8QL8lKWMVG/j3Pk
jnTgXv0ezpbb0Z5x+h2ZsVyIwozSH+VFeQXLmazfzpcdCgq2s42R+gz+tr6f
f5iu38UJclVOZIx+JwfIRSnCaP1uTpKrU42x+iOR8+fh0G/LNfJ5W9jKCP38
aF9Q0I3zQh+cuVi/nsF51W/Jd5GnMJmb9SH5DHkik7gp7+NcuQudGaQPzPzk
jnRiQK4FJ8u1qMk1ep/MxTls5yt661dlv1gvQXGu1G+MfB43hH51ZiBXpwb9
9Ut4yXFW8zK99Mv5Wt7JDvrqw3KNvGcFKxmqX8Yr1teyhkv1W3M866tZxXC9
a76v9S50zat+YeYlD+VmLtC755zlmxiSeed9nCLXpQ6d9U6Zi1yL2nTM7DhI
Lk0pOuhn8Vq7goL1vEqr7Ee+lXfzDW31i3Nves90ptFTb5+ZyiUoSTv9olxf
eQpT6aG3yawcZye7aK1PyH1jPz3EhLzqLTMr62tZRwv9TJ6QZ/I4zfV6+b5y
XerlVT8t5PqcGnrjzE8eyjAa5X0cLB9CWeroDTNruQcXcLpeO7OSS1OGWtkX
vHl2QcEG3qCaXown23pGMZeieo3Mz/puvqN6rgU/yHv4npr6iZm9vJ7Xqao3
yH3k87rRPd8n924+w/ocZlNFPz5zkWcyi8r6EZmBXJ8GlNOPybWTe9GTCvrR
+b5yDy6ivH5s9qU8gtuoqB8eOQ6HRWbHz77nL/xEWb1k5iJv4C1K6Mfl+eQ9
oxhJpTxv8tyxPobRFNEPzTGtH8Khec3c2Wh9E29TSi+T+cl7+JHSeuF8hjyK
Oyikb/UsP6NNQUFTmrFF/5Iz5RY0Z5v+B0d5T3mO5Hf9TxrKjWjMPr0g97Dc
m0v5189+43C5HEewV/9fOPZe/hv6DzwjL+Rpvte/zd8aeRxj+UZvlnvLtZ7O
DJrq//j5xY7di0vYr//Me97zPu/yk/4jG+VNvMMe/df8rvwLv+Y1P+viZzVl
fs2r/ndm5dhNacJf+i7u9J4x3MVO/bPMSi7P0WzWv+AYuSIV+Fz/isvk3vRh
u/5pZu1v7D5+5xP948xK3stvfKS/k1nJC3mWTfrXXO44/ejLjpxv9qkZjWA4
TfTv/Pwp6/NZwG79g8zKcd7ng7ym85y8mEW8q38YOQf+E/pbuUbyOO5hg/56
zkXuxxWs10/gyebuS2ZTRX85c7FekWNZrb/GWXJrWvGqvi57Um5BS9bqL/H3
Wa41f7FKf4XjrFemEmv0lZmp9X38yYp8Lx6UH+IBFunL8t3kj/iYpfqS/K68
mCV5zdy5Vh7ANTytv5hrJ2/mE5brz+bfTfJ47mehvoCr5P5czfycB9e18vee
QTygP5F7yXoh/vWzx/W5mYvemjbMyTwzV7kqVZitz8hcvGc//zBdfyx7UN7C
50zTp+ac5c18xhR9Qs5HfogJedUn8YK8lGVMTI/MiOdDfzRzsL6C5UzOPuNs
6+1oyzz9kchxeDj0NzMX16s/V/KGfn/mbH0AAxmv35Pjye1oz7jsPU6Sq1ON
sfpdmYtclRMZk/uUA+SiFGG0fkfmLBeiMKP02/MMbOl+ZBsj9dsyP3kLWxmh
35o9KK9mFcP1YZmBvIKVDNUH5/rK1zM4r/qQzECeyCRu0m+MZG6IvI9z5S50
ZpA+K3vcLCtzPDP1gZxjvSOdGKBflGvSwnVlKj30qzMr69WpQf/MnQPlEhTn
Sv2KzEouSjH65X7OM8ZxdrKDvnqfzErezlf0zjMt96G8ljVcql+SWcmreZle
+sXZl/J0ptEz90u+h+vQkQ7cq1/ILdaHcjMX6N0zK/kmhtAte4WTnWstanKN
flT+veLvZCNO58j8e8HPz897OC8yY06R61KHzrnX8iw607OLV2mlt8kM5J3s
onXOl4O8pzSl6KC3zAysr2UdLfT2mbP1EpSkXZ5pudetz+RxmuuHh+djOQ4L
/YzsN+sjGE4TvVnmJ09nBk31xpmVPJRhNNIbZoZyDy7g9NxDfCvv5hva6g0y
F7kb3amvnxbJnBr68Tln5zWTWVTO3PlB3sP31Mw+y30tb+ANqmXGHOw4h1CW
OtnLueesj2IklfRjsj/kXvSkgn5EzkWuT4PMR6+XYzpOXerlVT80n2H9EA7N
q35s5ieP4DYqZm9kNnIjTudI/ejMSu7BRZTPsfi5mX8D8BNl9TL5vvIefqS0
/t15nndNPdNZwG69mJ8/aX0OcymavcJGeRNvU0ovmVnJG3iLErn/8sySxzCa
InrhzEoexR0UyvMr95zcm0v51+f+wVFyeY7kd/1vzpCb0oS/9AO99yl5PvMo
rv/j5xfLvbiE/fr/wnfay39D/5OG1hvRmH1619xL9nYXuuZV/83PD7dejiPY
q3fKnrFei9p0zH7087sdexxj+Ub/kY3yJt5hj/4Dz8gLeZrv9V3cKY/hLnbq
X3O53I++7NC/4jK5N33Yrn+WWcnlOZrN+tbMSm5KM7bov/Kz/Au/5lX/kjPl
FjRnW36H9+T3eZef9C84Rq5IBT7XP811OsPc+J1P9I8zZ3kvv/GR/mEk85/Q
3+QquT9X8ob+VuYnj+MeNuQ8eE5ezCLe1V/PXOR+XMF6/Z3MVF7Is2zSX+Ms
uTWteFWfkX3U2J7gH6brr3Cc9cpUYo2+LnORW9CStfrLmYFckWNZrb+U4zVx
PP5iVa4391kfz728ra/MrKzv409W6C9mhvJmPmF5vgPXygO4hqf1JZmBvJgl
eU3nQfkhHmCR/kLIS3k+9AWZs9yfq5mvz81c5Na0YY7+xHn5Pwa6H/nXXB7X
l+W66R/xcY6rP5a9YH0LnzMtzwzOtt6OtszTZ2WmcmWOZ6b+JCfIVanCbH1q
ZuA4m/mMKfqjmY28guVM1m+MRv5eckPk+3Od9esZxAP6pMxAXsoyJuqPRDIP
h35/5iwPYCDjc804R+5IB+7V78l3k9vRnnH6HZmVXIjCjNLvyneTq3IiY/QJ
OUf5ISbkNfubk+TqVGOsfltm6jttYSsj8izgAOtFKcJo/dmco7mN534W6rfn
Hvae7WxjZJ4P2dMN7VnWcKk+OLOyfj2D86rfklnLU5jMzfqQzEqeyKTMO+/j
XLkLnRmkD8ys5I50YkDmyclyLWpyTe7TPMecw0520Df7kQOtl6A4V+q35l6S
V7OK4frVmZVcnRr014dlb8grWMlQ/YrMSi5KMfrpfTIXn7edr+itX5LPkFfz
Mr30H7q6504zS57me/18Pz/fejfOC/2izEqewlR66BdmhvJQbuYCvWtmJXeh
a17TOUWuSx06650yK7kWtemot8msTjcrdtFab59ZWS9BSdrp3XMvyDcxJOeZ
a8FBcmlK0SGz480GnqO8QbXsZb517N18Q1v9RF6zvp7XqZrnQ35mfT2v0irP
wzwn5Jk8TnP9jFw7eQTDaaI3zlzkoQyjkd4w85J7cAGn6w0yZ7kb3amvN8sz
Rp7ODJrqp0XWOTUyTw6WD6EsdfR6+blcl3p51VvmXpDXso4Weu3MSi5NGWrp
NTIX330331E91yf7Q97D99TUv7M/nrJP5rOA3foJebZZn8Nsquj/+PnF9e0x
LmG/fnRmYL0HF1E+z8jcw/IoRlJJPzYzlUdwGxX1ozJDuRGnc6R+ROYi16cB
5fTDI5nDIt+Vjc5hE29TKrPjZ/kXfqKsfgwXe08velJBPzS/Kx/CoXnNfuQp
75nPPIrrZTIreQ8/Ulo/PvvFe2Yyi8p6yexJ6xt4ixL5zFxze3Y60+ip/21e
Z1hvShP+0gtnVvIo7qCQXpDnndybS/nX7/1JQ7kRjdmn/8FRcnmO5Hf9Nw6X
y3EEe/Uf2ei6buId9ui/8rP8C7/mVS+Wa+49c5hLUf1/fv4/63v5b+gH5Flu
fQyjKZK5+/l71t/nXX7Sb8l/1vWf+aYwmZvz70k/v9v6OMbyjd6eA+uYGyVp
p3/BMdYrUoHP9a2Zn9yUZmzRv+ZyuR992aF/lrnI5TmazfpXXCb3pg/b9U8z
w1PNkt/5JHPiPnk89/K2/mHIH/Gf0D/OXOS9/JY1/YPMQH6fD/KaznPyYhbx
rv4lZzqHFjRnm/5OntnWF/Ism/S3Mit5HPewQX85c5Erciyr9Vc4Tq5MJdbo
r2cucj+uYL3+En/Xc9/yF6v0lZmBvI8/WaEvyTnLi1mSV/1NrnKc/lzJG/kd
HrT+EA+wKDOwF97z78P3+SCv+rLMz/pHfMxS/YVI5vnQX8w1kTfzCcv1Z3M9
5PHcz0J9Qc5F7s/VzNfvyjOrruc8JzJGn5W5WK/M8czMc46z5Xa0ZZ4+l7Pk
1rRhjv4EBXIh/nW8x/UZmZ+8n3+Yrj+WvSpv4XOm6Y+EPJGHQ380309ewXIm
60/mnB2/KlWYrU/NDKxv5jOmZMZcJ1/PIB7QJ2V+8lKW5bP01/I9XJvWtOJV
fULeb/0hJuQ1+4xrfd4AruFp/U4OsF6UIozW78ms5Ha0Z1z2IyfJ1anGWP2O
zEouRGFG6bdnn5/iPmMbI/XbMit5C1sZoQ/JrOSJTOImfVhmJa9gJUP1+3PO
jj2AgYzXb82etr6aVQzPXuEc6x3pwL36LZm/9SlM5mZ9HWeaUQtasla/MXIO
3BD64Mxevp7Bec19xdeeUzvZQV/9iszPelGK0S/ny8lyLWpyjd4nc/Ge7XxF
b/0yXpHXsoZL9Qtz3vJQbuYCvXF+VtvPGEYjvWF+V+7BBZyuX51r5POqU4P+
+sXZq44znWn01C/KXOQpTKWHfklmKq/mZXrpDTjfsbvRnfq5/zjQsUtQnCvz
O+E93Tgvsn/41nt28w1t9U6Zi/Va1KZjrhkHyaUpRQf9XE6R61KHznqbzN5x
drKL1nrLzE9eyzpa6Gdkf8gjGE4TvWuO6Thd6JpXvXuuuXwTQ3LuuYdyL3nP
el6lld4s85OnM4Om2T95TsgzeZzm+q7cS57pY7iLnfppkblxaujFcv+f7FnD
XIrqNTKrWmbFd1TPnPhB3sP31NTrZS6OU5d6ec315k3rG3iDanm25DPkOcym
in54yOU4LPQy+QznsIcfKZ09n1m5rl3ozKB8Jgf7vEMoSx39mOwtx+lFTyro
R2Vfyo04nSP14/JMkEcxkkq5XzIrnzeG0RTRa2cfOHZpylArnY3WN/E2pfK8
yX0j9+ZS/u3i2ZPPkEdxB4WyR3lKns88iuv/+N2L5V5cwv7894icITelCX/p
/4ua/sbz39BLZs7WN/AWJfSB2b9m1JFODMic+Nn6L/xEWf0P7z9KLs+R/K7/
xuFyOY5gr/4nDeVGNGafflwn362E78ZIKuk/+/l7zut93uUn/QeekRfyNN/r
X3O53I++7NC/4yl5PgvYrX/L3fI4xvKN/hWXyb3pw3Z9F3fKY7iLnfqXnCm3
oDnb9I8zvxq+E7/xkf4Fx1ivSAU+1z/lD+v7+J1P9A/y3eT3+SCv+tZcI+9p
SjO26B9Gjs1/Iu/jOXkxi3hXX5bfq+73+Jil+uuZi/V+XMF6fSP3yeO5l7f1
tzIXeRz3sEF/jbPk1rTiVX1dZiC3oCVr9Vdy7eTKVGKN/mK+s3PYzCcs11/K
HpT38xer9M+yX3zP8hzNZv3lzM9xKnIsq/V3cs3lhTzLJn1lZuo4+/iTFenn
Ol4Vx+NIftdf8PMXMg+ej8yOB+WHeIBF+rOZizye+1mYz+RaeQDX8LS+gKvk
/lzN/Owzzpbb0ZZ5+tzMT25NG+boT3KCXJUqzNZnZX5yZY5npv4EBXIh/j3J
s1d/NHOVV7Ccyfpj2W/yFj5nmj41s5c38xlT9EmZgbyUZUzU38z3MMv+XMkb
+iORdR4O/fbs/WruC7YxMrPjOuvXM4gH9PszK3kAAxmfeXKO3JEO3Kvfk1nJ
7WjPuOw9TpKrU42x+l2ZlVyVExmTe5ID5KIUYbR+R2YlF6Iwo/QlucZmt5gl
edVvy6yc/xa2MkK/NftSXs0qhusT8v0c5yEm5FWfkb0r7+cfpuvDcj28ZwUr
GaoPyfzkiUziJv3qfDe5OjXonzlxslyLmlyjD85M5esZnNdcHw6US1CcK/M7
nCt3oTOD9CsyF7koxeiX+zT7qKr9xOM01/vkWp7oWvIVvfN84Gt5Jzvom+dh
7mt5LWu4VL8ks5JX8zK99IG5vj6vI50YoF+cfWl9OtPoqV+U/StPYSo99E6Z
gVyL2nTUzw+5G+eF3jXfV+5C17zq3blRvokh+f2cBwfJpSlFh+wzvvXdd/MN
bfWW+W7yWtbRQr+QW7xnKDdzgd4s38P6dGbQVG+f62G9BCVpl3uc16yv51Va
6W0yU3knu2itN85nyEMZRiO9Qb6v3I3u1M93YKNn1ybeplT2T+7XEzyXeYNq
ej1O8Z661MurXjvvl0tThlr6iTk/71nP61TNfZVnkTyH2VTRj89+kWcyi8r6
0ZmN3IOLKK8fm/tGHsFtVNRrZM7ybr6jep5peXbIoxhJJf0ITpPr04By+jHZ
M3IvelIhc8p+sZ+mMJmb9aNoaL0Rp3Nk9kDkPuOG0EtmVua2gbcooR/Mz/Iv
/ERZvQw/yHv4kdK5tjwlz2cexfVimZU8h7kUzb2WZ5E8htEU0f/0t6ah3IjG
7NP/4WK5F5ewXz/c7x6e785hoRfOrKyP4g4K6YfmvK0fwqF5zTPI+8+w3pQm
/KX/mP3ib+cm3mGP/ls+x3o5jmCv/is/H28G/JpX/TuekuezgN35Hd6T3+dd
fspnsFHexDvs0b/lbnkcY/lG/4Fn5IU8zff6Lu6Ux3AXO/UvOEauSAU+17/i
Mrk3fdiub833lZvSjC36p/xR2Xz5nU/0r7ncej/6skP/LP8WkMtzNJv1j/mf
9+zlNz7SX+Lv41wb/mJVviv3WR/Pvbytf5C5yO/zQV7TeU5ezCLe1d/KXORx
3MMG/U2ukvtzJW/or+ec5X5cwXr95cxFrsixrNbXcabcgpas1b/Mz3ynFjRn
m/4aZ1lvTSte1T+MfE/+E/orHCdXphJrMpNwnL38N/SVmbN57ONPVujLcjz5
Iz5mqf5sZiWP534W5t9ckXWeD31JZiUvZkles1e4Vh7ANTytL8is5P5czfzs
Uc6W29GWefoTFMiF+LeSv3H6k5ygV6UKs/OZPCg/xAMs0udmVnJr2jBHfyz7
0nG28DnT9FmZlfXKHM9M/Z2ct7kt5Fk26TOyh7xnP/8wXX8xe9V7NvMJy/VJ
mYv1pSxjov5IJPNw6BNyzvJDTMhrOtfJ1zOIB/T7Mz95AAMZn2vBOXJHOnCv
fk/mJ7ejPeP0uzIruSonMkafmnOWN/MZU3LvcoBclCKM1u/I7OVCFGaU/mi+
s7yC5UzWb89ePda9zDZG6rdlzvIWtjJCvzX3obyaVQzXB+f7ytczOK/6Lfkc
eQqTuVkfkvnJE5nETXkf58pd6MwgfWDmInekEwMyO06Wa1GTa3JP5nlS0XOK
HfTNfuRA6yUozpX6jZHP44bQr+YkuTo16K+3yfGOcTx20Vq/IjO1XpRi9Mt+
zD1sfT2v0krvk/k5h+18RW/9ksxKXs3L9NIvylzkKUylh35h5iUP5WYu0Lvn
nOWbGEI3/fxI5rzQL879IE9nGj31rpmp3IWuedU7ZX5yLWrTMb/DKXJd6tBZ
vyzPHXkta7g014KD5NKUokP2KN/67rv5hrZ6+8zeeglK0i6fkX/7+PdXXerQ
Of+uy2d4z1rW0UI/Jt+lghnRkwp6w8zGeg8u4HS9Wb6vPJ0ZNNXPyL6URzCc
JnqDzEruRnfq66dFMqeGXi8zkOtSL696jXw357Cb76iu184MrJemDLX0xrlu
8lCG0SjH4mD5EMpSRz8x+8Vx1vM6VXMt+EHew/fU1M/kCe+ZyeM0zx7lTesb
eINq+rDcv/biClYyVD86s7Leg4son+dh7mt5FCOppB+bWckjuI2K+hGZi1yf
BpTTD833kA/h0LzqZXLORztnfqS0Xown5TnMpaheMucsb+AtSuT5ld9znDnM
pkrmyUbrm3ibUvrxmYH1mcyicvYUT1mfzzyK557M804ew2iK6IXzfeVR3EGh
PPuyp+XeXMq/nf39jPL+hvLf0H/jcOvlOIK9+t+cITelCX/pv/Kz9/zCr3nV
/6Sh9UY0Zl9+h/esv8+7/KS/xd1HeaZzDxv0H3jG+kKe5nv9RzbKm3iHPfp3
PCXPZwG79W9zPHkcY/lG/4OjnEN5juR3fRd3Wh/DXezUv+ZyuR992aF/mvc7
r338zif61szAelOasUX/gmPkilTgc/1LzpRb0Jxt+seZs+Ps5Tc+0j/IXOT3
+SCv+a7cJ4/nXt7Wv+Iyx+lNH7brb3KV9f5cyRv6h5Fj85/Q38lM5YU8y6Z8
Js/Ji1nEu/rrmYHcjytYr7/GWXJrWvGq/gQFR9pP/HuEe1N/KftD389frNLX
ZQbe04KWrNVf4Ti5MpVYo6/MnL1nH3+yQn8x85c38wnL9WX5bvJHfMxS/dnM
Sh7P/SzUl+S7yYtZklf95Vwjn1eRY1mtvxA5Ds+HviAzlftzNfNzLB6UH+IB
FumfZV+5DuU5ms2ZMddaH8A1PJ1z4xwz6kgH7tVnZFbyfv5huv4kJ3hPVaow
W5+VWcmVOZ6Z+mPZb96zhc+Zpk/NrOTNfMYU/dHMUF7BcibnO3CdfD2DeEB/
JOSJPBy5rzjb57WjLfP0SZmV9aUsy+/rc7M3rLemDXP0Cfkc6w8xIa/6/ZmL
PICBjNfvyWfI7WjPOP3gPCcO8QzhJ8rqt+deKme/s42R+l2ZlfdU5UTG5H7m
ALkoRRit35ZZec8WtjJCvzV7VV7NKobrwzIreQUrGaoPzqzk6xmcV31IZiVP
ZBI36XfkXvB5hSjMKP2WzN/6FCZzs96Jkw/3d5LadNRvjByHG0Jvz4HWS1CS
djkPzrXehc4MyjxzPLkWNbkm+zbvlUtQnCv1KzIXuSjF6Jd7PM87x97JDvrq
fTJneTtf0Vu/mpO8pzo16J9nUO5h62tZw6X6xdmX8nSm0VO/JHOWV/MyvfSB
uRccpyOdGKBflFlZn8JUeuhd833lLnTNq949s5JvYgjd9DL8YJ/s4UdKZ0/x
7WH+HvANbfXj88w61P3DLCrrzXLO1qczg6bZy3neyet5lVZ6y3xfeS3raKGf
kX0kj2A4TfTGue7yUIbRSG/IhXIPLuB0/ZTsc/kQylJHPy3k+pwa+pk5Z3km
j9Ncb8D5cje65/ezBzID32kP31NTr5fPsV6XennV2+SayzvZRWu9NgfJpSlD
Lf3uXHP7uDrVGJtnUO5Dxx7FSCrpJ2ZW8npep2ruyTzH5DnMpop+bGYlj+A2
KurHZM/IvehJBf3ozEruwUWU1w/NrORDODSv+hGZlVyfBpTTa+Say7v5jur6
UZm/3IjTOTLfizflDbxBNf3wyHE4LLJfOpl9CbNnFpX1g/x8oz22ibcplf3s
5+ccZD/TiQF6Qe4R6725lH/9rHDmJ4/iDgrlPuUpeT7zKK7/43cvlntxCfv1
YpmpPIe5FNX/9vMz5KY04a/89428d7B/P/AuP+l/cJT18hzJ7/qfNJQb0Zh9
+m8cLpfjCPbq/wvH2ct/Qz8gz1nrYxhNEf3XfLb1X/g1r/qPbJQ38Q579K+4
TO5NH7brX3O53I++7NC/4yl5PgvYrX/JmXILmrNN35oZyE1pxhb945xzWefM
b3yk/8Az1hfyNN/rH0bW+U/o/2RP+vdhLy5hv/5Z5uc95Tmazfqnmav37ON3
PtG/4BjrFanA5/oHuR7W3+eDvOrv5FzkhTzLJn0BV5XxbOVq5uuvZy7W+3EF
6zNP7pPHcy9v629xtzyOe9igv8ZZcmta8aq+LvOTW9CStforHCdXphJr9Bfz
/ZzDZj5huf4Sf8v7+YtV+ps5Z+/pz5W8ob+cGcgVOZbV+gvhPUt5PvSVmZ+8
jz9ZoX+b72Fu4xjLN/qyXCPrH/FxjpF58pxjL2YR72avcLb1drRlnv5sZiWP
534WZu5cKw/gGp7W52ZWcmvaMEd/khPkqlRhtj4rs5Irczwz9amZVWmz4jOm
6DMyK3k//zBdX5Jz9p7FLMmr/gT5HyspxL9+7/H8Dg/qD/EAi/THsresb+Fz
pum7uNOMxnAXO/VHc+2sr2A5k/VJmb28lGVMzIw5Sa5ONcbq92R+cjvaMy7n
wXXy9QziAf2uzEWuyomMyXlwgFyUIozWb82e8SxczSqG65fkZ6X8jJfppV+c
7ydPZxo99ftzjRxnAAMZr9/Ol46znW2M1G/LXOQtbGWEfken//8feSlEYUbp
F2U2jj2FqfTIvuAc6x3pwL36Lfk9x5nCZG7OeXCyXIuaXKMPzlzk6xmc13TO
lbvQmUH6jSHfxA2hX53Zy9WpQX/9isxPLkox+umX8YpzXcsaLtWH8Ij1iUzK
cfVhuebyClYyNPckB8olKM6Vep/Mz3G28xW99cv5Wt7JDvrqJfO30TN9A29R
In+PMxvrQ7mZC/QGnF/Sv0HoTn29U2ZlvRa16ZiZcIpclzp01rtnLvJNDKFb
rgUHyaUpRQe9fb6HXIKStNNbZi4+by3raKE3yx6SpzODpplTZL/zcOR8I5/H
eaG3yQy8Zye7aJ1nAa/J63mVVrk3+FbezTe01U+LfHdODb1rvrNjd6FrXvUz
cj9YH8FwmmQmHCwfQlnq6PXyc7ku9fKqN+RCuQcXcLpeO7OSS1OGWpk7P/g3
yh6+p2buU56U5zCbKnrjXEvvGcowGukTcq+b0UNMyKt+Zp5P1mfyOM2zb3nT
cTbwBtX0EzMreT2vU1WvkVnJu/mO6vqxmYE8gtuomGvbzXO7rb91zKO4/mFH
inne85/Q/+CoA/395Uh+1/+kodyIxuzT/+YMuSlN+EtfwFVF3WdczXz9Nw63
Xo4j2Ks/xdnW29GWefqF3FLYrLiZC/RzOUWuSx066925Ub6JIXTTL+JReQpT
6aHP5SzHbk0b5ujnR97DeaH/L4o7L/4b+s+8J7/Pu/yU/x2sPHud/xhGU0Q/
InvSfOvTgHL6UdlHciNO58g8I/OM8Z7eXMq/jvdrPsexf+HXvOq7uFMew13s
1H9ko7yJd9ijf8vd8jjG8o3+Dxc7di8uYb/+XWZtfT4L2K3/wDPyQp7me/3o
7Hvn2oOLKJ+/FX7+mBlNZxo99ct4RV7LGi7Ndcz5FHJsvqGt3p4DrZegJO1y
LXjN+npepZXehq/lneyitd4ynyGvZR0t9Ks5qYi9TQ366wM5R+5IJwboD3Ld
Af5GMIgH9EdCnsjDoU/I78oPMSGv+rWc7Di1qMk1+iW85PxX8zK99DN5wnnN
5HGa6w2yr+RudKe+fkX2jOMUpRj9cm9kLnIJinOl3ocvHXs7X9FbvzxzkXey
g756s1wPx57ODJrqXXOPWO9C17zqT3KC/V6VKszOnDjIemlK0SH3Lrc6zgiG
00RvnHtQHsowGumdMhfvqUVtOmbG+Vzn34XODMo9bs8cnnuAwyLPXH62F3/h
J8rmuZt72rHrUi+veu2cn1yaMtTSl3o+lcrPKckL+jvZu55TC3mWTTkWB3vP
IZSlTu5dnrO+mEW8q7+eucr9uIL1+se59+W9/JbnoP5B3i+/zwd51d/K/SaP
4x425J7kPnk89/K2/mmen/I+fucT/Zjclx4BvehJhdxved7JPbiI8nqN3Efy
br7L/ztf9jxvyht4g2r6EZwm16cB5XJ9cl/Le/iemvqxub7yCG6jon5i7kF5
Pa9TVT8++1meySwq51pGjs1hoR9FQ7kRp+f/FK0fx+3yKEbmv+LN3sselOcw
myr6odkL9sQhHJpXfWv2oOdPU5qxRf8snyOX52g25z7IdZP70ZcduV9yH8ot
aM623Kf8bb/v5y9WZU6R+5FTQ38518S1qcixrM7+yt9a+3MDb1Eify95Sp7P
PIrrZfJ3X97Dj5TWi+XvvjyHuRTVC+ff0PIo7qBQ/g3BRnkTb1Mq/57OuTj/
ilTg8zz7MlfnVZlKrNFfzN7ynTbzCcv1r/I89p7e9GF7rm2es97Tmla8mv2T
547cnyt5I/dGnn+O8xAPsEhfmb0r7+NPVuhL8rvyYpbkVV+X2TtOC1qyVl/G
h9Y/4mOW5n6NZJ6P3Lt5zsoDuIan9WdzH8njuZ+F+v35Pc/lAQxkfPZe7hnX
sAcXcLr+aGZjfQXLmazfxheeSVvYygj9ruxL61U5kTG5N7JnrK9mFcPz7Msx
5SlM5uZcn/wttGd70ZMK+c89fp7/McpCFGaUficH5H9nkyKM1idlBvJSluVv
UO6X7F/H3s42RuqD80yVr2dwXvXl+d9H81qW0pmxPsTrI9YnMombcu/mXMyt
EP/6jMf1xzIDeQufM02/MfIebgh9Ru4Z6/v5h+n6rOw/x6rM8czU7+Fs6+1o
zzh9WGbvOCtYydBcR86x3pEO3KtPzd6VN/MZU/IszbNNrk41xur/B3JEB6M=

                "]], 
               PolygonBox[CompressedData["
1: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
                
                "]]}]}, {}, {
             EdgeForm[], 
             GrayLevel[0], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwV0c1KAlEchvGXKDdpfjRqKQZaI2SaRpqKQe0N/GhEa1MGtdSlRdq1VNei
XouWYV1BPmfxw3nOeP5nRuMP/WZvTVIYG+jUpGdLesEAbTrSZD0j3eAWu/RO
XSpFpTKKCNN7rA+5P8IbYnQIea4LOEOQVkO635e6uMM/e1OONLuQ5vjCIX3F
2W6ewYNNVOk6clyfIIsanWDmO7M/8Ik47bDucL+Fa4M+Zqb7knnYQoZOYsx5
E0xh0xbPY/FOQWwbdJKZY2ZPMIVNl3iPjs3vgjaKdN7guoBTg05jcSD94BtH
dID9Pub4ETCfdI51H3v88CJrmrN/I9IflvDSTy1pvcr/BRce6XO+O2TPCK+o
0Csh4D7z
                "], VertexColors -> None], 
               PolygonBox[CompressedData["
1:eJwV1Fds1VUYAPAjKEMio/P29paGhCdASFiltKWFQtk7AVmyN4IKvAIylL1H
y0yYb6DMlqmSOMDxCspwgCSgpdwOZCm/+/DLPzkn3znfd853/q2mLBgxv14I
IZcGDCkJYSjDGM4IRpJfFEIBPSikiJ7sjoSwh73sYz8HaCOmLe14l/Z0ICIm
gyiZxMgiNA/hDepRnzd5i8qkEB5TxRPiVHPSHqc4zRnOco6uySHk0I1cupNH
ZSfrUMUT4lRzzVrX+YEf+YmfWZkTwio+5TNWs4Z4njhqqKWOp/TKDqGY3vSh
hL5cltMVvuQrvuYqHzYL4SM+ZiGLWEzUWpnEyKIl2WwUs4nNbGEr2+gnp/4M
YCCDGEy5tSo4zwUucont7GAnuyilLDHe2jg72UUpZXRsGkInOtOFruQwQ20z
mcVs5jCXqmLnS5xqaqglEnPvRMkkRhYv3c0r/uN/Qoo+IKV3CKmkkU6EDOo6
O2/+5RnPecESeyxlGZ+wnBUkmUsmhVTSSOeguUMc5ghHOUZTtTWjOS1IIpm0
fHFEyCBKJpvlvIWtbGM7OxJ9Zy6PfAroQWHiq4ZCiuhJL4q5IeYmv/Art7jN
ac5wlnOUU8HDd0J4xN/8QyWPGSXX0bzHGMYyjj/6hPAn97jPXzygRA/1TfQR
/RnAQOYwl3l8wHwWcEuv3OYOd/mN3znu7k/wOV9wklM08OYb0ojGvE0TyvVW
Bee5wEUuEe+mb6ihljqekqTmZFJIJY30xDt3drl0J498ChjPBN5nIpOYzDfO
6Fu+43uucZ1oF/dJjCxaks1aNaxjPRvYyCam+UdMZwYzmcVsJvmXTWYKU5nG
dF4DV+faUQ==
                "], VertexColors -> None]}]}, {}, {}}}, 
          VertexColors -> CompressedData["
1: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
3aPwbtK21EmWzMuvQu55SZPU/eNVboXffRgdinGxDk2n7iH6m8o/dGEU/EG2
6usHeH/eVYYmH5HnO+7+Kb6XBu5HLh4UTwjpQft8Dq067tcI7v3Nb0Seku04
3dKT9nDWdS9QPu9d0+QG0vkROmsz9yi8K9nqlu4h8xKaf7T/yyR1rwqxqT88
c33RneuxJqnUvXfnrpvhnRgJtjCSXN7D+/HKFcOPLDFaWMvrsieSBu6+TDED
cp5dqKRs0ZU6hypwd96h2dfcS/bbxieco5IxuM+pLjBZM/M51Hr3u+0j8B50
wHfhLjIv3U+n3d9NUvePG6I+JZDneyU/QHhuMnUXUm5JDu7A6Ik5W8m6d/Au
+OWql9IFjD6pcM5LMaaBu9ySxBv6em3o5mDAK6EzGeAuu3HF3W1kO1ba58VF
z/odWyjf4T3lzseYuY4rasn3EXif0FHdup3My9XP6X1PJ6m7/cIzoyLk+R4p
HR22SKTubWc7pl+2YyTqpffO9A28b03e326nSl5n1U6zT3DSwNySj2V+aTIN
7Wl4bzrxtQoZtTGfbUlNBPN/1tPsQsP3WxijReMyiQ9m/Y4tlItc2PyEg3Ru
b/TmrcsIvGdNVSpsIfNS77pg6vYkdeczD+a3J8/XXSNeOCOOur80j5Q1asNI
fc92T1UXeN/ox3dygzRGe+iG/hd9e4D9b1t6EaMyzj6YjlFjktmjJbN+xxbK
v9VO7ZxLOr/1Bc89PwLvWSXuB8XJvByJF4k1maTutj1zD/8hz9c845dsWzR1
5/FtkxNoxUgrKntz2TN4XxRS6P5jOUbORZ2qSct7gP1vW3qRjTvHw980jGR6
20zOz/pcHsoNHnf4jUxhJHG1WXHXCLz7KLVuEyPz8txberXWJHWfjr/iLUrm
xdj/sF1VJHX/xhi2SWnG6ISi0NnOR/DekSgnuKePjvx2dWs2XukG9r9t6UWX
rIX2ts58bmgwNOdG6L9/NzDfo5jVQzp3yx/XYRuBd96fXBwiZF6YrRQkDk5S
931a14XPk/3J1ZWLEzzCqXvV20scCk0YGTUlfHlwD97pcQ/KzZPpyNBn2Zp7
rl3A/rctvUhIw5O5sxsj8cZffFuCZ71fBORRxsf8Gknnr2uWb68chvcX5ZqF
AmReXJ8vbdw2Sd0Xmd9LdSf7kyp9yy3CIdQ9jevou6AGjHpTq4NfWMG7xMfi
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
TzH25R8Pdu1x40CAqZ+05Nk2dHcoTAwvySAgvlAtRG0UQXe3SVeNauk8zZJ/
ddquUHwXiEkJ9e0k8OWAT2ifN75fyemcMO8TBUONIjd1XLrRXSV47dmqf+4H
nnpwfA5Xf+HVk/a6hR6g52tvsQlja7nWx+PVAzZ+MjCN58AhgeHlb+Ta0f2n
wZkTJvQ88v7cPNVzvRS6X1iyd2l9D4G4BRvcnnGt64XlzmM0cndy6HnN4vn9
xeH4rmO/qHq0EgXvTXSEj5/oRPdCauHiSLq/6HGKms9z3Q/k1Utsg1ImpxMo
XfncwP8HxdjrmpcEt/6h4Fh81zcSxEL39MuW4+TCCLxRLusz57oPg+V39318
fL+PwIm+c4/ZXN89YXnq0jzyhiKQWfcsfFI0vudKcJYk13Ig2+9qiEh6O7rX
jVxbY0f3l2GLXzVXuZ5n8epsM1HNXfTv/nMq5bWLj7mL813SeXeOwJmBT+HK
vhx0V9Rir9a2JLD81CW/cjd8D3Msr3HuJzCeHeXwz3712H5YuFrLjI5zqfh5
qUOR+J45WOjz8hUHUtr7NQfK2tDdoicrUILuL9aUgeU0rv2UefVTB+6snpFN
12VOn6J+CTJ30UjDFOkXBEysfyxbcZxC9x3pj0Mr9Qk0TlWW99/AQfdOSdXD
sgMEGiZpf+jker8ayys++864Qtdl5945eAS/w/ekor7V4mM4oJ6mkhwp3ILu
lSwvtt93AtTS9Z4FNYSxP8uObL3wmYBjhMGloanM/fFP+5/XYwm8m+wnL/yF
QvcbEtPU9zgQMOPrut9YykH3k+5lC8LoOF9z9oDwrEKC7g1fXh6Y3EH3O2cv
nxWe+D5w6fxod18W1K3/5dW3qg7dD2mf0g0bJPDEPz0g/ith7Fk1ChOu5hD4
Nf3ItzNCzD3udtybjVkEvn98+cBwHL5/staY/DOGQF+uqmQa174hWH7SSHet
8DcC7upJrRVFBN0rVQVnr6TzmPaLaX7tp/HdJl3orINIJ/j3+48pOF+E7h/n
Lz94jx6XpD08ztwqIIz94ZV7s1bReXmt1vC+q7OZ+2rrKLmV9Pg418GtVEgW
3wvPrDU+TudDimpGnWPE8F3wakSaBR3navefsDRK8N1w/YnXiXR/2/7ef2HW
ajy3OvIhebzDP++vG5Y8WdUIw2vnTD1f/R7N/7YzZ+0D9mO6Tjy5rlE6PYow
dv2FZeQJ3V/eTf2cqziHuR+/pT/majkBj+vqq3ftwPeL1WnrptDjyFqq94zM
UnxPmjLBPJqOc5dlyh03S/F93tGzbz/QdatRfN+Vy2YUmg/fXhg1qawCzC4N
HYx+kQLjx39uXMzfgOZ/2zm7X5qodBPQXFGcOSGAMHbR0zFDkXR/ecue9jJs
DnNfHHA4T7KawMsHGeOtDPBdy/JFq1kCgSrDSz+9vlLofkvr0rdeOs7HX1O7
ebeMoPv+31acaaEEhOuFOc+49rXE8f/a0QPr56vrSPYS0Lo45VIp1zrDvHqs
Yu9aJ7q/RNRrP/oqwtwbbnK6PtUR0Ak97Nljju/HLGS8XzkSeK5sXfymioPu
wqrzv4jT9e91NsftCPf340jOr7yjIZWuw8Vv/tgvsg/b/2vHP3WiesasfgL5
bSyLFZ+560fe/PlM1Xm/cghIKlcJeQoz9ys+2yfebySwOu3GKrGL+L4lfmjs
xOcELCSodRGHKHQ3mq5bvI2O84NlPRuHueIcy9WyjBxb2ggcmrXJY9l9bP+v
HfR85HLSWKGPwNfiU2nnudYx4NXDL25WGE/3F2XV9YVWM5h7Y0RmSVUzgYEK
z04BJ3y3TKxxcSskME1JZnOQHL5r/N5vdpiOc1ZoyXKjCnxXWfFBaIiuF2aH
r1IUf4Xt/7WjB7I5xR7/vGeSnVU0fyLXeya8eq6uzH2VbLr+XVuhnzOBuZsn
by6raKXrsjy9W/638f2t7i3+WHpemyxTolpyEd/LhX9kmNBx7qP/NfhKBb4/
mpM6dgaHgIxDy4NVYXhuyRncM3CrE7yvLJ+Xsq4IXHaNyZ+0oATN/7bTMDxm
43Y6rp47Kv5Z7UIYe2J3kbwSPZ9l7ZjQl/6bYuxKzpVTrrYTGPwQIZnqTtC9
4UV7DdVBoNB0+roRL3wvnuxwbDcd5/d063xmV+B7k+wr/m46zvMlXH98fY/n
l82zLn6m23UieXyNzYRWWPrdPEB3zyc0/9tO0VBhtZt0HtL/dfpNZ648hFeP
1AL5/nQCZ948KXP4RTF2A9bAySY6rtL4BeZlcsUVlh8bjLqawiLwuiVkwCEI
3yeIOmT/+UbnaY0KnPQyfF/9Xea+MJ3P6Ey2O//kA76XVEYKzHLqAicTT1Nl
93J0nykmv2ZNHoEyVdmJMosIYz8p6HhGlu4vtekuqsuGKMYuNjE+YkYXga37
V2uzfQi6hz56EbaAvo4PpwXfS/iA7x/a79+RpuM8xKc9S64Y35+qliqm0vOI
l3xjhNR7fHdf+kjw0zY2XFzktFO0uAHdVzRazjFOJCA9StVxcSPF2LUWzr2w
JZXAV9mAupYe5l65YsnRuXTdaqZZVnLkBUH3noKCjGRCQOSg3EBmHL6Pv1GR
q9lPIPGkZI1kDr6HeCUOR7IJpM/RkvcJwffwR7rvLfZzwELKRiDEqhXd3RT/
vPSsISC58sOw7zHC2J+Jl+hFJhFo2Vb6pKiNYuxKMgslRug41+6oOb2J634R
lmcfHbze10MgdXvtrf4kfB/VuUDreS+BcQHfSFUqvstfX/pq5z/jEt9GkeUB
+L5DhD338DAH7m2JHWWxvQPdT8x7aTZIt9NTfG6oMFdc8erV54XfPkwgsPz8
qi9alRRjn1TsmJ9J1x3pszs7H3PVHVh+/+LLO7V0XD1f51Tfnobv23vmXhKj
2+nor5FV9Arfx8zVKTCn4yH0d0RMcgC+P1X/6GFmTsGU46M8n8h0ofss0ysz
ltDjpKzq1xO2XOug8uopJG+kJobOH+a6blfmet+bV7fa7RNjRc/7D+1Ol1zl
+q4Hyzm/8pvc+gi8dg9x6crE91AFfY+5tQTmZQylNJrg+3Q128CpdL/7uS0w
9vorfDeUnLJNKZ6C4Ec9LWqO3eie6Lb162r6Ovprh4oe5XpezKuLhuz4YhNJ
4LtXXqFKNMXYu4O+jvyzLqudcNTOn1zrqGD5mpzhhf+8r3LoQf1r2c/4fvpJ
sLNXBwGnJ8lZNx7je/eM5tS79DwyZc68+Zov8X1lU+/k5n4Kdn0w9da/xEL3
ipWCSrPp69ggrZG/jus68up864Lqt4QRUJsvrJvLtV4Ery6pdPS8Ix3n7tuM
M6dGEHR31pU4eJ7+f2fw3fuSkYPvR0yld9vQeWOc5Mh42VR8v3CGP+h+F4H3
e24bCPjhe+UOOcudCwls6PQ2Yq9ho3ueQUyHJX0dX6bI9kdzXUdevXnJu7vC
dN0SMse0RMSZYuybVg4ubaHj3KP5unY8131XLF81/SY40v/vT1vRh79y8P2l
SD1fzMA/71fzOW0sxPdfeephap0EhuO1T9g8xXf2CRGHWGUCLfM175/IZKP7
qnadCVfp61jdafmR4r6+PPqih961Ef4EzqyrPS1mQjH2d/et1JZRBC7Pk9fq
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
rscYcA4bQaxr89nzaPoTYF+s/LWN87uwfiIzZFVaNQTh1tYCkycg1hMUeC4K
1BOg44cN27ZlNKwPxD/a8w2Vw0XKVdIEqRwyc6ksP+0MLgjemEgekq6lYX1T
xOlxfzQOrLx8x7aWND5k5sKRo7EzpSCY2WA3onylG+tPi2LmbkH1VHiFUGqJ
BsR6cA7v2fV7IdC+emPsQ2s31jtD5Se8K9A4SvBS5te9EOtjaV2im9H34V0W
2da5k451LfZbV9LKIFi3OsEwYzvEul7YCs3TV9DfubW50fgZHevbhB3XvimB
YOMskyO+GyHWu5wqZrhaoXb18ZymvnI61reysvBsK4KAfnKP4F4piHXj3DUq
J59AYLpqmZUON4F1gaShqEdoHH5zd5P5K9L4nJlztL6r0XgJgUvdYILXFgLr
y6WNayy/QKBklVB1gfRcg5mn5m6STfJH38v1mxd2ke4jMXMh/WEPNtTPjp5V
cr/MDrGuOnTI6VcoBHw5YQaPHxBYL3/5+NW8LAgWn7steLQf743P5qWyRkMA
+kauaQfjfc6ldbI2qRCU09sdgxrxfkZ58OfOeAjUXomWn8zEOyuHmuN6NM65
q2Jf/+EL3iUGrc8XfIJgh8Z9o20/8f6j7unDlg8QaL2etLj1Hu8Sy5qLwzJQ
vxP7WUWTwDunud+KLWEQZLdlmx13xvv2kYmuXjTv87TYN1A8A2L9TR57hhsq
V3syI0a9TxNYX5Gu6kb/jMb79gH9rKTnLMy8T/viyAfGuoLAbN8/awmsO9EG
VJxRvave4tsUTqp3zFzF0MFlwhqCrkb2zatr6FiXW9+cnofajcsgUNJHBmK9
+ey1vGLUv8qv3hx/8Qgd6/2pgwXv0Xwoe3e0heRWiHXPl2K5u9G/53OfzSWH
bd1Yd/arkNZC/cKqw3UFT/ZArD/Vc/cIvEaAkxnbq2v2d2K9vb2zNA71ay2N
a3a0kMarzJzr2xndcgM6cGn7nhvg14J1DQPjiibU76dtNGfZcxxi/Qxr3qev
OgTQyrC6/6OyA+tP2b/8qUDjomhJdfVE0riLme+//FuFs5YA78orD6jz0rD+
RVrdyLEOAq9fNV1sFyHWv1cvmaPRQwDZqHm3Oy/QsC753oAvrR6C3kN6TXuu
QKyPf3rO34nao1mAiBXipGE9kUeJd7gB1buARwJeNyDWm0V2XXMMJIB/gPLr
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
teP91BIj+g40Xlw4KL88cT3ezzoPuDL2U3YISN67ugPvAgOvFrD8P5XdeTBV
///A8Q8R0iJKiyWJrjYSQtshe/a1ULSIipYPIoRkKfGpZMku+76VIpUoiSSU
hKzZ494j+3b5ve9vppkzzefM6/vpn2YeMz3ndjr3vZyu+0brLe6/RpbePQi7
6sUdOZGos8F+vCxnAHbRvyowxnP7HWFca/5Rg1098qRMIeq4FvEs2z4Iu6QK
1n3sG45NXnmebKAHezilx/wT6mw8M7rm7iDsJbQn3yhovE5islLacgz2hNJj
4t2oY5jOxDUwCPuIJl76tgXtmxLUtdZZwh7wUfoH2xyOqdsZZvr9hP111Bq2
Ha04dtWlrY1yFvYO/ruOW1GHV4ZSuWwI9hMXJFX10Hyj0h66ke8C7Ea5uj8V
UKe7W0vIfQj2PWINIqztODa3ZkWh2EXY2VhUtU1Rp3Uu82bfEOyOJm9yEtDr
bOK1kfe0hd1zDp+4jDrS1vkX1YdhnyiZFvqB7pMHtqvU1c1h33o0ytcHdXYG
iajHD8Nu2lBszNuE9mU1xoa+hrDP1BU/ZJzzm2Ypu2JoGPbnFs37XNB837Co
lXLFAfabFWsSY1HHp6dKmJsKu61Y5sV2NB/fXsNdy38T9msWIVV3USf9Q3ZS
zTDsIXYJBqFoPvv79FoHX3/Yp/05k00Y15l5M9v3IdhluUZZS9B89vFjZfSt
u7AzserEx6NOX+TY6k1U2IN9TVnS0Hz2TvNEtesD2N0wlg3tqJNhyHVShAb7
yrPB+y6h+WZLwQbTL6Gwh/L+0P+FOnJZm/52psH+Pdc7nw/NB2k+7hOl4bBz
tCsGtqHOG0rV4mYa7KMzI8FPUYf3Q+W4aRTsL9KF+L1R59gFTvGoYdhtbFzt
DqHxupcv1CA9Bnbnz9vO1aIOTb+nu4cKuw+z+4FC1FntuNLmSRzsa3ycbkrN
45iRop9LKA57FGe13yY0H6SKHl7rFA+7sK3riCXqzBcpuhiPwL5a8kWTA+r8
etzs9CMB9peHfNTcUOdl5Ehs9QjsOqPOlSmoU9f5LaQkEfYNjZoP76PO4o3g
Qsov2KtfnesIQp0iw41yVomw177k3ZmIOpMCUUuu/YK95uSJFsZ52wv7Zzab
JMG+TlviQAHqqHoMvS77Bfv2iQcRGBqP2qWYpgxSYLcJstApRx2Bgdk9bKOw
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
1/PP/v8BTGvWyQ==
           "]], {
         DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox[
              StyleBox["\"\[Omega]\"", 18, 
               GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
             FormBox[
              StyleBox["\"k\"", 18, 
               GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
           FrameStyle -> Directive[
            GrayLevel[0], 
            Thickness[Large]], FrameTicks -> {{Automatic, Automatic}, {{{
               NCache[-Pi, -3.141592653589793], 
               FormBox[
                RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
               NCache[Rational[-5, 6] Pi, -2.6179938779914944`], 
               FormBox[
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"5", " ", "\[Pi]"}], "6"]}], TraditionalForm]}, {
               NCache[Rational[-2, 3] Pi, -2.0943951023931953`], 
               FormBox[
                RowBox[{"-", 
                  FractionBox[
                   RowBox[{"2", " ", "\[Pi]"}], "3"]}], TraditionalForm]}, {
               NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
               FormBox[
                RowBox[{"-", 
                  FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {
               NCache[Rational[-1, 3] Pi, -1.0471975511965976`], 
               FormBox[
                RowBox[{"-", 
                  FractionBox["\[Pi]", "3"]}], TraditionalForm]}, {
               NCache[Rational[-1, 6] Pi, -0.5235987755982988], 
               FormBox[
                RowBox[{"-", 
                  FractionBox["\[Pi]", "6"]}], TraditionalForm]}, {0, 
               FormBox["0", TraditionalForm]}, {
               NCache[Rational[1, 6] Pi, 0.5235987755982988], 
               FormBox[
                FractionBox["\[Pi]", "6"], TraditionalForm]}, {
               NCache[Rational[1, 3] Pi, 1.0471975511965976`], 
               FormBox[
                FractionBox["\[Pi]", "3"], TraditionalForm]}, {
               NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
               FormBox[
                FractionBox["\[Pi]", "2"], TraditionalForm]}, {
               NCache[Rational[2, 3] Pi, 2.0943951023931953`], 
               FormBox[
                FractionBox[
                 RowBox[{"2", " ", "\[Pi]"}], "3"], TraditionalForm]}, {
               NCache[Rational[5, 6] Pi, 2.6179938779914944`], 
               FormBox[
                FractionBox[
                 RowBox[{"5", " ", "\[Pi]"}], "6"], TraditionalForm]}, {
               NCache[Pi, 3.141592653589793], 
               FormBox["\[Pi]", TraditionalForm]}}, Automatic}}, 
          FrameTicksStyle -> Directive[18, 
            GrayLevel[0]], GridLines -> {None, None}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 600, LabelStyle -> 
          Directive[18, 
            GrayLevel[0]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", "GridLinesInFront" -> True}, 
          PlotLabel -> 
          FormBox["\"l=12_t=-1.0_J=0.4_m=1.0\"", TraditionalForm], PlotRange -> 
          NCache[{{0, Pi}, {-4, 6}}, {{0, 3.141592653589793}, {-4, 6}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  RasterBox[CompressedData["
1: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
1Ks=
                   "], {{
                    Rational[-15, 2], (-300)/GoldenRatio}, {
                    Rational[15, 2], 300/GoldenRatio}}], {
                  Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], (-300)/GoldenRatio}, {
                    Rational[-15, 2], (-300)/GoldenRatio}, {
                    Rational[-15, 2], 300/GoldenRatio}, {
                    Rational[15, 2], 300/GoldenRatio}, {
                    Rational[15, 2], (-300)/GoldenRatio}}, {{
                    7.5, -185.41019662496845`}, {-7.5, -185.41019662496845`}, \
{-7.5, 185.41019662496845`}, {7.5, 185.41019662496845`}, {
                    7.5, -185.41019662496845`}}]]}, {
                   CapForm[None], {}}, {Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.5, -185.41019662496845`}, {7.5, 
                    185.41019662496845`}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -185.41019662496845`}, 
                    Offset[{4., 0}, {7.5, -185.41019662496845`}]}, {{
                    7.5, -111.24611797498108`}, 
                    Offset[{4., 0}, {7.5, -111.24611797498108`}]}, {{
                    7.5, -37.0820393249937}, 
                    Offset[{4., 0}, {7.5, -37.0820393249937}]}, {{7.5, 
                    37.08203932499367}, 
                    Offset[{4., 0}, {7.5, 37.08203932499367}]}, {{7.5, 
                    111.24611797498105`}, 
                    Offset[{4., 0}, {7.5, 111.24611797498105`}]}, {{7.5, 
                    185.41019662496845`}, 
                    Offset[{4., 0}, {7.5, 185.41019662496845`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -166.8691769624716}, 
                    Offset[{2.5, 0.}, {7.5, -166.8691769624716}]}, {{
                    7.5, -148.32815729997475`}, 
                    Offset[{2.5, 0.}, {7.5, -148.32815729997475`}]}, {{
                    7.5, -129.7871376374779}, 
                    Offset[{2.5, 0.}, {7.5, -129.7871376374779}]}, {{
                    7.5, -92.70509831248422}, 
                    Offset[{2.5, 0.}, {7.5, -92.70509831248422}]}, {{
                    7.5, -74.16407864998739}, 
                    Offset[{2.5, 0.}, {7.5, -74.16407864998739}]}, {{
                    7.5, -55.62305898749054}, 
                    Offset[{2.5, 0.}, {7.5, -55.62305898749054}]}, {{
                    7.5, -18.541019662496865`}, 
                    Offset[{2.5, 0.}, {7.5, -18.541019662496865`}]}, {{7.5, 
                    0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    18.541019662496836`}, 
                    Offset[{2.5, 0.}, {7.5, 18.541019662496836`}]}, {{7.5, 
                    55.62305898749051}, 
                    Offset[{2.5, 0.}, {7.5, 55.62305898749051}]}, {{7.5, 
                    74.16407864998737}, 
                    Offset[{2.5, 0.}, {7.5, 74.16407864998737}]}, {{7.5, 
                    92.70509831248418}, 
                    Offset[{2.5, 0.}, {7.5, 92.70509831248418}]}, {{7.5, 
                    129.7871376374779}, 
                    Offset[{2.5, 0.}, {7.5, 129.7871376374779}]}, {{7.5, 
                    148.32815729997472`}, 
                    Offset[{2.5, 0.}, {7.5, 148.32815729997472`}]}, {{7.5, 
                    166.86917696247158`}, 
                    Offset[{2.5, 0.}, {7.5, 166.86917696247158`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -185.41019662496845`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -111.24611797498108`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.0820393249937}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.08203932499367}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 111.24611797498105`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 185.41019662496845`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
                 NCache[{Automatic, 600/GoldenRatio}, {
                   Automatic, 370.8203932499369}], BaseStyle -> {}], 
                Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               Directive[14, 
                GrayLevel[0]], FontFamily -> "Arial"}, Background -> 
              Automatic, StripOnInput -> False], TraditionalForm]}, 
           "BarLegend", DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8333333333333334`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.372793, 0.1358, 0.506503], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24852866666666668`, 0.09053333333333334, 
                    0.33766866666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.372793`", ",", "0.1358`", ",", "0.506503`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.372793, 0.1358, 0.506503]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.372793, 0.1358, 0.506503], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6666666666666667`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.788287, 0.259816, 0.270778], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5255246666666666, 0.17321066666666668`, 
                    0.1805186666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.788287`", ",", "0.259816`", ",", "0.270778`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.788287, 0.259816, 0.270778]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.788287, 0.259816, 0.270778], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.979377, 0.451467, 0.0511329], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6529180000000001, 0.300978, 0.034088600000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.979377`", ",", "0.451467`", ",", 
                    "0.0511329`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.979377, 0.451467, 0.0511329]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.979377, 0.451467, 0.0511329], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33333333333333337`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.682688, 0.129771], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.4551253333333333, 
                    0.08651400000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.682688`", ",", "0.129771`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.682688, 0.129771]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 0.682688, 0.129771], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16666666666666674`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.882236, 0.491094], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.5881573333333334, 0.327396], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.882236`", ",", "0.491094`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.882236, 0.491094]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 0.882236, 0.491094], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"0.00013107525638497415`", ",", "1.`"}], "}"}]}], 
                  "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                    RowBox[{"14", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  FractionBox["600", "GoldenRatio"]}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8103905750638027`*^9, 3.810390608831933*^9, 3.810390729934989*^9, 
   3.810390814608952*^9, 3.8103908457210827`*^9, {3.8103909164735317`*^9, 
   3.810390942117605*^9}, {3.81039146093636*^9, 3.810391485350773*^9}, {
   3.810391584004724*^9, 3.810391595269847*^9}, {3.810391782014234*^9, 
   3.810391788082169*^9}, {3.810391906696463*^9, 3.810391938746827*^9}, 
   3.810392049399124*^9, {3.810392227865271*^9, 3.8103922507902203`*^9}, 
   3.810392342192637*^9, 3.8103923981482*^9, {3.8103929247800493`*^9, 
   3.8103929388748093`*^9}, 3.8103929814692698`*^9, {3.8103930481022043`*^9, 
   3.810393057727213*^9}, 3.810393268203128*^9, {3.810393364543*^9, 
   3.810393382306775*^9}, {3.810393451925887*^9, 3.8103935318065443`*^9}, 
   3.810394003314014*^9, {3.810394114925994*^9, 3.8103941359698*^9}, 
   3.810394186008305*^9, 3.810394227457534*^9, 3.810394271363574*^9, 
   3.810394308119833*^9, 3.8103952088901176`*^9, 3.810395825619926*^9, 
   3.810396166287031*^9, 3.81039622642714*^9, 3.810396404626031*^9, 
   3.81039644084722*^9, {3.8103965080800753`*^9, 3.810396593518826*^9}, 
   3.810397019619102*^9, {3.810397878674755*^9, 3.810397899695962*^9}, {
   3.81039891892865*^9, 3.810398939049028*^9}, 3.8104007121071787`*^9, {
   3.810400814811137*^9, 3.810400864360169*^9}, 3.810400924359673*^9, 
   3.8104009647590837`*^9, {3.8104010143572598`*^9, 3.810401027097733*^9}, 
   3.810401192058448*^9, 3.810401506463846*^9, 3.810403535284803*^9, 
   3.8104044066604347`*^9, 3.810404475991777*^9, 3.810405812513365*^9, 
   3.810406199241117*^9, 3.810406628822138*^9, 3.810407376247992*^9, 
   3.810408520415102*^9, 3.81044619746587*^9, 3.8104543246301403`*^9, 
   3.810454612500051*^9, 3.810560222818025*^9, {3.810560278825938*^9, 
   3.810560300653748*^9}, 3.8105604789193773`*^9, 3.810560560485157*^9, 
   3.81056091548508*^9, 3.8105610642440443`*^9, 3.810736498477359*^9, 
   3.810786827017852*^9, 3.81087773011339*^9, 3.810878487630003*^9, 
   3.811514095678727*^9, 3.8115144579063797`*^9, 3.8115189256278276`*^9, 
   3.811522037491488*^9, 3.81152207031996*^9, 3.811522132531919*^9, 
   3.811524692750317*^9, 3.8115249371417313`*^9, 3.811525023129553*^9, 
   3.811525232880588*^9, 3.811527647426552*^9, 3.811527820750445*^9, 
   3.8115278602903967`*^9, 3.811527998727475*^9, 3.81152804839709*^9, 
   3.81152813611582*^9, {3.811528179599328*^9, 3.811528202689342*^9}, 
   3.8115289243955297`*^9, 3.811528987868947*^9, 3.8115290252750874`*^9, 
   3.8115291194703608`*^9, 3.8115292598504763`*^9, 3.8115292993487673`*^9, 
   3.811529353263842*^9, 3.81152943822374*^9, 3.811529484730015*^9, 
   3.8115295532022257`*^9, 3.8115295955485697`*^9, 3.811529687132043*^9, {
   3.8115297233478947`*^9, 3.811529747233399*^9}, 3.811530144612554*^9, 
   3.811530504433733*^9, 3.811530681481901*^9, {3.811530996870639*^9, 
   3.81153101159689*^9}, 3.811531285184745*^9, 3.811531353879424*^9, 
   3.8115313881266937`*^9, 3.811572290735633*^9, 3.811572365078602*^9, 
   3.811572759762866*^9, 3.811572804712328*^9, 3.811573000725877*^9, 
   3.811573067149868*^9, {3.811573108872284*^9, 3.811573123474039*^9}, 
   3.811573208142428*^9, 3.8115739739228573`*^9, 3.811574221174925*^9, 
   3.811574732369474*^9, 3.8115747662711906`*^9, {3.811574799525936*^9, 
   3.8115748431436462`*^9}, 3.8115759859435167`*^9, 3.811576379413025*^9, {
   3.8115767377742863`*^9, 3.811576759781691*^9}, 3.81157695431581*^9, {
   3.8115875838754787`*^9, 3.81158762745603*^9}, {3.811587682937253*^9, 
   3.8115877043811483`*^9}, 3.811587881219263*^9, 3.811588135418214*^9, 
   3.811658316918734*^9},
 CellLabel->
  "Out[984]//TableForm=",ExpressionUUID->"091f59ea-474f-4255-a6c3-\
0bac45ab540e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"plotsDir", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"Characters", "[", 
             RowBox[{"files", "[", 
              RowBox[{"[", 
               RowBox[{"whichFiles", "[", 
                RowBox[{"[", "it", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"16", ";;", 
              RowBox[{"-", "5"}]}], "]"}], "]"}], "]"}], ",", 
          "\"\<.png\>\""}], "]"}], ",", 
        RowBox[{"plots", "[", 
         RowBox[{"[", "it", "]"}], "]"}], ",", 
        RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"it", ",", "1", ",", 
      RowBox[{"Length", "[", "plots", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.810407644037093*^9, 3.8104077362654543`*^9}, {
  3.810407947676444*^9, 3.810408000410625*^9}, {3.810408044620438*^9, 
  3.810408116688716*^9}, {3.81040818022536*^9, 3.8104081895995407`*^9}, {
  3.8104083258654327`*^9, 3.8104083518491898`*^9}, {3.810408534282598*^9, 
  3.8104085345824947`*^9}},
 CellLabel->
  "In[900]:=",ExpressionUUID->"fbb9b51f-0a3d-41e3-ac99-d8d67dcaf8a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sliceA", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "k"}], "&"}]}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Pi", "/", "2"}], ",", "Pi"}], "}"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", 
       RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8107367237083673`*^9, 3.8107368008008747`*^9}, {
  3.8107368566015244`*^9, 3.810736900361429*^9}, {3.810736938075314*^9, 
  3.81073703871846*^9}, {3.8107371642993*^9, 3.810737169831215*^9}, {
  3.8107861408480997`*^9, 3.81078618013682*^9}, {3.8115251734554653`*^9, 
  3.8115251939568*^9}},
 CellLabel->
  "In[800]:=",ExpressionUUID->"2430b3d2-eab7-4f46-9f06-bcf0a52859dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"sliceA", "[", 
          RowBox[{"[", 
           RowBox[{"it", ",", "ik"}], "]"}], "]"}], "+", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"(", 
              RowBox[{"ik", "-", "1"}], ")"}]}], "}"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{"sliceA", "[", 
             RowBox[{"[", 
              RowBox[{"it", ",", "ik"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
        
        RowBox[{"{", 
         RowBox[{"ik", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Opacity", "[", "0.75", "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"it", ",", 
      RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7fNQtyg95Y2ji+bSYhCd8F+2BUT/VUxtB9HXgqJ7
QPT1g/pTQHR+4+elIPqZDucyEB3uq7gGRKscsd0Konfmf9wJog0e8e0C0Xu+
qO0H0Sf6Vp4C0StkSy+C6GPCuy+DaBb9qbX1QPrgKpYWEG2lltMJov+EPOwB
0QqNU++BaAeu4ocgetoRxbcgOtJx5wcQvWtL1g8Q/Wyjw08QfbuS7y+IvqWw
CUyXma3iepr6xnHhi0W8ILrtx+ubz4F03gGHOyA6qqL1AYi+8+AMmL6dffQJ
iDZqz3wBok0+3xZ9AaRXdTpIgGiPNptiEH3Q4lYZiE6aGzEDREtM2gmmmxgc
ItnS3jhGbL8PpgGMib5q
  "],
 CellLabel->
  "In[802]:=",ExpressionUUID->"2d4596cb-8856-40f8-a905-bfabd257d577"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw92Xc8V//3AHB7y3zbldKnQTtaqnOatCQpJVnZDaQiI2SVZGXvTUilkpYr
DaWPEopQkiirSJnh59vnvH9/vR/3cR+ve8+9z/frvM553Rnm9nqWXBwcHKu5
OTj+95vL/7XNeLyXue59gduiYAN45xmo2L7tZRTiSi+X9G6A/buemzrl9zI1
ARqGfuobYVH/yiQPn16mOMNpoOzMRuCLvtIYYNjLcMRVHj1XuhE+rFaQD18y
OX7sm+prgU1w62PgvgSBXub5jwCR23qbQIZ3cM5O5gdzKzLCFJM2wdMd9Wlm
x34wDqdPfPfo2gROEXennlb8wdjOjxt1Xb0ZZjTFxQS++M7ckfDdvfniZnit
4i6V7Pydmd/XvrHrw2bwOHIo+OY/35nR6bp33JZuAbWb6wSf1/QwC58rzOW7
sAXej0z3bfLuYYTj/r0R17IFAjZwTvQu6mHMQj7KbFujBRqBn8/wfuxmKrqH
nv8TqwWtbx7/kg/qZqyX5/bBkBaEy2faL1zdzSRYpLrlHdAGNPPv3PCti+HX
Pqnk/lAbvudYWxpEdTEPH44aP1PZCgm92p+ObOpiCqR1C5KDtsK2laoHvX52
MiF1DmbThrbCkKfwu4iUTmaxZEb5AattkFXerXtFp5MZmRGnYVe3DfTFXr18
+KeD0VpsIWW7fTtwGVzbUp3bwfQk7OhyKNsO15NCH7Xv72AMPqeeSVyzA4zb
HdeM8nUwKh/8Hgrf2wEiC/fcEbv9jdnRWivUsHon3DulvnTW4W+M1cNVU+cy
O8HmIevqSolvzA1zv/myWjrk8ZXh33uYq6JaB5789fjKRGb6SVia74ITfz2+
MkvErIKnDOwC5b8e7cyQ/MdNg1t0yaOd2T5o6S8bqUse7YxSd73i2TZd8mhj
eKq7Fm9YuZs82piiDuNp7pd2k0cbE7Y5y31z227y+MK84OtbcRf04Mtfjy/M
np1XM/sT9MjjC1OXeiVeckyPPFqZg/WD5zVM95BHK8OMFYd6PNtDHq3Mvsax
LNHF+uTxmZEQ6L4mlKhPHp+Z+qNGqfGie8njMzMndUF2h/de8mhhdHMDtymP
7CWPFsbF/1jCsdP7yKOFuZuUf5hrcB95tDCOHzp1JN0NyOMT8+LdS9Va3v3k
8YmRNahXOhexnzw+Mf59F1sPzD0A84W+74o728xsmZBQSnx0AAJjr29+3PCR
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
/PtiB+PIQxIvyd8O+yodTR6SyDmg6fNNLZI8JNGAyVtT5htFHpKYZ5gkUFcc
RR6SuOHKo/BZR6PIQxJLpPdIafpEkYckVti1Pmu7EEkekrisM2g7pkaThyQe
Ln6xtyU/ljwkEbnv226cHk0eknjhGdfhVR3R5CGJCzZe2GnVHE8eklj4Jq+z
rS2aPCafd8+X4Ss9MeQhifcKfL4+upFCHpK47XVfoHtuBnlIoWZ/jSKHXhZ5
SKFWmpxRiPwV8pDCnbKN4ynzCshDCrOyjb9n3CkgDynkq093SUnOIw8pbNx5
43z33CzykMJrGp7eXD4Z5CGFPwfPu0d7ZJOHFF6OTBXTeplJHlJoq5j3buWC
NPKQQo+zwXXZdinkIYWzpy3d9GBGPHlIoVskj70lK5Y8pPBm0oFFfFfjyUMK
NRLeDIYZJJGH1ORkGoi0NUwhj8nra87rN1yUTB5SOLNMvrj7n3jykMJLM7Ei
+T7bQwp1Fh+yW/2a7SGFaxYsnWZ6JYY8pDCQtb1iiiLbQ2qy3zvHOhgbTx5S
2Of74Yd+SCp5SOED3tW3ns9MJQ9ptPtH0NeyLok8pFGSr7VKOSeBPKQxaiBX
b+e+BPKQxuRw4+LY+gTykMZ567Ku3zvGzlfSeGNXSv3mikTykEbfjv22v6ek
QNZfD2kUtTefx4Qlk4c0Vt49F9kyme/+85DGOpZh4R2zBPKQxm0zS/2M5ieS
hzS+2nLXN/1qInlIY6tX55U1dfHkIY0B3tmmmrax5DF5/S2FD846svOVNBqb
1O0pNUgmD2kUHzTLGTFMIg9pxFz18zpMHHlI49483ZMWO+PJQxqlXduWLnBL
Ig9pFHgTtaDZiZ2vpPGm7udmMaE08pBG00a+dwbaqeQhjTVO8yvsstge0nhQ
8c/XNVeSyIOFj24ErcqWiCcPFg4/mz+qP5Odr1jIGWFxuXksljxY2LtN2XZe
QSJ5sNDU4U7mSrNk8mBh4vND/BaHU8mDhU+hSvIUTwZ5sLD2dkhT89M08mBh
fmZv7TmbVPJg4Yq5u17MS04nDxbadUovXjGYQR4sjH1ha2B/KZU8WHiZI+CL
Xl4yebDwnLRqjElfCnmwsOGhzha3K6nkwcJ70a2vz7DSyIOFi4dYiVZHMsmD
hSzpPUcX2+aQBwtPbnFhXLyyyYOFjS1lp9K35pIHC/cnq01t1LhKHpPnG0YD
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
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw11Hk01WkYwHFk3wnRIFKWVEg1N6pXRsNRQkmS7CISsk6LIXRLpZI2ydJI
FOIWInpkK2O7iBC613WtF6+tkJjfOOf3nPOc53z+/p7zqLr6Hfbg4eLicif2
//tCYJDtuIRh1SkuwzBejCJfHlM73YahKG/bzjjCdpafnAOzMfjn9nSkE9aZ
piRfisIgVFKvVUqY/0HWV6o9BrOpDbqfCfcYrFWI18MQ2es9zSH8pjfWNkkQ
Q1r41Qv8fBjJ8f3QsIAJ6G5qpasQrj7Y8dTFdwI06LKLhoQDE4qVQn6bgMci
8fx2hFW7Ex/G1o6DbLn4QhDhJrWLq1NCxyEuvYcRT/iSz8m41xvHQdiNXZ1P
WPv1XqFPrWOQ0vbyTTPhzoV10d2RY0CTdymeIkw15l7GOmNAvTLKkOHHaEds
3198vRzwoM1QKIRZzZUzCjc4MH/hR5MD4XiFZ35bDTjgYGtZcJmwkcuVEeOh
UdBjms1nER7P9PQ4dn8U8mb1c1oIJ2Ezho/JKPhbhLIWCZtTNp2ImBqBGc6z
V5oCGM39LdKekDoC6pH31W0JZ3zkWGUdGgHb/ouOMYRtJBrryhaHoZCP36+Q
MM+xV3+2vBiGu8EhAcOE85JvfxiwG4ZMRl2EsiBGjgMBu3/yDwNqZBYfJSy6
9UiRRMEQUJcfGd4iXBK8fdsGtyF42SWoUUfYq0w2hyI1BMg+I0VIiOwxCOFC
0XXmhKtWegyCR+bV1jjC51Z6DAJLg8ZqI6yy0mMAumoctVWEyR4DsGZHco+v
MNljAKwrruuBMNmDDd7VNFcZEbIHG3oSwvN9RcgebKA8KXKrEyF79MNJJ4nq
LaIY9a/06AeWZ5nGPVGyRz8MpOuwucXIHizo6aM7BomRPVgQlDu0xBEje7Ag
w/3hrjPiZI8+WM2YvzklTvbog9A5d2qEBNmjD/i/M9/LSZI9mGDyO727QJLs
wQTVlNpERymyBxOoXA3VUtJkDyaoFLwzokuTPRggMEMReLya7MEAy7OLuoEy
ZA8GvLDJmT0ui9Fm4XHLxPBv8NTZKd9KDqPYR3n7K7t6QYSvedhuDUYDmoGG
nJ29oEy/bRMkj5Hx2x16snd7oCeH0puugFGy6Zz63olumEyco3HWYrTQXqLo
eaAbvim9NTukiJHtqUvSt59/BREPDZ96JYxos0iweNVXaHDQMfdeh5F4DM8S
06kLargtrmurYuQtUz0tXNoJWuXXHGXUMKr5hzqsL98JkjD9QGsjRuv1zb85
BHVAPbW40V8Do/AK0bYY+hfYr+QahbUw6rJu+jd38xdwUxWzzNuMEYV5p/zL
1XZo3LJPuVgHowR/m0Iudhtcnko9L6uPEV6Wy9ba1wZdEtxDzTsxOnirM+3w
k88w0jJi/8sAo0zlpAcX5luhan8DPQthxJvreDP9aCts0jOWHTPByHmPalRD
fgvk3DlSxTTHqLSeFfZdrAX6Yw6kZlpjJO+QcXaddzPMcp0+4X0co6BRL3ez
Gjq0pKbw2rtiRD+vbR+wng4fmvaefHuG+H8y3SnbfzVCIh87oiMMI0l9l+tX
Chrgh+dYpDoVo3rrgZAO33o4UOM1r/sQo2h/H9dN6nWQie9tLMrGaPctbHGx
txb0g5f3vq/GaCYneFfj/U8wVGZzg9aPUXb9wgYVy49gs4tve5LIJHIf/Vvy
nEANsMLagkP2TCJFYb7FSqgCWyGD09Xhk+izZuygbFgl/NEdvvC0fRLdMJVo
9dStgGtWaW9KraaQyamE98VD5TDiXCttzz2N5oT0bdYYA4R6qLA1xWeQl+ke
7Xe0Ujhb5ff8XOUsYkSb8jiplUBlFG/Az4Y5ZFVh3cmTUARbndOKFWeWUPny
ibwM3gKgvZrPsZrkN8q5W1gRI/UauFZGxug/MYNV/g==
           "]], 
          LineBox[CompressedData["
1:eJxF2Xc8le//B3DOsOfhOEtS2kopSkrXOxKVooQWGmRmNpSSFu1U4lsalIYy
msoqSmhIaX+SqJTtPvaIfnd4n58/jsfrcd/3dZ/rfp73Nc4ZttZ/iTtDSkrq
Pf3y7z/zt433yY1Jj6T6/zRBqk5e4Hv08qMtR3xylZploMJdp/COf/yjCEe3
Lw7tfSQ8z722PSHmUVTf73M9rztJuN+QI0rP9j+awr8/zbywjUh55nBTTNY8
qpi9MquU00rCM2cx0seHk+mLK5rrZFpIuEd74gv7E2RBzt90K6dmkhtYbD3z
+FnyIPTj8JnlYiI1a8lmR49L5MFSR5+ISDHRfWJWpBJxjcw9qHI/zEpMwHqs
sDAxhciaKutweGJyc71C+qM1t8i+6M+LnoopAmOlvonEd8j8Dob+tXcUeV3X
JhsSnk4uZ+dW5uZQxC61btI71Qxy9m1U470bFKkIqFw+6UIWGeZpxYk7R5GA
KR93HzZ4SK4Nz6ZKT1BEKvSXQ6tLLnFRm/Gj9yBFrFet8b54JY+MaywKat5H
kSizsjC7xsfEUCsh7uEeinzScTrZZ5xPgjhbL9/ZSxFdqdKryTuekj/+WS67
D1DEs9Ime8XTAhIiV7Rv00mK3Hxc+FpOuYg8XrD0SW0iRTovmVelL31GysuK
+lY8pvuzL6fL7exzMl22Pa2klSL715uoaPx8QawKTn7fZCcmr63uDM/TLyYp
F3wOc+WbCX+swTT/4Ffk/OfbBe0PW8hqhaQFQ7JKiLx9kMzi/E7yrk39pvuu
12TmrJyT2RXSELLeNnPmyDckuaxpzoFfPUT74+F8jWdvSLGJV/WRnFaSa/X8
Va1vKYlfkWT3dF0zcXsg+zlP7S2xDk1KiNskJnJjLX/87+5bsk+5dXo3S0yS
T+9u8F/2jrh0HjQtfk4/b4Xcjrl/3hEzTRPtulSKtG7rldaJf086yllFu5Mp
El1nqtRm8YGcHrFp/cO3FDFZFaL18vcHckVmf3VhoJiUvbyne+nQR3KsNiX+
h0MzCTdrGbdt4ieivnfh3skgJiNSJxkvfvuJ1MddbzC+Q5EiHT8yZstnEiPy
fdNJe/keuzHvr/A/suBwh6j7EEXUpGrsPzz8j1wOnhd6JIsidwNGuaSs/UJO
HPo+9JCnmCyrXOe5V6aM5AZFNesbNJM/ixOCVl4vIyYmR9Uyh4lJ/OPy7ZMX
fSVBM7551N2lyJwp2pHyzV+JM7mk/CibItWXlh+vOFVOlvl8znVQE5PDmrFx
96d/I+zcvgnidopM2vfu8tGv38hd1uNzcW5iUtst9+k2VBAlK5ldy6+Lycw7
o53Pn6ggm8287li9ochRn7nfD/ysIPxl17N3hNOfVz13j01TK8mzlVNa5bwo
MrlsT/3q/ZWEk/rL940HRfZGXwy0+a+S3CzsqzmzhSIfbPLap43/ThqCjVed
vkSRMeyKUL2w7+SkT+vJNKGYbMvpk1J9/Z1YbDzau+SJmLzcNCSie9gP8jsz
8EuIXjPRNpip+Cv4B1k6irlWm7QSv18rot48/UGMyk/I3aXaSO75rdwc3k+i
VmrnlqvSQjhO/ztzzesnSR13eOpo2s9N9f7Q6KyfRCs5Xi78D0XSC98n7lSu
IkU1xqul2igiF9461se1itxva2u+950iK0w00hxvVZHVZdrfV+VSJJkyNDJn
/iJ+kX/3K3RQpO+aXcYEh1+k5vXsor7TYmK3xn+W4OovMsI6+MWWb2JyUXD0
CavrF/FI2+Wmv7SZtL5Jtqbm/yZPA9PcGzqb6XHkRfGXs7+JdtPHs3K1zeR/
5rVLCht/k9Xrmkv87ZsHPaqJZV5fZpJ6y6BHNUlXiXyqHdU86FFN7GfOcC9N
FA961JC4LvFBo0b0qCG2yWMmW2SgRw25vMFLfU8JetSSbYEnXZMq0aOW9MQu
bjlXSg161BKFI/diVLTRo47sSU5PuJ0jHvSoI9q5p4P/x2we9Kgjt+ctnZU8
XDzoUU9ejvBeNZmuvwGPemJ/OppXQo8vAx715MDpnhMpZejRQHwXfCowVRIP
ejQQRnfgMIGceNCjgTR3m7CMZokHPRqJapcOJ8+VHq+T/nk0krgT7EZFP/Ro
JHm50UcbP4pJYr9HI/mmqG4zlf58DHg0ka5mj3ud3GYyp9+jiZQNDaxdOlI8
6NFENk5tsVrbQJGNO1i+y3Up8nx54O0LzRQ9rp00sJ1HkSkP4j0MXlCkwFhP
PCeIIg8e2780peufOn77jmkcRYymX7mj8oEi/MbZmyflU2SYpeWUedZiYj7/
jckout3iqYr6B+jPj/eV1T0iLTFRvj1feih9PJpB5agTMRE/umpzmO5/tsvO
cFl6XPC0sCfPDMTkV6aKRW+UmPAPVsbZOIiJCu88uyVDTGYlRtcQLzExCZ5Q
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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1: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
hRaXtK4J8JtdI08JNyed0zPnksTcpkD9D0mH0Io=
           "]], 
          LineBox[CompressedData["
1:eJxF2nlcTOsfB/AzZ2bap2aamZolyb5lj264PV8kVBKiJG1ESChSRCF1bamQ
7Fmi6Eq2cC1RXeu1hoSIhNKeIsXvTHm+v/6o1+c15zzznHm/vt/znGfq5Ldo
sj/LMEwW90vzN8B3vZ/NpALCtP3IIGPX2spF7gXEcuXLq63TpOCil9Nk31JA
PqSXzUgaqQcNK1p55ilPyUbX8G7mF4SwvWKYwdfRz0i09/HDBcf48IdnmMm9
j8/Im87FrUe2sPDq3jmLw5uek5s5H+/c+cCDqD/re6/oX0jefHS467GCB11P
Dhgy6Ukh+f782FLTQTy4ZR5Eei5/QZyMN28UMDwI3Hpi/C9VEbnRNEUsec2A
mPk85dlVLpeedJ2fz8DZxd29/vZ7STo93PB6djYD7iWzAqK1XpG6mcOLZp5h
oGXSweAZx1+RnT2PnXh6mYGUG8URg5xfk2VDBQuzihmwG2wWq1v3msT9eyDK
ezgPPh2envB2RzEZ+nDO3vJJLGyW7dyTbfOGDBJ+ixBZCmHA+oLUuNdviLPu
/obLtXwob9YpPA1vydDqsd9e/suDEWd6zNyf+Jb0mxrfZVAHHsQtsH+3ofQt
OREw0uF4IwNvu/jPXTa0hNjcynp2wpwHg16t++LzVwlZcibO/u59HkRvP7TE
qaiEOG3rG5F4mw/PnK43Wlu+IyNzzIOOnRNCT+HblV1WvyO3HZ4usv7Jwoor
Pxmjh++IZfHsa8W+PLi3rENMc6f3JGmgKGx8EQNm/Ubol4W8J2fCtE++Tmcg
qMwj/lH+e9LXu2qaywEGcvaHy6+YlpLBzW49P5xiwNgteXfavFISOPHAo4m/
GJhtlN1x+z+lpHfKpoigfB6cv/n0SKToAxkU59fiaMsHnaiGXgu8P5AJ5ob2
Edzn5fGHNHNa1gfS53rsMdElHmTUDLQaxS8jt//+ksV68eBnmsvFvlPLyKUN
xjkBL3ng4rvIVnmsjHhM/VGeNoiFQ8q4XMH3MlIq2dFL0spCw6OMcTUOH8n5
vxw3GemxYL/x7n8v934ksy/uvZV+hQfJo8on36z6SHb8+GKywY732+MT8eyf
cPyTH/X4RITSRQb5iexvj0+kojozVbmf/9vjM5ladSTv8Qj2t8dnkrJaPWLI
HOrxmZy54/dZZyLvt0c5uTgoweLGQd5vj3JiMGbXyusrqEc5OfD1F1swhf/b
o4L4ZfRemuXM/+1RQa6M62D3chPvt0cF2WOw7UXwK+rxhcjl739OvUg9vpC0
yq5/OZ+mHl9IeYal7cwK5rdHJdk36lwMkfJ+e1SSYA+H6NCnzG+PSiK/7T6u
9Srz26OKDE6bOeL7Xwww6RqPKrIyMLtvWSTz24PL9+5UvFrIwJE2jyrS4FN+
alww89ujmqRbOYQf9uDqp82jmiQVL9tR4Mr89qgmU+qSGl5NZmDpKkHgdIsa
kiCvGNXAjbf/xbZ+E8fXEGt10KPKGQz8O6RLrV1wDdlX1pr2YCYDNQmnzwzb
U0O8ZRvqM5YyoKgaGTogjzu+3n5jEXf+KIdHf3SvrCG8Z9vKn49nYP5Rnx9q
k1ribyf1MnJmYDtbc0VCasmel6PiR3HzvewVGaUdUEtq19g86jydgbJLhqNb
42uJwZOvA94NZcDQdL+w/mIt2WFmzyvvycAfIX1vfXpXS3QcNvZ50ZcBnweX
Nxbr1xHrVIfpImsGNvZxmlBgVUdCzmYu7daHgdOxL43uzKwjC5dWRrl2ZeDV
+/mPr8XUkSdTrxye2p0BATRvP5dZR/I9Ww5u7shAv70b3E4U1hGloa3XPSUD
074pVAd59SSq3yaLXAUDUa5pr5J615NLrX9+fyNnIO2U9YHNU+qJDt/8xFUp
A48Nbvqujagn2m931mvJGGgOmNY1LLWerFfn981RM9A1/0PZwvv1JPW8wR87
ufGcOi1Ln9VUT7S2fnxZL6EeDeTS9YUukYbUo4Hc6pQ59KqIejSQjzaiI4cM
qUcDGXime1GdAfVoIOn9/o7JN6AeDYSNvZVnYUA9vhIH1fPjnvrU4ythbPJd
4/Sox1dyruG140A96vGV9Og2XO+mLvX4SvI+xv5bq0c9vpJCqyHXvulRj0bS
K8Sweqse9Wgk7sGzRIa61KORmP87Orq7DvVoJLK+h/IzdKhHI/GrGmqTpEs9
GsmuZVuaJulSjyZiX3b4a6g29Wgir63Pb8/Roh5N5Nygbr7dtalHExGNCRMl
aVOPJuL/tH/hcB3q0URCtRqG2epSjybyUH1nmViHenwjqqPNyXO1qcc3EsmE
8R5pUY9vpO7i3JvdtajHNyIZ0TlWrkU9vpGRobvtNLndg3udPz5ntZB6fCd+
c/oajBVSj++ksVsnXpiQenwnC7766bgLqcd3cv5p7KeeQurxneRK9uQUC6jH
d1Lo/uCnn4B6NJOwx6LpXgLq0UzmDQu2HSWgHs0kdLN/p34C6tFMilqv3izj
U49mMiW334Z0PvVoJranZZ8c+NTjBzFYZMFT8qnHDxJSZWvdylKPH2TOar/p
+nzq8YOoBrquFvOpxw+ikxjh8oKlHj/Iy7n2dTks9fhBdnXIvPaQpR4tJFs2
2OUZSz1aSGhwVMU9lnq0kGaXn+/OsdSjhUj7/Oy0j6UeLWTK6a3v0lnq0UKW
l/TodYylHq1kclji6l0s9WglaVmNgdtZ6tFKxlietj7DUo9W8r2mbkIuSz1a
SWhdYMdMlnq0Egfl6EVXWOrxk+jnVjg+Z6nHT3Ly/aBVl1nq8ZPIXtvuXMtS
j5/kwms/8XKWevwkZpcOp4Wx1OMnafYp0w9gqccvYtZdviWKpR6/yMgtVlfj
0OMX6StXqDez1OMXsRkc15DMUo9fZLuH0YJ76PGLHG0a5ZSFHr9I58GwNIbL
/9iy5y3FDLzRHmQ6mssPvozfeYzrs7LOPh9Nufx+d0JYZxsG9AcX1Mm4/G3c
i+n7JjAwL9L/UncuGzRZDFf4MfDky3LVIC53Sg0w2xbKwJ/R/pbjuDxkyqlW
0SYGeu442teDyw68b8V/ceui7KSi4BFc9sokOfyzDPAPpzZpxg+ZGXtw9S0G
4vd32vWNx0Cs/oO137n79uOOlaalXN570WT20lruc/3n8M63XD4112tMtZAH
0j2my+q4nC8/2n2+igcrJhXktXD5RW6l9od+PJiyzsL7OZerlgz57D2aB7Vh
gjlnuMxarLpT5MaDWa6fP+3msun9vBNTA3nQ4u6pv4vLfSIMtjyM4kHh8eHG
aVyG3q5Bjjt4UNMYbJLKZdfCPRP/TefBqJ65TnFcnhfzfsDIqzywMNyxJJTL
q6z6GF9+zK2jrkzsMJvLie+C64d+5EGCwSaXGVw+Gn+pIOsHD3YVeCRoXm/3
YKFrReeScB71YCE4psRoPY96sBBVlHg8hEc9WMjMfbdyAY96cOu40uPf3HjU
g4Us+0eWDjzqwYJvVYckRx71YGG3ufD+ZB71YGGedpzNYh71YOH+pMt6MejB
Qm12N0ECerCw8tk/BofRgw/bb200vYIe3Dq7Z8PaJPTgw/34DzHz0YMPZ519
zd3Qgw+7r1uv8UUPPgw8efhvd/Tgw8yns93+RA8+JI3ssvsP9ODDxwXip9bo
wYfXuof+GIYefNAyPbC4E3rw4aDr7RQ5evDBf+XCpaboIYBxea/u9UEPAVQE
HvrXGT0EIGgNdvNCDwGcebYyYyx6CODe4lUTxqKHACb2srHthR4CsF/8PEKK
HgJIm3U1XYEeAphqtdhfjR4CCOjfV9YBPQTw42ly717oIYAV/WKWdUMPIQTv
eGGlRA8hiBYezpKhhxCM5uu29kQPIUwK++zSDT2EEH6l0lGCHkL4Yf9tnjF6
CMHbpcMYCXoI4eLYpe6m6CGECfOuJ1uihxDc9SX3rNFDCIUPuols0UMI1mOq
o2eihxCG96p67ogeWjAvw9F5AHpowW67OslI9NCChuZ5zzzQQwvynAbP90AP
LVjrndB7EnpoQW3ViV6j0EMLqo9md7VHDy24dlYR4Y0eWqDM1S4eix5aMH/F
8PzR6KEFN4THbg1EDy0YFp3GWKCHNvwzviZDDz20YejZJQ//76ENKYbHm5Xo
oQ0Xsx3n6aOHNpQnTTbnoYc2uK7a9KKRoR7aUC+4XVXMZdLmoQ1v1K9WPuHy
1DYPbYgY2P/GbYZ6aMNo560XLjHUQxtepa6/ksXlhDYPbUjtU2t7ksvH2jy0
oW+2B5xgqIcOeGx+XHCQoR46EDWUzdrPUA8dGN8jJ0GTm9o8dOCoddyGQ1wW
tXnowIWSpk+a3O6hA12Gfxyzj6EeOrC1z5WsPVwe3+ahA3OO//3nYS57t3no
wLP1oY3pDPXQgVRZxzFnGOqhA2HJlR8189/T5qEDByQ2A45wOavNQxdSu+i2
anK7hy6ERUc90My33UMXXP/zCUrmcmWbhy7IV9Vu3cZlfpuHLizl1aZqXm/3
0IV+x3qM3o8euuDt49yQjh66MPeiIu8QeuhCs3JbThJ66ELH3rMK9qKHLoiT
OhbuRQ9dUA13OhCHHrrQ49pbdiN66IFJ6/VTG9FDDyKN102PRQ89MBvz/ls0
l7+3eehBRubi4xvQQw++dHBK3YIeepAZ1U30F3rowZzupU+i0UMP1qfFFEej
hx4MDvVdE40eelAxpylkLXroQe78g6pI9ODmZ2e/JAI99KE+/od1JHrowxun
fcsi0UMfTr56Omk9eujDiXdNWmvRQx/0Dj0kEeihD7v89jEr0UMf7hmJAiPR
Qx/cdaZcjkQPfZg8xmn1SvTQh7reD4rC0UMffJU3dZehhz7EXtzWbyl66MPQ
rwN+haGHAVy63vN4OHoYgKeXzGwpehhA8bIRDxejhwE0eRbJl6CHAdwO1y8M
RQ8D8P4w5P5y9DCAgtPa/4ShhwE4BtfkLUYPA5g+Q3R3AXoYgHOfiZmB6GEA
neurDgShhwHUN3ZtDUIPERjySmYuRA8RxHw+lz0PPUSgqp/qPR89RPDs1qrV
89BDBDlHbuosRA8RbHZqXb0APUQw8FP9+AD0EMEpuxWyOeghgmL9qWfmoocI
jkzZ9mMueoigqDTWyg89RJAp+M/aFz1EYKEbkeuNHoYQtT/f0xs9DOFiL/tq
L/QwhAsWvlaz0MMQVkumFQWihyHwp0+2CkMPQyg9escrCj0MwXtNPBuEHoZQ
b3Ek1As9DKH7q4L909HDEKa51o93Qw9DmJVY3ccVPQzBpGPof67oYQTzjn8P
mIYeRvB37XvedPQwguhNM53c0cMI+p1+n+uKHkag7b9kzUT0MIIlX+vNJ6CH
EVQemuUyAT2M4OWWwdec0IMbb0blOCf0MILLa3e6OqCHEbyxbPEfjx5GkNZS
XTYePYxg/cNf/2iyV0feDBMdMbi8WThzHJcDGo/cnWIshug5wxaO5XLwf+NG
JJiJQZnRM8OeyxFHvmTc7y6G6b2FuZocszK+g8FAMQyw6bNJc3z8ZKu48cPF
kDBrz17N+Lt7Ff6MGSMGX5tYtSOXjzARi/ImiuGp5983Ne936nnHtzwPMeTf
fjlHc/6lk7kuZLYYHFaumjaGy3nr516PCBJDQBphNPm+p/6gS2FiWNAhdqsm
Fw7OPNS0VgzDzCouaObzTm+KdMgWMWgZXT6uGe9LSeO64J1i2DJyma0mN17Y
3ZB5UAw+Iz8v1pzPxtv6V54Qw+HUVFvN+QZz3z3tfZ4b7/29k5rjTWxj7ANy
xPCmS+JeTbaQ985OvSOG0ddFozTH9/7yX4/3BWLY4PLdTDOeVe6SZIs3Yhhr
3pytOd52t1zX67MYHu91H6y53nFLLobvqReD7veY05rsOm5meWGrGP446rTb
CT0kELZuwEAH9JDA3TMP23zbPSSwbl/4n47oIYH611dmO6CHBJ4cnZDuiB4S
+LM2Y489ekggKORFix16SCCa2SiwRw8J1F3yeWyPHhIo63+uxB49JND6aEm5
A3pIwKZb1Z8T0UMCpYlnkpzQQwJDL9j+HI8eEjghmZXnhB4SmHjhQNZk9JCA
pFle64oeEvCufjDACz2493POr56LHhJQRUyyDkAPCWQ7b/CcgR4S+Jz2eJEb
ekjgmdXRke7oIYHQsnchrughgTuXKp0noocxNHhtOTsBPYyho75C5IIexpCb
Wc5OQg9jsM6vOzgVPYwhedjzGlf0MIao2V3jp6KHMYwoDHg4DT2M4f6L1+F+
6GEMy20ezJ2NHsagntOlyB89jGGLj2qNH3oYg53jXG8P9DCGAf+ud3JFD2MY
/6Ak2QU9jIF5GPRqGnoYw9iUqpsz0MMYrmfXbPdDD2N4G33B0Rc9jMFkxCmZ
J3oYw9OhYxd4o4cxTN/7YowPehjDE1/hJi/0MIZxr4s2zEEPbr4XhyYuQA9j
mByetjcYPaTwfLtO6XL0kIKuljpxDXpI4XvJloFr0EMK5ydN/roVPaQwkh+w
Ohk9pLAuYb97PHpI4fbLoDvx6CEFM4uWrXvQQwohVlK3ZPSQguuPI1PC0UMK
c0SRKxejhxSSTnV9FIQeUjAM6XIiCD2kEGr+ojkcPaRQ/HVEz1j0kMIpo4Ld
ceghBYVOycMd6CGFDRKvq1vRQwrGxGNOJHpIIX+AdlQYenDzWZTScQV6SOFE
5VLf5eghBdMro0vWoYcU9Jv2MbvQQwp31jk2ZaKHDFIgMCUDPWRweet0n63o
IYP5HZPCNqGHDKx1nnXegx4ymJowfnQKeshAduB0QwZ6yKBggW+o5vnoaJuH
DHweFJ69hh4yyD8R++UyesggneeSdBk9ZDDC0Dg/Bz1kIEq3Ut9EDxmEzTl1
KR89ZOA37GZtNnpw43cWTc1BDxl03eTt9BY9ZNC/ZlLPt+ghg5K5NyY8Rg8Z
WPo3LXiAHjK4+lkZ8R49ZPC0AQR8HvWQwT8bWt0NedRDBo5h6/ia59N2DxkM
9LxANPsp7R4yEKanLDPjUQ85LLMLJwIe9ZBD7NgOlbXoIYc13eRzqtBDDm9k
+vM079/uIQfnATGzVDzqIQfLjYX5mufxdg85VMT0N/ThUQ859J9268NwHvWQ
Q+aerb6DeNRDDk4Wkds0+0ntHnLYZjE3bTWPeshh5/SQPM1+QLsHd7z7ZbFm
vHYPOWiNDYnWXG+7hxzc7FJuafYb2j3kEF9iPHYCj3rIwWOm/421POohh6CB
AyWXeNRDDhu62kVk8qiHHD5NMZrzjEc9uOvfKrNuQA853GgIcCtFDzks7HIm
/At6yOHymHyfKvTgPl9tRYeL6GECmTBgSDZ6mMDNXUcFcpZ6mEB0Yfk0wlIP
E/gwe4LxepZ6mMDiJrfErSz1MAGPB0UdAlnqYQI1X9x/aPaP2z1MIC/Ee8Nd
9DAB9u36uL3oYQJHAy+MK0EPE7g+euv6x+hhAv+lQ6cs9DCBXQ9nFN1ADxPw
HxE94zN6mIDq6czlHVnqYQJwy87Ok6UeJqA8te+OZr7tHiaw18pAvIylHiZQ
2u1ajGZ/ut3DBKQeqt7mLPUwgZieD6w1+93tHiZgcP9ehj5LPUxA27ghtwo9
TGBnZOCRr+hhAp+KOy27iR6mkFl+MHUDepjCLcuWbpr9pXYPUwhznn9Ws9/a
7mEKo2z/tC3F+jCFZ4vCH3VCD1OoXhUrd0MPU1hS2XdYInpw4w9wW3qepR6m
sPhIfpHm+5J2D1MwV05ZtJqlHqawMOCxzzqWepiCjWXnnttY6mEKo+0X9TnI
Ug9TsJiWIItkqYcpOGWZe+qhhynw9q9Rs+hhCttI2AI99DCFa5t3DRWihynE
1ilU1VgfpjByd4nXEPQwhduFUz6tRg9T6LjdYKwzenDzKR1l1JWlHqagOqMu
1Xi3e5hCr5KUlCKWeijARtwjoYWlHgoIvDYtdz/WhwIu3g1OOI31oYAH1eNO
bMH6UECpbuIFGXooYPcb0aE87FcK7nlo4scD2K8UcDZmYOg6rA8FNHxp0VmO
9aEAi8XnTbdjfSjgY/OnFSVYHwr4N0+8xQY9FFB24saYPeihgFnzpu+OQw8F
6Hj31fFADwX4OGkH/sR+pYDFex0iDNBDAfyuy+MT0UMBndfWD7blUw8FVFy/
vu06n3oooM/VMyfj+NSDm18HlwBLPvVQgGPurrOf0UMBo3dsNnuIHgqI6jyp
h4BPPZRQNVj67iyfeijBQZRR5c+nHkrY+f5RiOb7yHYPJZSkhFiH86mHEoYH
dclazaceSig/e7f4AJ96KCHloL3iCZ96KOFZfL9jjwTUQwnSzczyvwXUQwkf
qn9s/sKnHkr4/NdIXgWfeihh3C/jqSv41EMJOUvWDjzNpx5KcI4z2jFLQD2U
EDy+U1yNgHooYWKoAS9OQD2UEOtZsXw0n3pw4589V74XPZTQvyQncTv2KyUw
yc3DyrE+lHDM0zfMEj2U0DQ5rcci9OCud9oBUXc+9VBC0lCdnj341EMJ7+Wb
7vqghwry3l0bdQk9VPBqm5mJgYB6qODo9tfDitFDBTEXrlTsRQ8VhKS6P9JB
DxUENn7w7I39SgUHRp5UlWB9qODrnia4iPWhAmVQmMFrrA8ViJNbjvXCfqWC
Ncebrw7GfqWCsuQhrbpYHypwGzBaKsf6UEHRpThzF6wPFegmEO9rWB8qMFp7
MbMJ+5UK3pn1tstDDxW0zD4RspFPPVRwsHF2qzvWhwr++dU0VFdAPVQQnyhz
GyakHio472Zp/U5IPVQwqrpg7TQh9VBB7RXHuh3ooQJ/fjfvh9iv1HDP6tuE
D9iv1KBs8Dyii/WhhrA6O+st2K/UcPpV5BYB9is1TN555sppXF+pwe7z+shs
7Fdq+FsZ4FqJHmpwE041D8D7hxpOxkVl9sP7hxpSHph0jEcPNRD7zH7l6KEG
wYDHp3XQQw3fFyxZPBfv52rQnXnA1Abv52rodffJ9c64vlJDludK0hf7FXd9
Aa/TR+H6Sg2dh/x3biuur9RQruoVqYX1oYabV802+WN9qCG4b2LySawPNazY
VPxdzH3+0OahhtFXhsEqLju0eajhjVmy5UIh9VBDD/M+iV2F1MMM/EYFfHss
oB5mEJU3RB2O9WEGq8edDdbWoh5mUPdp3ttALephBlbeS2yyuPES2zzM4GaV
gWcpd/7eNg8zmOZSI78goB5mcGCw8L0P9iszSOmiHKKpv3YPMxh7fb5vX+xX
ZsDftWDcFOxXZrA2OabHRAH1MIP35yaMPI/9ygwml83Q1fw/R1WbhxkE7FNl
K7jXv7V5mMGMnC/1+7E+zODUx/wFG/D+YQb3mnfoDcF+ZQbOE123a9a//wNj
x8lh
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-1.0621022205891486`, 7.187897779410852}, {-0.5, 5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.810737579668878*^9, 3.810737617141231*^9, {3.81073771200395*^9, 
   3.810737749638423*^9}, 3.810737822438634*^9, 3.8107869686222754`*^9, {
   3.810787178185123*^9, 3.810787206663575*^9}, {3.810787268593895*^9, 
   3.810787274630879*^9}, 3.810787310558387*^9, 3.811514422312181*^9, 
   3.8115144690660048`*^9, {3.8115189258145437`*^9, 3.8115189259539213`*^9}, {
   3.811518974340164*^9, 3.811518982915454*^9}, {3.8115243052362633`*^9, 
   3.811524322563871*^9}, 3.811524358997212*^9, {3.811524391268684*^9, 
   3.811524420600075*^9}, {3.8115247483558807`*^9, 3.811524802481557*^9}, 
   3.8115249427550364`*^9, 3.811525036407385*^9, 3.811525178073024*^9, 
   3.811525233150872*^9, {3.811525530596843*^9, 3.811525559637821*^9}, 
   3.811525830287315*^9, 3.811582815702244*^9, 3.811582940476378*^9, 
   3.81158304474916*^9, 3.811586628843245*^9, 3.811586768128537*^9},
 CellLabel->
  "Out[802]//TableForm=",ExpressionUUID->"24382366-c551-4810-b65e-\
18b6c8542b9a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Finite", " ", "Size", " ", "Scaling"}], " ", "-", " ", "BEGIN"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"whichFiles", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Pick", "[", 
         RowBox[{"files", ",", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"files", ",", "\"\<*_J=1.0_m=0.0*\>\""}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Pick", "[", 
         RowBox[{"files", ",", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"files", ",", "\"\<*_J=1.0_m=1.0*\>\""}], "]"}]}], "]"}]}],
        "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filename", "=", "matchingFile"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"{", 
         RowBox[{"momentum", ",", "energy", ",", "weight"}], "}"}], "=", 
        RowBox[{"ReadData", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"z", ",", 
         RowBox[{"weight", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ";"}], 
      "\[IndentingNewLine]", ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"matchingFile", ",", "whichFiles"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Finite", " ", "Size", " ", "Scaling"}], " ", "-", " ", "END"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810843012699081*^9, 3.810843057240631*^9}, {
   3.810843134928989*^9, 3.810843145902152*^9}, {3.810843261416233*^9, 
   3.8108432618681593`*^9}, 3.810845174692906*^9, 3.8108452392902813`*^9, {
   3.8108452996539173`*^9, 3.8108453289196157`*^9}, {3.810877107793363*^9, 
   3.810877122830359*^9}, {3.810877394666518*^9, 3.8108774869090023`*^9}, {
   3.810877521151349*^9, 3.810877551922575*^9}, {3.811610356412396*^9, 
   3.8116103768494453`*^9}},ExpressionUUID->"40ae93ce-925e-4d83-8046-\
2e3fbd0e0ed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "it"}], " ", "+", "4"}], ")"}]}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", "it", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "it"}], " ", "+", "4"}], ")"}]}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"6", "+", "it"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Beta] = 0\>\"", ",", "16"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Beta] = 1\>\"", ",", "16"}], "]"}]}], "}"}], "]"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.016", "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1/N\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<k = 0\>\"", ",", " ", "18"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8108433054965887`*^9, 3.810843535941441*^9}, {
  3.810843575303762*^9, 3.810843587887917*^9}, {3.810843668751523*^9, 
  3.81084387970683*^9}, {3.8108439132568483`*^9, 3.810844080511478*^9}, {
  3.810844186351078*^9, 3.81084429593294*^9}, {3.8108775968407087`*^9, 
  3.810877619061245*^9}, {3.81087935274958*^9, 3.8108793576499968`*^9}, {
  3.81087942676156*^9, 3.810879479213715*^9}, {3.8115179747578793`*^9, 
  3.811517977077791*^9}},ExpressionUUID->"3c9acdfb-a9df-4bbe-9781-\
91bea8a9aa1d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.016]], 
         PointBox[{{0.16666666666666666`, 0.13515092789117947`}, {0.125, 
          0.1638176973713557}, {0.1, 0.18626433061875372`}, {
          0.08333333333333333, 0.20023197192459138`}, {0.07142857142857142, 
          0.20805544157995645`}, {0.0625, 0.21255741741658069`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.016]], 
         PointBox[{{0.16666666666666666`, 0.13672183115440933`}, {0.125, 
          0.0661816712146462}, {0.1, 0.04865348267414041}, {
          0.08333333333333333, 0.04078812890874241}, {0.07142857142857142, 
          0.03510149128226873}, {0.0625, 
          0.03071718428399148}}]}, {}}}, {}, {}, {}, {}}, {{}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.4}, {0, 0.3}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"z\"", TraditionalForm], None}, {
        FormBox["\"1/N\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Directive[
       GrayLevel[0], 16], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"k = 0\"", 18, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 0.4}, {0, 0.3}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"\[Beta] = 0\"", 16, StripOnInput -> False], 
       StyleBox["\"\[Beta] = 1\"", 16, StripOnInput -> False]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5760000000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5760000000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], 16], FontFamily -> "Arial"}, Background -> Automatic,
          StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.016`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.016`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8108776132852*^9, 3.810877619410508*^9}, {
  3.8108793536884527`*^9, 3.81087935808403*^9}, {3.810879447758932*^9, 
  3.810879454772129*^9}},
 CellLabel->
  "Out[220]=",ExpressionUUID->"157e06a6-180b-498c-869c-f8ead9dc4508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"line", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "it", "]"}], "]"}], ",", 
        RowBox[{"z", "[", 
         RowBox[{"[", 
          RowBox[{"8", "+", "it"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"it", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.810879362811426*^9, 3.810879373014073*^9}, {
  3.8108794046905117`*^9, 3.8108794105484743`*^9}, {3.810879515784029*^9, 
  3.8108795172394238`*^9}, {3.810879558900799*^9, 3.8108795702576447`*^9}, {
  3.8108796692666693`*^9, 3.8108796965610237`*^9}, {3.810879752536487*^9, 
  3.8108797557561197`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"dac4164b-6dfa-407c-b3f0-767fa3d57c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "0.00129330166018597442638942990998578709`14.234618416574595"}], "+", 
  RowBox[{
  "0.53376827874673802471237353266305205723`15.471541774619936", " ", "x"}], 
  "-", 
  RowBox[{
  "0.34334905115977347508899299889456227731`14.471823423743805", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.810879411311194*^9, {3.810879560414872*^9, 3.810879570696697*^9}, 
   3.810879697584867*^9, 3.8108797666015053`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"0c02e1d5-a04e-47b2-9788-f0bac58c63d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"line", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.4"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.810879485223675*^9, 3.810879485586508*^9}, {
  3.810879704293816*^9, 3.8108797145699263`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"a7db345d-2e93-4b45-905f-e5c050b881c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtin041AcAx6+Vp2c3aemKwi2vxRLXiSbnGxEmlYtNqVhc02EWC22J83bV
lqLnsCxdmiLKnbc75+13Rc7Lyf1+PNOStyd5i1VoPTGtPc++z/N5Pn98vsbH
ori8j2g0mucH/rNXaa7Ry6EQ0P6fmU+z4y1mGOzDE+7K6FvBptOzf2fGY+iF
x7lBw6P4TTOr5WdyHrdErXIh9xS6eZX8ppIsxNDWtd3RFsB6i+8z2e1caBxY
jKxdQryx0k1MMb8OWcpo8omZi3C5TufaXS3Afsuna+ZXZWHnLuZc1nAh2i38
puN5IoztMTXONyjGdt33KU4FuXj9jZeuvVEpij3inveL82CXuYShCCqDlq98
udXjfEzxIiN526TghWx/rj0hBqOau8atohw3Zb0JU4cLELBa0JzrW4kF5RXa
4ORN+LxBL7u7ClNXPcihw4U4+txjxi1OBsPLtgr/8VtwO6/ilurWID026cs5
fhGeSB8zDmUpkK6clfMeFSNjlD2QsLUOzmHp3wr2luB1AVN7rLoene5vc7sk
pYgO57qoAhtBT1efsbK+h5CYxCOJZwgMpA5ozeeXYWTmWjuHo4Rybm1j8I8S
zL0b5Djo3MfHRZK4EZYU/W4RQwc095GwPLQi+4kUrDH27bzLD9AsLw04nlQO
Xd0NJ5nBTXBe0cOIZVWg46xfRJNxM6JezSx82lMBRvTd8MKZZkRqs6fzUivx
sMH1olT5EMfsjaosbKrgu3fD4KCgBWGryF+vdVSBH2ri4M1VYYOL9SvxqWoE
1kc09jJaUT0v6FSukkEWNXMik2rFn/EDvu7FMtwoytdPK2iDbaNo06y3HCFm
WW/zQtrR+ZNqnDksR4XFnb4puw4cNC+3NE+pQV84/fWxtx0wKAud69VTIIp+
23KpXI1NLfoiRpECl23CeP3CTqRPJ5u0udbiQs5Jss/rEZbYaHR+0dSC/uCR
8Sc6XZiNbpXF8euwbDQ1nHOqC8IDR650LNaBv7nfR9DThamm0fEMYT30qrzK
hzkadPvb7dBb3wDboINl/tc1WOYal+Z8owGL24Sc/kUNmoL8F1lmjVi9v8Un
9TiJkpWOGy9IGiH6ueTNjhYS3C2Tk3/pE0g6mkJNqkg8uXrzmc56AnxWoCSv
jcQhokZtbUDA+Q86f15Nwsn+/ffhRgTGTPhPFd0kMtTT8yPGBBwVm5q+GCZx
/E6waa8Vgf6xwkyHf0hMGF6SS5wIqGoTvhtdJOFatFin5hAoz/D3zqFRuPSi
XTrhTEBop6X191IKK8SJEWYuBGyTQuOr6RRyy70tctwJJOuZBm3TpzCcFlty
ei+BiIl3O0bWURCLlVWifQS+qif1RQYU/H/gS6T7CXwekkzOMikU7O6JHecS
6L435F5pTkGVvdIz4GsCDYIak9CNFBxPe/bEBBAo9st8v9ryw58xwL10kMDZ
dztrYjZTCIg1/+xhIIEwtX626ZYP3akncugwAa74ZTRlQ2Gkdrh04QgBpxjV
vhQWBcNZnz69IAIbd4s3s9kU9oysXdgaTOBf1Cs2Gg==
       "]]},
     Annotation[#, "Charting`Private`Tag$81322#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.299999993877551}, {0, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810879482426626*^9, 3.8108794861890507`*^9}, {
   3.810879562259225*^9, 3.810879572602316*^9}, {3.8108796999403276`*^9, 
   3.810879716385621*^9}, 3.810879773808611*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"0960ae81-4d72-4b44-813a-54add481d0da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "[", 
  RowBox[{"[", 
   RowBox[{"9", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.810879577157847*^9, 3.810879582319284*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"6b49bb85-b431-453d-bd18-a7a71f12f79b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.04865348267414040806`18.687113933032464", ",", 
   "0.0407881289087424076`18.610533783197788", ",", 
   "0.03510149128226872778`18.54532556780207", ",", 
   "0.03071718428399148118`18.487381403222425"}], "}"}]], "Output",
 CellChangeTimes->{{3.8108795801090717`*^9, 3.810879582789331*^9}},
 CellLabel->
  "Out[228]=",ExpressionUUID->"168c093c-6f56-4299-b1f7-d8afb2d61bf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "8"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.810879616700219*^9, 3.810879640774032*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"56d240a4-8fc9-47cb-ad89-a445fe6bd7b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "10"], ",", 
   FractionBox["1", "12"], ",", 
   FractionBox["1", "14"], ",", 
   FractionBox["1", "16"]}], "}"}]], "Output",
 CellChangeTimes->{3.810879642033024*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"36ba14dd-bea7-4444-bf29-17fcb53e27e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Factorial", "[", "18", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Factorial", "[", "9", "]"}], "*", 
    RowBox[{"Factorial", "[", "9", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.810880383509282*^9, 3.8108804893260727`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"4ef820ff-1bd8-4c8b-aa47-d16952524b17"],

Cell[BoxData["48620"], "Output",
 CellChangeTimes->{{3.810880452037512*^9, 3.81088048997442*^9}},
 CellLabel->
  "Out[241]=",ExpressionUUID->"32d76863-9b99-4940-9216-b6ce9ab5f6dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"scbaDirs", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.811517074535521*^9, 3.8115170837714033`*^9}, {
  3.811517190726296*^9, 3.811517316342366*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a4f367db-9c07-4199-a584-76e7477cdf17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<spec_*B.txt\>\"", ",", "scbaDirs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
     "files"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8115173779556704`*^9, 3.8115173999365788`*^9}, {
   3.811517482073748*^9, 3.8115175344439793`*^9}, {3.81152308745578*^9, 
   3.811523087845584*^9}, {3.8115813149167967`*^9, 3.811581316053978*^9}, {
   3.8115813943128653`*^9, 3.811581394691502*^9}, 3.8115870327540617`*^9, {
   3.811587361934606*^9, 3.8115873625320177`*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"ef12ce80-2573-4e66-8e96-aee19ff9df88"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_0B.txt\"\>"},
    {"2", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_hpB.txt\"\>"},\

    {"3", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_pB.txt\"\>"},
    {"4", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_0B.txt\"\>"},
    {"5", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_hpB.txt\"\>"},\

    {"6", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_pB.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.811517502954227*^9, 3.811517535270637*^9}, 
   3.81151931889071*^9, 3.811523088374425*^9, 3.8115812197355022`*^9, 
   3.81158131645927*^9, 3.811581395081089*^9, 3.811584902210022*^9, 
   3.811587033091401*^9, {3.81158735461864*^9, 3.811587362899259*^9}},
 CellLabel->
  "Out[828]//TableForm=",ExpressionUUID->"0367cdcb-828a-47b0-a678-\
b28492518823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"specA", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"f", ",", "\"\<Table\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "files"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811517592475273*^9, 3.81151762104492*^9}, {
  3.8115177023178596`*^9, 3.811517815954619*^9}},
 CellLabel->
  "In[829]:=",ExpressionUUID->"514c9ef8-85cd-4cf6-8794-d382b6cf7d95"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.48125`"}], ",", "0.0025043215275468013`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.4625`"}], ",", "0.0025318288108728366`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.44375`"}], ",", "0.002559796827311633`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.425`"}], ",", "0.002638929550020799`"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.40625`"}], ",", "0.0026689224772616614`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.3875`"}], ",", "0.0027678123159690705`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.36875`"}], ",", "0.002800454194110284`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.35`"}], ",", "0.002833566040053764`"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.33125`"}], ",", "0.002867875838345834`"}], 
              "}"}], ",", 
             TemplateBox[{"702"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"9.85`", ",", "0.00033263243259051535`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.86875`", ",", "0.00033132264290695`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.8875`", ",", "0.00033002065222284896`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.90625`", ",", "0.000328726398076502`"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"9.925`", ",", "0.000327439818637398`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.94375`", ",", "0.0003261608526985196`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.9625`", ",", "0.0003248894396687024`"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"9.98125`", ",", "0.0003236255195651472`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10.`", ",", "0.0003223690330059939`"}], "}"}]}], "}"}],
            ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29684707051748738101 === $SessionID, 
   Out[829], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.81151777973911*^9, 3.811517821698127*^9, 3.811519320634116*^9, 
   3.8115230912389593`*^9, 3.811581222035466*^9, 3.811581322336815*^9, 
   3.811581397281972*^9, 3.811584904597309*^9, 3.8115870361626863`*^9, {
   3.8115873575067472`*^9, 3.811587365363015*^9}},
 CellLabel->
  "Out[829]=",ExpressionUUID->"ade531fd-8ea6-4353-a52d-9cc6f0b92f47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pltSCBA", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"specA", "[", 
        RowBox[{"[", "ik", "]"}], "]"}], "+", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"8", 
            RowBox[{"(", 
             RowBox[{"ik", "-", "1"}], ")"}]}]}], "}"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{"specA", "[", 
           RowBox[{"[", "ik", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ik", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "40"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "0.75", "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Pi", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", "Pi", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<SCBA: B, J = 0.4t\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8115178269097013`*^9, 3.8115178427847433`*^9}, {
   3.811517885323152*^9, 3.81151796139762*^9}, 3.811517998691931*^9, {
   3.811518049488576*^9, 3.81151808596148*^9}, {3.811518184484426*^9, 
   3.811518290772787*^9}, {3.8115183831148157`*^9, 3.8115184329185753`*^9}, {
   3.811518535470648*^9, 3.8115185439158792`*^9}, {3.811519322819046*^9, 
   3.8115193244159737`*^9}, {3.8115194955509367`*^9, 3.811519495871478*^9}, {
   3.811521676966671*^9, 3.81152171453854*^9}, {3.8115231054838953`*^9, 
   3.811523493995249*^9}, 3.81152378166276*^9, {3.811523820654086*^9, 
   3.8115238803435297`*^9}, {3.8115239486300383`*^9, 
   3.8115241021892014`*^9}, {3.811524167399619*^9, 3.811524234796139*^9}, {
   3.811524348169194*^9, 3.8115243789040318`*^9}, {3.811525306017968*^9, 
   3.8115253204575357`*^9}, {3.8115254047173367`*^9, 3.811525413603704*^9}, {
   3.8115254706014442`*^9, 3.811525517306014*^9}, {3.81152557778585*^9, 
   3.8115255905065737`*^9}, {3.811525754732668*^9, 3.811525809413684*^9}, {
   3.811581211057076*^9, 3.811581232786867*^9}, {3.8115813332004757`*^9, 
   3.8115813399709387`*^9}, {3.8115814007245693`*^9, 3.811581434474861*^9}, {
   3.811581643787278*^9, 3.811581647563939*^9}, {3.811581879744314*^9, 
   3.811581882599401*^9}, {3.8115820060427856`*^9, 3.8115820166219883`*^9}, {
   3.811582048100915*^9, 3.811582048623547*^9}, {3.8115821524925623`*^9, 
   3.81158215272195*^9}, {3.8115826953205853`*^9, 3.811582695458333*^9}, {
   3.811584949470475*^9, 3.811584949685066*^9}, {3.811585223488202*^9, 
   3.8115852682040453`*^9}, {3.811585332401003*^9, 3.811585333626493*^9}, {
   3.811585390209573*^9, 3.8115854028845053`*^9}, {3.811585445250011*^9, 
   3.811585473605734*^9}, {3.8115857495228577`*^9, 3.8115857663256083`*^9}, {
   3.811586209395442*^9, 3.8115862208036337`*^9}, {3.811586303958202*^9, 
   3.811586318668688*^9}, 3.811586863797008*^9, {3.811587039064695*^9, 
   3.811587059742651*^9}, {3.8115873708798027`*^9, 3.811587373922447*^9}, {
   3.811587422645377*^9, 3.811587423210788*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"75fc45d1-7b8d-4e47-be47-961b966ba28e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1: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
/H+xhE5X
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1:eJw9mnk8VPsbx8cMM/bsjHUWIklEQnSeytJCKaVIe2nfuEKrS2nTrqJVKkk7
Kkqd0yql0qqJQraUsq+Fn1/3PN/5497XeZl5z+d85n2e71kSz1s1eSGXw+EU
9v3n//8/mtT3kqkw2uPkX4rlRODw/1emCiNJuP/KvG/7RUHfK16F6Swu/mzZ
tx3y96XCbByyc9i8vm3O/1+gwpjuH5sa0rf9lydUYQymvw9KQV6zMmNHn3FP
Q16BMiM8uWHUFeSlKjPrOImtWciLVmY+ftateY28QGUm6GPNQhnyHJSZybIJ
+8uQp6rMXNy6oroJedVKTK6yWWYX8hglJn9ikpE8l+UlKTGrddPHaXFZXpgS
I9yy5Ichl+X5KDHO2yact+CyvP5KzNuD4vYhXJbHUWK2jby33Q15MkXG/to9
pbHIy1Rk7uqtGhGAvHhFJkfxZOMc5IUoMjfUh25ZhTxQZJQXxQo2Ik+oyNzx
y+fvQl6zgOE6Tr2eiLwCAcPJfy0+j7xUAdOz3zMgC3nRAsby4MWCB8gLFDB5
Vd+kb5DnIGDWy7ja5chTFTAdt7dmNyCvms90pfRoyfGwPz4zNv7fXZo87I/P
rNypTEt42B+faRmcd96Rh/3xGW7Lo1ovHvbHZyYM28wNQh6Hz0yX2n1agTyZ
AuMTVQIxyMtUYH5sqzlwBHnxCkwi9/DVy8gLUWCiY1WPPEIeKDDlUTVrSpAn
VGDOJg4e24q8ZnnmB001qstjf/KM2lqrrAHy2J88s+7q5e2e8tifPNPtHrFu
njz2J8/oTd9+L1oe+5NnypRGBScjT1We2beUnnEfedU85nSwQ1UF8hgeIzg/
Qk1RAfvjMTptRt8HKWB/PCZ74sizUxWwPx6jeOzBtM0K2B+PKZYfaHFRAfvj
MZbjFYbLkCfjMm75PowSH/vr225IKHPjY39cRvB98LtQPvbHZQLC972+yMf+
uMxL+2itb3zsj8ukWD8utxRgf3JM4cijccsE2J8co509aEqmAPuTY+wutF7s
FWB/ckzJh55WP0XsT465Lbx1/rwi9ifHXNBTGiOvhP3JMeesKpYsUsL+OMyQ
Wt/M10rYH4fRPltcMVoZ++Mwze+M3txTxv44jKNPR+hoFeyPw5j8CCt/o4L9
cZiqkurZK1WxPw6zgmc3X19NBI5/++qlj3pYn3ylhv300j4j7ZSS1LGPXnr8
Wf+W8H4i+Lv7BT30+RnxRks0cH976GdLe2+Ha7I8hx5657rD109p4f5009ys
dWk/tDF/Nz0/P8Nzti7L8+mm/+ltCJPTx3zd9N6otcwnA8z3h54Znl/Uaoj5
/tDrXuc6zTHBfH9o3h1HyUAR5vtNP6K8BCukmO83LdxitXW0Jeb7TXuOk236
MBDzddE6jttkwfaYr4teGBwrNXfGfF30I4O8RScA83XRX413Pgsbj/k6aZvb
901vBWK+TjpR3ufrkBWYr5P2++Z41HEH5uugFzgXZRzLwnwdtGzL6LP3OGI2
XwfdFaXQm5QuZvO105MXnXh3eLg5m6+dvjQr3Ka00orN106bLBp5wt6vP5uv
nU5xj2+YvcSezddGp/HdAtS13dl8bfRB/sIBnits2HxtdPNJtxcru4aw+Vpp
7mSZXFqGK5uvlTa/ZD43NGEAm6+VXrm7rbnzgDmbr4VObD2/bXsV5muhZc52
Y434tmy+Flo0zm4jE27J5muh460djC68tmXzNdMeeQ5bSlsGsPmaadGh8PLv
iyzYfM100KFlikuE/dl8TXTNbPuX17dasfmaaK+lSTv221mx+ZpojaKak6rB
Fmy+RnrEiagv7V+s2HyNdMuDfW7uffz/8jXStoq6Bc/fStl8jbT/0wnKOo3m
bL4G+s8BXasNrpZsvgbaz8fc022RJZuvgW4tnfvBLbg/JP7l19NdPJ5XsJY5
y6unhx9wd07sksLiv5//Re8J39uz9h9zKPwb4Ce9Zud6/+xpFmD3N/9PuuPc
vBuX/SxYXh1t66M7bE8b8urolePWLKDGW7C8H3QaLN5heEPK8r7TjqoZMZNs
pCzvOy1qve88IAB5tXT9GPOzYGLB8mppsanug+W7Md83erP5w8Oly5FXQxtL
L8vUJiOvhn75oyrD7LqU5VXTlaXNGbc1kde3felc07FQ5FXRHuvyg86kSVhe
JW3vc2vks7cSlldJP3mreipYw5zlVdD7fn+oyDHD/a2gNyV3r3f7I2F5X+lf
zw65Gp5BXjkdEaXyokqGvHLa+Gpr42MPzFdG7wu4++bbXPx9y2ingTP3r2Rw
/77QB6w75wuEUkj++/7PNC9mw11KWwpz/n5fCZ1pY/P27jbc/2K69+Fy+wHJ
yPtEC0tiYyLTkPeR3qD+7lNxHvKK6MqoWytmX0XeBzros1dCdhHy3tMvX619
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
zD8pHP0+d74tmX/mYJ2nO+T/2/8DCOBfoA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1: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
0HSqmv+wDvK41MH2nH5oKFOH+B+0XxGh
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{-2, 4}, {-4, 40}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SCBA: B, J = 0.4t\"", TraditionalForm], 
     PlotRange -> {{-2, 4}, {-4, 40}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\[Pi]", 
       FractionBox["\[Pi]", "2"], "0", "\[Pi]", 
       FractionBox["\[Pi]", "2"], "0"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8115853960417137`*^9, 3.811585403302354*^9}, {
   3.811585449220873*^9, 3.811585474048873*^9}, 3.811585766994076*^9, 
   3.811586221627654*^9, {3.811586304921339*^9, 3.811586320404952*^9}, 
   3.811586864407593*^9, {3.811587039974629*^9, 3.8115870603267384`*^9}, {
   3.811587367978191*^9, 3.811587374250636*^9}, 3.811587423634571*^9},
 CellLabel->
  "Out[838]=",ExpressionUUID->"19ca7336-dee6-4ab8-a3c6-bb2884499d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pltSCBAvsED", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sliceA", "[", 
           RowBox[{"[", 
            RowBox[{"it", ",", "ik"}], "]"}], "]"}], "+", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"ik", "-", "1"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"sliceA", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "ik"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ik", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "5.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ED, L = 16, J = 0.4t\>\""}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", 
       RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"pltSCBAvsED", ",", "pltSCBA"}], "]"}], "//", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.811581449845387*^9, 3.811581471017989*^9}, {
  3.811581535015008*^9, 3.811581630435894*^9}, {3.8115817962831182`*^9, 
  3.811581859959257*^9}, {3.811581961652769*^9, 3.811581965312661*^9}, {
  3.811582027555839*^9, 3.811582033625993*^9}, {3.8115821393123417`*^9, 
  3.811582168809359*^9}, {3.81158249175467*^9, 3.81158251330171*^9}, {
  3.811582580870253*^9, 3.811582651184676*^9}, {3.811582687935507*^9, 
  3.811582688117284*^9}, {3.811584940298668*^9, 3.811584942386088*^9}, {
  3.811585293848329*^9, 3.811585329622467*^9}, {3.811586833246352*^9, 
  3.811586884956345*^9}, {3.811586958213578*^9, 3.8115869587043877`*^9}, {
  3.811587385005937*^9, 3.811587389014368*^9}},
 CellLabel->
  "In[839]:=",ExpressionUUID->"8bca75e9-0b29-475a-ad07-301ff2c5609c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1: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
zW7q1P8A5KLl3w==
           "]], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw11Hk01WkYwPG3y7UlKvvSUBGpSEoS9SqTRhmUbImS5arsS5GtiM6dZjJR
qYOmTWXJlkL0GEulbNm3LBf3Xtt1kzG2at5xzu895znP+Zznz+8571pX3yPu
NISQO5n/d4YwZ9j5Ox+W6UWvMaIhfCnTbr1XKx+O2ysomRHbW74/GZjFB4N2
n3NHiHW+GqRFxPCBfoIt7UwsdPtZd7wjH9RCV8ufIf5sqKhwQ5cP2LcwNIT4
RS/TNkWED1Z7q4xjiGXp/2pYwCTwOF6MBOLqwx0PTnlPghRX7HsqcWBS8ZoQ
pUmoo/8ikEW8tuduMrOGB8tPCkeUEDesD5e6d54HZk0+fjXEEWdP/FGgzoMr
eVOsDuJNBXtE3zdPQMPosS4ucee8SmzPpQlwuJbrNEccv2/ZD77OBJhWBvuJ
CSC8g8kKpfeOg55DmLIy8eCnymmFa+OwWLbgqU18Q+Gxr7bhOGhnPnE0Ican
4kb3cccg2e/Rog0x76mnu92tMeiYv2PrRZzCP9h/1nQMitJf+0cSmxtoHY+e
GoWwmSa7JOLZqOVtSX+NQiI+JJVJnP5u3OrZr6OwKWBPTgWxjWT9x7LFEeim
xezsJqbZ5RxoyhiBGsPXRdPEuWkJf7PtR8CG744lBRF2ZvsbLQiNgCqH36NF
LK599JVkIRcqf9SmmhGXBG/fpnaaC7besYnuxIwymWyDVVxQ3dLcECtI9eAA
CFa4PyauWurBAT2bKq93xAFLPTgwJdX5ZZRYdakHG7xP58ispFM92HBNsYGn
T6d6sGHjQHWyC53qMQyFrg66TDrVYxh8zaHjJZ3qMQwp9d15w3SqxxDk5MSz
ZIUQHlrqMQRTBb2J5kJUjyEIbLo9FS1E9RgEH3+GTokQ1WMQDO2ComaEqB6D
cHRbrbK+MNWDBWL8xQOhwlQPFuwOz99fLkz1YIHAgp/LchGqxwA8UGLwHEWo
HgOQ0OBmkSNC9RgA02g2S0SU6kHuXSdUGaJUj34QDEuJqROlevSDxs7I5F1i
VI9+OJbRNp9FvFmMZ3k3sg+sc3PsNZcjzLyT+3NlVy/EXeYGZRGzNQN3j+v3
giTjoJahOML7inboyiR+Bp6tsm8TcZrZ7IY9kz0QahHuELIC4fm2EmXPQz0w
KeGkpiGBsK1HxOqEJ90Ql5+4g02c/89ekWKBbvB8LqdeKImwxBXa9wGXLhiM
Tq++uRLhM9LVX8VKO0G631SHuQrhtw/jR/TkO+Fq39zHpNUIr9Mz73MK6gB2
pZNnkRTCkRXirVca2+GhRJ7JrDTCXdYNH55vboe8hDgNe1mEDQb+LG+/2gac
W6rXe+QQTvKzeYmGW8Ek1KqMqYAw/4ds1kaTVpiIR9MMJYQPX++8fyS1BYK9
grMj1yD89KeU2xfnmoH1wIPbooKw4HPn3x8da4ab8veZIesQPmm8NqYurwna
3m9k+akjXFo7eGFmRRNMVahbtWgiLO+U7qNy5hNcjH6xpXAzwkFjDLeDbxvB
q9GStkUX4cawTY7+6xphwPOetpM++f+ke+5t/1YPdZcD8DkjhFfqnfotrrAO
FgpmcOJ+hGut2SEd3rWgfvpFuPxhhGP9zrpqbfgINrMfbhy3RdjoOt8ivLcG
7pREqfS5IjydHbyr/tZ7mHbWOuAQgHBW7byaquU7yEihKdZfQdhtLGplgPBb
CCgdNXydhrCyGH2xEqogUzD1hSsg3KLJ5MhcqIS1PnsjrMcQvmYm2ey5tQJM
n1o5Omsuw6YeSW+KueUQnOsmmh29DM+K6tnI7QMo3ZYQIC1Mwwwz402v80th
J+vV0eIBGu6PNaO5rC8Blsnlom8egtiqwrqTlvQK5HIbnSTChHH5j+O56YKF
kJ8zl231RQJvNfaINw/Oh84mznnPTEX8xlReXO9+LqClp4b/A+4d8XM=
           "]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw92Xc8V//3AHB7y3zbldKnQTtaqnOatCQpJVnZDaQiI2SVZGXvTUilkpYr
DaWPEopQkiirSJnh59vnvH9/vR/3cR+ve8+9z/frvM553Rnm9nqWXBwcHKu5
OTj+95vL/7XNeLyXue59gduiYAN45xmo2L7tZRTiSi+X9G6A/buemzrl9zI1
ARqGfuobYVH/yiQPn16mOMNpoOzMRuCLvtIYYNjLcMRVHj1XuhE+rFaQD18y
OX7sm+prgU1w62PgvgSBXub5jwCR23qbQIZ3cM5O5gdzKzLCFJM2wdMd9Wlm
x34wDqdPfPfo2gROEXennlb8wdjOjxt1Xb0ZZjTFxQS++M7ckfDdvfniZnit
4i6V7Pydmd/XvrHrw2bwOHIo+OY/35nR6bp33JZuAbWb6wSf1/QwC58rzOW7
sAXej0z3bfLuYYTj/r0R17IFAjZwTvQu6mHMQj7KbFujBRqBn8/wfuxmKrqH
nv8TqwWtbx7/kg/qZqyX5/bBkBaEy2faL1zdzSRYpLrlHdAGNPPv3PCti+HX
Pqnk/lAbvudYWxpEdTEPH44aP1PZCgm92p+ObOpiCqR1C5KDtsK2laoHvX52
MiF1DmbThrbCkKfwu4iUTmaxZEb5AattkFXerXtFp5MZmRGnYVe3DfTFXr18
+KeD0VpsIWW7fTtwGVzbUp3bwfQk7OhyKNsO15NCH7Xv72AMPqeeSVyzA4zb
HdeM8nUwKh/8Hgrf2wEiC/fcEbv9jdnRWivUsHon3DulvnTW4W+M1cNVU+cy
O8HmIevqSolvzA1zv/myWjrk8ZXh33uYq6JaB5789fjKRGb6SVia74ITfz2+
MkvErIKnDOwC5b8e7cyQ/MdNg1t0yaOd2T5o6S8bqUse7YxSd73i2TZd8mhj
eKq7Fm9YuZs82piiDuNp7pd2k0cbE7Y5y31z227y+MK84OtbcRf04Mtfjy/M
np1XM/sT9MjjC1OXeiVeckyPPFqZg/WD5zVM95BHK8OMFYd6PNtDHq3Mvsax
LNHF+uTxmZEQ6L4mlKhPHp+Z+qNGqfGie8njMzMndUF2h/de8mhhdHMDtymP
7CWPFsbF/1jCsdP7yKOFuZuUf5hrcB95tDCOHzp1JN0NyOMT8+LdS9Va3v3k
8YmRNahXOhexnzw+Mf59F1sPzD0A84W+74o728xsmZBQSnx0AAJjr29+3PCR
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
/PtiB+PIQxIvyd8O+yodTR6SyDmg6fNNLZI8JNGAyVtT5htFHpKYZ5gkUFcc
RR6SuOHKo/BZR6PIQxJLpPdIafpEkYckVti1Pmu7EEkekrisM2g7pkaThyQe
Ln6xtyU/ljwkEbnv226cHk0eknjhGdfhVR3R5CGJCzZe2GnVHE8eklj4Jq+z
rS2aPCafd8+X4Ss9MeQhifcKfL4+upFCHpK47XVfoHtuBnlIoWZ/jSKHXhZ5
SKFWmpxRiPwV8pDCnbKN4ynzCshDCrOyjb9n3CkgDynkq093SUnOIw8pbNx5
43z33CzykMJrGp7eXD4Z5CGFPwfPu0d7ZJOHFF6OTBXTeplJHlJoq5j3buWC
NPKQQo+zwXXZdinkIYWzpy3d9GBGPHlIoVskj70lK5Y8pPBm0oFFfFfjyUMK
NRLeDIYZJJGH1ORkGoi0NUwhj8nra87rN1yUTB5SOLNMvrj7n3jykMJLM7Ei
+T7bQwp1Fh+yW/2a7SGFaxYsnWZ6JYY8pDCQtb1iiiLbQ2qy3zvHOhgbTx5S
2Of74Yd+SCp5SOED3tW3ns9MJQ9ptPtH0NeyLok8pFGSr7VKOSeBPKQxaiBX
b+e+BPKQxuRw4+LY+gTykMZ567Ku3zvGzlfSeGNXSv3mikTykEbfjv22v6ek
QNZfD2kUtTefx4Qlk4c0Vt49F9kyme/+85DGOpZh4R2zBPKQxm0zS/2M5ieS
hzS+2nLXN/1qInlIY6tX55U1dfHkIY0B3tmmmrax5DF5/S2FD846svOVNBqb
1O0pNUgmD2kUHzTLGTFMIg9pxFz18zpMHHlI49483ZMWO+PJQxqlXduWLnBL
Ig9pFHgTtaDZiZ2vpPGm7udmMaE08pBG00a+dwbaqeQhjTVO8yvsstge0nhQ
8c/XNVeSyIOFj24ErcqWiCcPFg4/mz+qP5Odr1jIGWFxuXksljxY2LtN2XZe
QSJ5sNDU4U7mSrNk8mBh4vND/BaHU8mDhU+hSvIUTwZ5sLD2dkhT89M08mBh
fmZv7TmbVPJg4Yq5u17MS04nDxbadUovXjGYQR4sjH1ha2B/KZU8WHiZI+CL
Xl4yebDwnLRqjElfCnmwsOGhzha3K6nkwcJ70a2vz7DSyIOFi4dYiVZHMsmD
hSzpPUcX2+aQBwtPbnFhXLyyyYOFjS1lp9K35pIHC/cnq01t1LhKHpPnG0YD
vHQLyGNyfL6mXdfxAvJg4e/S1qVnv+WRBws/HffIc63JJA8ZnFF6ovzYggzy
kEGltGDR4L1Z5CGDpa83Rw7/m00eMlhQ/qfNkzePPGSwdZG684zGXPKQQa9h
W9ngtVfIQwaf7Mube98imzxk8ICFogJzMJ08ZPBFWphJ/bk08pDBmazb9zdE
ZpGHzOT6aNtTncL2kMHMhc/yVdzSyEMGr+fkfqk5lkYeMqjxoNJ5dksGecig
/hTVYRX+XPKQQf9ZCrJZUjfIYzK+qXf71n+8Rh4ymBv0bVXvvnzykEHPrnnz
zezzyEMGo+1PqnXdzyEPGYx/EXSmsyKbPCbPr9W790sokzxk0C1pyQOdw+nk
IYOr15S8LzHLIA8ZvLF1bFpuZBp5yGJ5z9Yf8gYp5CGL875w8qpqJJKHLEZy
KUbGfE4mD1lcvcRqpl1SOnnI4qWADP0VS7PJQxal7m//eJ6P7SGLC2w8tKXj
c8hDFnclBVxezMohD1kMjS5RKpybTR6yGKe9+F1xfCZ5yOLW07zH1/qxPWTx
i3z5W/5TmeQhi7Fb5A838mSRhywazYlY39LP9pDFoSPzjB4uYc8PWdSOD6rz
DmCvH7IoLROsofYihTxkcUt/c/6JlBTykMUp5s0xY+eSyEMWDQP8N1l6sOsr
Wex29lQfiUojD1ksLdpvud8qlTxkkfW8p0pnSTJ5yKJm4cPSi4HsfCWLAc4y
x02c2Ou5HI5deBkQVp5JHnI4ZBTpoXAmnTzkUGk4c0+2YwZ5yGHemYm7EvvY
HnKosztaXTUgiTzkUDo/bcbO2bHkIYfBs04k3n4SRR5yKO5XtENjaiR5yGH0
cyGT+ruXyUMOlx19yL1mHrv/kEMvGZ4gLZNY8pBDR5VMfZ/hBPKQw1P3eZ23
urDzlRyqbvC3mN/NrnflkPnad8O/P5485FD23gJzu6xo8pDDBtuZIqa32PXV
ZDwHSgQ37Egij8nnnRCR+rI6nTzk8F5gyEz50EzykMNSLf9eRjudPCbvl1Me
r2uaQh5yuOufd3Jn9BPJQw7/6PYefzQjkTzkMEihbJ315RTykMcz6yPeeV9h
5yt5VBY6zLnFlu0hj8u6Z6sp7GH3H/L43ubJqmUpbA95NFW4dCGwMJ085HHL
rsx7UdkZ5CGP8j4rSr4rs/OVPFqmb3rYqnidPOTR9aVRicDXa+Qhj1c3Zydm
O2SThzzaTYglZs1jzw95nNeyLCpulL1+yGN965Ezv5ew85U8at3381b7/3wl
j0oqy/fEpWaThzwGDk98/fwqkzwm46kJvW09xl7P5fGdWbK+5Hx2vSuPTZLF
5bU5seQhjxVLhuLf32Wv5/J4WK32hs8e9vyQR44r1YWbI9j9hzw+Nm7oib3P
7j/kMYhVH7NkMj//5yGPsnweT8R72PWVAupfGNYJrE4lDwU8WLdMY1VoGnko
4CqdmbKbRdLIQwFFerfqdJinkocCuh0ztYGXieShgNEXnZ51zIkkDwUslXwh
+3x2OHkoYNodO733w6HkoYAlyvvqOrTZ80MBL5rxSLTlR5GHAq57OhJcvTCK
PBSwKjzswNxwdn8+ef2wfs1fypfJQwHzv10LfpQRQR4KuHtjQPbKnBjyUEBY
2S7DUx9LHgqY5JZUfgLZ9a4CNrZNX/m9lN0PKiBKKP8bXseurxQwpe5XQPIB
dr5SwO7h3W75ipnkoYAhIwWSSZBDHgrovOTeRWvnLPJQwBU1Maeu57P7QQUM
Mt77tnKyv/vPQxGf8XhoXtFk94OK+Lmr/EemZQx5KGLnVy61/TcjyEMR4xYq
az85GUoeiqhV4Zr6v/2J/zwmx6dYBQ+sCSEPRbyz2CBJYmsoeSjiwVdflytd
jSAPRazNfld5ujuMPBRx/W+d3cqqEeShiHPaOvFUC7sf/N/9foc4xgWThyK+
yr69mpflRx6KaOL22Kf1hTd5KCLjGW5QquFFHoroV5X5TFndmzwUJ9/nLOe0
m+fIQxFN3cuDl4b7k4ciFrnu2TJnGXu/RBEF73ZvqDjL3i9RRJ21gat3O7P7
QUW8ezc3ZH5fGuBfD0V8wrPKVackA7b99VDER6m9XH4ymeShiBNPhoyuDqST
hxJWlD/3Ug1lzw8l3KI/0GOskUQeStj9++7mpcXp5KGE895FGftO/h/+81BC
wx/5X3PWp0H4Xw8l/N51VO5PQTIk/PVQwvGlf/YLCyaRhxLaeWkWnD+VQB5K
KJOWsVNpRSx5KOGXoZHmVRxsDyWsNVhntngPe/9KCR+rrL56bju7H1TCWdMj
2j9+iyYPJQwL3xFXbh4G3/96KOHRZtvS/fKXYeivhxL2LS/smXIolDyUME9T
5bzFjFDymIyvYdoRZ5NL5KGEfh0mNwxn+cP/AQr1/ks=
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"ED, L = 16, J = 0.4t\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {-1, 10}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{Automatic, Automatic}]},
     {
      TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1: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
/H+xhE5X
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1:eJw9mnk8VPsbx8cMM/bsjHUWIklEQnSeytJCKaVIe2nfuEKrS2nTrqJVKkk7
Kkqd0yql0qqJQraUsq+Fn1/3PN/5497XeZl5z+d85n2e71kSz1s1eSGXw+EU
9v3n//8/mtT3kqkw2uPkX4rlRODw/1emCiNJuP/KvG/7RUHfK16F6Swu/mzZ
tx3y96XCbByyc9i8vm3O/1+gwpjuH5sa0rf9lydUYQymvw9KQV6zMmNHn3FP
Q16BMiM8uWHUFeSlKjPrOImtWciLVmY+ftateY28QGUm6GPNQhnyHJSZybIJ
+8uQp6rMXNy6oroJedVKTK6yWWYX8hglJn9ikpE8l+UlKTGrddPHaXFZXpgS
I9yy5Ichl+X5KDHO2yact+CyvP5KzNuD4vYhXJbHUWK2jby33Q15MkXG/to9
pbHIy1Rk7uqtGhGAvHhFJkfxZOMc5IUoMjfUh25ZhTxQZJQXxQo2Ik+oyNzx
y+fvQl6zgOE6Tr2eiLwCAcPJfy0+j7xUAdOz3zMgC3nRAsby4MWCB8gLFDB5
Vd+kb5DnIGDWy7ja5chTFTAdt7dmNyCvms90pfRoyfGwPz4zNv7fXZo87I/P
rNypTEt42B+faRmcd96Rh/3xGW7Lo1ovHvbHZyYM28wNQh6Hz0yX2n1agTyZ
AuMTVQIxyMtUYH5sqzlwBHnxCkwi9/DVy8gLUWCiY1WPPEIeKDDlUTVrSpAn
VGDOJg4e24q8ZnnmB001qstjf/KM2lqrrAHy2J88s+7q5e2e8tifPNPtHrFu
njz2J8/oTd9+L1oe+5NnypRGBScjT1We2beUnnEfedU85nSwQ1UF8hgeIzg/
Qk1RAfvjMTptRt8HKWB/PCZ74sizUxWwPx6jeOzBtM0K2B+PKZYfaHFRAfvj
MZbjFYbLkCfjMm75PowSH/vr225IKHPjY39cRvB98LtQPvbHZQLC972+yMf+
uMxL+2itb3zsj8ukWD8utxRgf3JM4cijccsE2J8co509aEqmAPuTY+wutF7s
FWB/ckzJh55WP0XsT465Lbx1/rwi9ifHXNBTGiOvhP3JMeesKpYsUsL+OMyQ
Wt/M10rYH4fRPltcMVoZ++Mwze+M3txTxv44jKNPR+hoFeyPw5j8CCt/o4L9
cZiqkurZK1WxPw6zgmc3X19NBI5/++qlj3pYn3ylhv300j4j7ZSS1LGPXnr8
Wf+W8H4i+Lv7BT30+RnxRks0cH976GdLe2+Ha7I8hx5657rD109p4f5009ys
dWk/tDF/Nz0/P8Nzti7L8+mm/+ltCJPTx3zd9N6otcwnA8z3h54Znl/Uaoj5
/tDrXuc6zTHBfH9o3h1HyUAR5vtNP6K8BCukmO83LdxitXW0Jeb7TXuOk236
MBDzddE6jttkwfaYr4teGBwrNXfGfF30I4O8RScA83XRX413Pgsbj/k6aZvb
901vBWK+TjpR3ufrkBWYr5P2++Z41HEH5uugFzgXZRzLwnwdtGzL6LP3OGI2
XwfdFaXQm5QuZvO105MXnXh3eLg5m6+dvjQr3Ka00orN106bLBp5wt6vP5uv
nU5xj2+YvcSezddGp/HdAtS13dl8bfRB/sIBnits2HxtdPNJtxcru4aw+Vpp
7mSZXFqGK5uvlTa/ZD43NGEAm6+VXrm7rbnzgDmbr4VObD2/bXsV5muhZc52
Y434tmy+Flo0zm4jE27J5muh460djC68tmXzNdMeeQ5bSlsGsPmaadGh8PLv
iyzYfM100KFlikuE/dl8TXTNbPuX17dasfmaaK+lSTv221mx+ZpojaKak6rB
Fmy+RnrEiagv7V+s2HyNdMuDfW7uffz/8jXStoq6Bc/fStl8jbT/0wnKOo3m
bL4G+s8BXasNrpZsvgbaz8fc022RJZuvgW4tnfvBLbg/JP7l19NdPJ5XsJY5
y6unhx9wd07sksLiv5//Re8J39uz9h9zKPwb4Ce9Zud6/+xpFmD3N/9PuuPc
vBuX/SxYXh1t66M7bE8b8urolePWLKDGW7C8H3QaLN5heEPK8r7TjqoZMZNs
pCzvOy1qve88IAB5tXT9GPOzYGLB8mppsanug+W7Md83erP5w8Oly5FXQxtL
L8vUJiOvhn75oyrD7LqU5VXTlaXNGbc1kde3felc07FQ5FXRHuvyg86kSVhe
JW3vc2vks7cSlldJP3mreipYw5zlVdD7fn+oyDHD/a2gNyV3r3f7I2F5X+lf
zw65Gp5BXjkdEaXyokqGvHLa+Gpr42MPzFdG7wu4++bbXPx9y2ingTP3r2Rw
/77QB6w75wuEUkj++/7PNC9mw11KWwpz/n5fCZ1pY/P27jbc/2K69+Fy+wHJ
yPtEC0tiYyLTkPeR3qD+7lNxHvKK6MqoWytmX0XeBzros1dCdhHy3tMvX619
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
zD8pHP0+d74tmX/mYJ2nO+T/2/8DCOBfoA==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1: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
0HSqmv+wDvK41MH2nH5oKFOH+B+0XxGh
              "]]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          AxesOrigin -> {0, 0}, PlotRange -> {{-2, 4}, {-4, 40}}, 
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"SCBA: B, J = 0.4t\"", TraditionalForm], 
          PlotRange -> {{-2, 4}, {-4, 40}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{"\[Pi]", 
            FractionBox["\[Pi]", "2"], "0", "\[Pi]", 
            FractionBox["\[Pi]", "2"], "0"}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                  "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.811581966781907*^9, 3.811582034157148*^9, {3.811582140887178*^9, 
   3.811582170095728*^9}, {3.811582584003449*^9, 3.8115826534621983`*^9}, 
   3.811582698817922*^9, {3.8115849157678747`*^9, 3.811584952770604*^9}, 
   3.811585301729046*^9, 3.811585336875073*^9, {3.811586311733189*^9, 
   3.811586323212194*^9}, {3.811586825400141*^9, 3.8115868853090677`*^9}, 
   3.811586959645132*^9, {3.811587378004459*^9, 3.8115873893819027`*^9}, 
   3.8115874261635227`*^9},
 CellLabel->
  "Out[840]//TableForm=",ExpressionUUID->"cf8b60e1-df2a-4b79-a7ee-\
941c251740f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"plotsDir", ",", "\"\<SCBAvsED_noMag.png\>\""}], "]"}], ",", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "pltSCBAvsED", "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.811581979745751*^9, 3.8115819905569363`*^9}, {
  3.811582271128366*^9, 3.8115822962534037`*^9}, {3.81158233032334*^9, 
  3.811582341196815*^9}, {3.8115863396262817`*^9, 3.8115863517839603`*^9}},
 CellLabel->
  "In[841]:=",ExpressionUUID->"c4821e70-1c56-4d10-a227-394b8674ddfb"],

Cell[BoxData["\<\"./plots/SCBAvsED_noMag.png\"\>"], "Output",
 CellChangeTimes->{{3.811581985644721*^9, 3.811581991080741*^9}, 
   3.811582173814547*^9, 3.8115823469509497`*^9, 3.811582733557932*^9, 
   3.8115827958139553`*^9, 3.81158537561412*^9, 3.811586345423649*^9, 
   3.811587436532517*^9},
 CellLabel->
  "Out[841]=",ExpressionUUID->"d8b81607-82c7-4df5-bdb0-16736fc1012f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"plotsDir", ",", "\"\<SCBA-B-QP.png\>\""}], "]"}], ",", 
   "pltSCBA"}], "]"}]], "Input",
 CellChangeTimes->{{3.8115862369016*^9, 3.811586270004862*^9}},
 CellLabel->
  "In[786]:=",ExpressionUUID->"c2cecbb5-b9e1-4e05-beb9-711d76b54935"],

Cell[BoxData["\<\"./plots/SCBA-B-QP.png\"\>"], "Output",
 CellChangeTimes->{3.811586292536133*^9},
 CellLabel->
  "Out[786]=",ExpressionUUID->"ea923687-4a16-48c0-bd28-6eb2d4276607"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnDir", "=", "\"\<./pn/\>\""}]], "Input",
 CellChangeTimes->{{3.8116077384222193`*^9, 3.8116077619316874`*^9}},
 CellLabel->
  "In[902]:=",ExpressionUUID->"1cf206f7-3747-4d99-980e-bc96d345a21d"],

Cell[BoxData["\<\"./pn/\"\>"], "Output",
 CellChangeTimes->{{3.811607749911607*^9, 3.8116077768995543`*^9}},
 CellLabel->
  "Out[902]=",ExpressionUUID->"e48b844b-b43b-4944-be5e-8276d3a097f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<Pn_*.txt\>\"", ",", "pnDir"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
     "files"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811607785135172*^9, 3.811607804211779*^9}},
 CellLabel->
  "In[926]:=",ExpressionUUID->"36fa3e5c-0772-492f-84a6-77c148dc47c6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\<\"./pn/Pn_L=14_J=0.4_m=0.0.txt\"\>"},
    {"2", "\<\"./pn/Pn_L=14_J=0.4_m=1.0.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.811607807139481*^9, 3.811608102393777*^9, 
  3.8116081483061028`*^9, 3.811608489925034*^9, 3.8116085301303253`*^9},
 CellLabel->
  "Out[927]//TableForm=",ExpressionUUID->"a0f90809-c0d1-4084-8322-\
8c67cd9b3abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnDataStructure", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"file", ",", "\"\<Table\>\""}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"line", "-", "1"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"line", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"line", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ")"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"file", ",", "files"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811607854607917*^9, 3.811607931983934*^9}, {
  3.8116079802047358`*^9, 3.811608072626637*^9}, {3.8116081637648077`*^9, 
  3.811608179530223*^9}},
 CellLabel->
  "In[928]:=",ExpressionUUID->"ccf36ba2-7ec1-4cac-aee7-be578433540d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.12378063133184736`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5410341146869944`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.1612311011650035`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.033325616873703695`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.03641326716212004`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0.01887528487923114`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.045751854524243525`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0.03958812937685654`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.0702891772980629`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.24233751853522748`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.07501246011656078`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.1656056979064671`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.04202189152483789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0.11925435157667691`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.14221667200395852`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0.14326223103820898`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8116079176022043`*^9, {3.811608150274057*^9, 3.811608180536664*^9}, 
   3.811608532366597*^9},
 CellLabel->
  "Out[928]=",ExpressionUUID->"b52e5671-5570-4935-8a98-8503c52bd652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnPlots", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"pnDataStructure", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "12"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"files", ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "24"}], "}"}]}], "]"}], ",", "Above"}], "]"}]}], 
    ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(n\)]\)\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811607820649693*^9, 3.811607836933415*^9}, {
  3.811608189811265*^9, 3.811608363476509*^9}, {3.811608557525511*^9, 
  3.811608615078627*^9}, {3.811608648881215*^9, 3.811608720812417*^9}, {
  3.81160875468897*^9, 3.811609019964087*^9}, {3.8116091014148283`*^9, 
  3.811609167243739*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"c3be35f3-90ed-459d-93d5-04da5b2bce18"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.12378063133184736`}, {1., 0.5410341146869944}, {2., 
         0.1612311011650035}, {3., 0.033325616873703695`}, {4., 
         0.03641326716212004}, {5., 0.01887528487923114}, {6., 
         0.045751854524243525`}, {7., 0.03958812937685654}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.0702891772980629}, {1., 0.24233751853522748`}, {2., 
         0.07501246011656078}, {3., 0.1656056979064671}, {4., 
         0.04202189152483789}, {5., 0.11925435157667691`}, {6., 
         0.14221667200395852`}, {7., 0.14326223103820898`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 12, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., 0.12378063133184736`}}, {{1.,
          0.5410341146869944}}, {{2., 0.1612311011650035}}, {{3., 
         0.033325616873703695`}}, {{4., 0.03641326716212004}}, {{5., 
         0.01887528487923114}}, {{6., 0.045751854524243525`}}, {{7., 
         0.03958812937685654}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 12, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., 0.0702891772980629}}, {{1., 
         0.24233751853522748`}}, {{2., 0.07501246011656078}}, {{3., 
         0.1656056979064671}}, {{4., 0.04202189152483789}}, {{5., 
         0.11925435157667691`}}, {{6., 0.14221667200395852`}}, {{7., 
         0.14326223103820898`}}}]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 7.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox["\"n\"", TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 18], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 7.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L=14_J=0.4_m=0.0\"", "\"L=14_J=0.4_m=1.0\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12}, {20, 12}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 12, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12}, {20, 12}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 12, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "12"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "12"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.811608200298417*^9, 3.8116082139356403`*^9}, {
   3.8116082637263308`*^9, 3.811608275668091*^9}, {3.811608306423244*^9, 
   3.811608331847888*^9}, 3.811608364028751*^9, 3.811608534332448*^9, 
   3.8116085832523613`*^9, 3.8116086168953648`*^9, {3.8116086495980167`*^9, 
   3.811608706571719*^9}, 3.811608757149454*^9, {3.811608789761201*^9, 
   3.811608893216152*^9}, {3.8116089420274*^9, 3.8116090203133287`*^9}, {
   3.811609117841384*^9, 3.8116091678965273`*^9}},
 CellLabel->
  "Out[967]=",ExpressionUUID->"29c72974-5bf9-49cb-a443-eaf45a793ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"pnDir", ",", "\"\<Pn.png\>\""}], "]"}], ",", "pnPlots", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.811609287633535*^9, 3.81160932705987*^9}, {
  3.8116094122354193`*^9, 3.811609442892769*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"7a41e031-1891-4c01-93d7-fcb681e976f3"],

Cell[BoxData["\<\"./pn/Pn.png\"\>"], "Output",
 CellChangeTimes->{
  3.8116093277724752`*^9, {3.811609424035923*^9, 3.811609444530357*^9}},
 CellLabel->
  "Out[970]=",ExpressionUUID->"ee7a34f9-4f93-48a1-861c-a199917b53dc"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1251, 28, 136, "Input",ExpressionUUID->"f83cadff-8e27-4166-9dac-92335885fc6c"],
Cell[1812, 50, 22917, 554, 1501, "Input",ExpressionUUID->"2c5d6007-3fce-4311-9dde-8f46d72d4221"],
Cell[CellGroupData[{
Cell[24754, 608, 10217, 299, 220, "Input",ExpressionUUID->"d9ed871e-408b-44eb-a809-8c8aa4b97d03"],
Cell[34974, 909, 4437, 74, 782, "Output",ExpressionUUID->"9d3c7deb-d248-4f44-ba9a-da777ea9179a"]
}, Open  ]],
Cell[39426, 986, 12895, 339, 304, "Input",ExpressionUUID->"1ada7f96-63c7-4f2e-8408-26b0161bd61b"],
Cell[CellGroupData[{
Cell[52346, 1329, 15260, 390, 346, "Input",ExpressionUUID->"3ffeba7c-2101-4d6e-bbce-0b9ed19f234c"],
Cell[67609, 1721, 27755, 601, 319, "Output",ExpressionUUID->"546a0cd8-b1a3-47e3-a383-b90224134d87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95401, 2327, 1628, 36, 52, "Input",ExpressionUUID->"c433c2a1-e7a1-4265-9857-8aa1b75525d9"],
Cell[97032, 2365, 251619, 4245, 494, "Output",ExpressionUUID->"091f59ea-474f-4255-a6c3-0bac45ab540e"]
}, Open  ]],
Cell[348666, 6613, 1420, 35, 94, "Input",ExpressionUUID->"fbb9b51f-0a3d-41e3-ac99-d8d67dcaf8a2"],
Cell[350089, 6650, 1269, 36, 30, "Input",ExpressionUUID->"2430b3d2-eab7-4f46-9f06-bcf0a52859dd"],
Cell[CellGroupData[{
Cell[351383, 6690, 1934, 52, 52, "Input",ExpressionUUID->"2d4596cb-8856-40f8-a905-bfabd257d577"],
Cell[353320, 6744, 41379, 705, 404, "Output",ExpressionUUID->"24382366-c551-4810-b65e-18b6c8542b9a"]
}, Open  ]],
Cell[394714, 7452, 11411, 324, 367, "Input",ExpressionUUID->"40ae93ce-925e-4d83-8046-2e3fbd0e0ed1"],
Cell[CellGroupData[{
Cell[406150, 7780, 2571, 67, 73, "Input",ExpressionUUID->"3c9acdfb-a9df-4bbe-9781-91bea8a9aa1d"],
Cell[408724, 7849, 13894, 275, 408, "Output",ExpressionUUID->"157e06a6-180b-498c-869c-f8ead9dc4508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422655, 8129, 966, 24, 30, "Input",ExpressionUUID->"dac4164b-6dfa-407c-b3f0-767fa3d57c1a"],
Cell[423624, 8155, 559, 14, 34, "Output",ExpressionUUID->"0c02e1d5-a04e-47b2-9788-f0bac58c63d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424220, 8174, 445, 11, 30, "Input",ExpressionUUID->"a7db345d-2e93-4b45-905f-e5c050b881c6"],
Cell[424668, 8187, 3201, 69, 255, "Output",ExpressionUUID->"0960ae81-4d72-4b44-813a-54add481d0da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427906, 8261, 246, 6, 30, "Input",ExpressionUUID->"6b49bb85-b431-453d-bd18-a7a71f12f79b"],
Cell[428155, 8269, 417, 9, 34, "Output",ExpressionUUID->"168c093c-6f56-4299-b1f7-d8afb2d61bf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428609, 8283, 416, 12, 30, "Input",ExpressionUUID->"56d240a4-8fc9-47cb-ad89-a445fe6bd7b6"],
Cell[429028, 8297, 310, 9, 51, "Output",ExpressionUUID->"36ba14dd-bea7-4444-bf29-17fcb53e27e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429375, 8311, 360, 9, 30, "Input",ExpressionUUID->"4ef820ff-1bd8-4c8b-aa47-d16952524b17"],
Cell[429738, 8322, 180, 3, 34, "Output",ExpressionUUID->"32d76863-9b99-4940-9216-b6ce9ab5f6dc"]
}, Open  ]],
Cell[429933, 8328, 541, 11, 94, "Input",ExpressionUUID->"a4f367db-9c07-4199-a584-76e7477cdf17"],
Cell[CellGroupData[{
Cell[430499, 8343, 914, 22, 52, "Input",ExpressionUUID->"ef12ce80-2573-4e66-8e96-aee19ff9df88"],
Cell[431416, 8367, 1421, 35, 134, "Output",ExpressionUUID->"0367cdcb-828a-47b0-a678-b28492518823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432874, 8407, 436, 11, 30, "Input",ExpressionUUID->"514c9ef8-85cd-4cf6-8794-d382b6cf7d95"],
Cell[433313, 8420, 10220, 266, 142, "Output",ExpressionUUID->"ade531fd-8ea6-4353-a52d-9cc6f0b92f47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443570, 8691, 3631, 73, 52, "Input",ExpressionUUID->"75fc45d1-7b8d-4e47-be47-961b966ba28e"],
Cell[447204, 8766, 46528, 844, 401, "Output",ExpressionUUID->"19ca7336-dee6-4ab8-a3c6-bb2884499d36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493769, 9615, 2596, 63, 73, "Input",ExpressionUUID->"8bca75e9-0b29-475a-ad07-301ff2c5609c"],
Cell[496368, 9680, 87443, 1533, 802, "Output",ExpressionUUID->"cf8b60e1-df2a-4b79-a7ee-941c251740f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583848, 11218, 544, 11, 30, "Input",ExpressionUUID->"c4821e70-1c56-4d10-a227-394b8674ddfb"],
Cell[584395, 11231, 379, 6, 34, "Output",ExpressionUUID->"d8b81607-82c7-4df5-bdb0-16736fc1012f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584811, 11242, 329, 8, 30, "Input",ExpressionUUID->"c2cecbb5-b9e1-4e05-beb9-711d76b54935"],
Cell[585143, 11252, 181, 3, 34, "Output",ExpressionUUID->"ea923687-4a16-48c0-bd28-6eb2d4276607"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585361, 11260, 218, 4, 30, "Input",ExpressionUUID->"1cf206f7-3747-4d99-980e-bc96d345a21d"],
Cell[585582, 11266, 191, 3, 34, "Output",ExpressionUUID->"e48b844b-b43b-4944-be5e-8276d3a097f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585810, 11274, 627, 18, 52, "Input",ExpressionUUID->"36fa3e5c-0772-492f-84a6-77c148dc47c6"],
Cell[586440, 11294, 837, 21, 62, "Output",ExpressionUUID->"a0f90809-c0d1-4084-8322-8c67cd9b3abf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587314, 11320, 966, 27, 30, "Input",ExpressionUUID->"ccf36ba2-7ec1-4cac-aee7-be578433540d"],
Cell[588283, 11349, 1646, 44, 56, "Output",ExpressionUUID->"b52e5671-5570-4935-8a98-8503c52bd652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589966, 11398, 1468, 36, 52, "Input",ExpressionUUID->"c3be35f3-90ed-459d-93d5-04da5b2bce18"],
Cell[591437, 11436, 15809, 330, 448, "Output",ExpressionUUID->"29c72974-5bf9-49cb-a443-eaf45a793ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607283, 11771, 423, 9, 30, "Input",ExpressionUUID->"7a41e031-1891-4c01-93d7-fcb681e976f3"],
Cell[607709, 11782, 222, 4, 34, "Output",ExpressionUUID->"ee7a34f9-4f93-48a1-861c-a199917b53dc"]
}, Open  ]]
}
]
*)

