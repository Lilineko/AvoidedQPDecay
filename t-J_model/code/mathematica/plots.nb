(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    527965,      10491]
NotebookOptionsPosition[    522241,      10387]
NotebookOutlinePosition[    522594,      10403]
CellTagsIndexPosition[    522551,      10400]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "projectDir", " ", "=", " ", 
   "\"\</Users/pwrzosek/Documents/GitHub/AvoidedQP/t-J_model\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotsDir", " ", "=", "\"\<./plots/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDir", "=", "\"\<./data/\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "projectDir", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ToExpression", "::", "sntx"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"ToExpression", "::", "sntxi"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.810376366370266*^9, 3.810376438000781*^9}, {
  3.810376528964566*^9, 3.81037659966924*^9}, {3.810378724939012*^9, 
  3.810378726407338*^9}, {3.810378797254983*^9, 3.810378799205646*^9}, {
  3.810382647596902*^9, 3.810382648137683*^9}, {3.810383800791376*^9, 
  3.810383813027672*^9}, {3.810388842435267*^9, 3.810388843306177*^9}, {
  3.8103903787410994`*^9, 3.810390383278997*^9}, {3.810390520457258*^9, 
  3.810390539829296*^9}, {3.810390620046638*^9, 3.8103906203914137`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f83cadff-8e27-4166-9dac-92335885fc6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Definitions", " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Read", " ", 
    RowBox[{"Lehmann", "'"}], "s", " ", "representation", " ", "of", " ", 
    "the", " ", 
    RowBox[{"Green", "'"}], "s", " ", "function", " ", "from", " ", "a", " ", 
    
    RowBox[{"file", " ", "'"}], 
    RowBox[{"filename", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReadData", "[", "filename_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"stream", " ", "=", " ", 
        RowBox[{"OpenRead", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Read", "[", 
          RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"momentum", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0.0", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"energy", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"weight", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"doMomentum", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doEnergy", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"doWeight", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"in", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"in", "\[LessEqual]", " ", "n"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"doMomentum", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"token", "=", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"Read", "[", 
                  RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                 RowBox[{"token", "=", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"momentum", "[", 
                 RowBox[{"[", "in", "]"}], "]"}], "=", "token"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"doMomentum", "=", "False"}], ";"}], 
              "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"doEnergy", ",", 
                RowBox[{"(", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"token", "=", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                   "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", "token", "]"}], ",", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"energy", "[", 
                    RowBox[{"[", "in", "]"}], "]"}], ",", "token"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"doEnergy", "=", "False"}], ";"}], 
                 "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"doWeight", ",", 
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"NumberQ", "[", "token", "]"}]}], ",", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"NumberQ", "[", "token", "]"}], ",", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"weight", "[", 
                    RowBox[{"[", "in", "]"}], "]"}], ",", "token"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"token", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Read", "[", 
                    RowBox[{"stream", ",", " ", "Word"}], "]"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doWeight", "=", "False"}], ";"}], 
                    "\[IndentingNewLine]", ")"}], ",", 
                   RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"doMomentum", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doEnergy", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"doWeight", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"in", "++"}], ";"}], "\[IndentingNewLine]", 
                    ")"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "stream", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"momentum", ",", " ", "energy", ",", " ", "weight"}], "}"}]}],
       "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "exact", " ", "representation", " ", "of", " ", "possible", 
     " ", "momenta", " ", "in", " ", "units", " ", "of", " ", "\[Pi]"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getMomentumInPi", "[", "momentum_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"momentum", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "momentum", "]"}], "-", "1"}], ")"}], "/", 
         RowBox[{"(", "Pi", ")"}]}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "momentum", "]"}], "-", "1"}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Calculate", " ", "spectral", " ", "function", " ", "A", 
     RowBox[{"(", 
      RowBox[{"k", ",", "\[Omega]"}], ")"}], " ", "from", " ", 
     RowBox[{"Lehmann", "'"}], "s", " ", "representation", " ", "of", " ", 
     "the", " ", 
     RowBox[{"Green", "'"}], "s", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"calculate", "[", 
      RowBox[{"momentum_", ",", "energy_", ",", "weight_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Omega]Min", "=", 
        RowBox[{"Min", "[", "energy", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Max", "=", 
        RowBox[{"Max", "[", "energy", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i\[Delta]", "=", 
        RowBox[{"0.04", "I"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Set", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"\[Omega]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Omega]", ",", 
            RowBox[{"\[Omega]Min", "-", "1"}], ",", 
            RowBox[{"\[Omega]Max", "-", "1"}], ",", "0.01"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"kSet", "=", 
        RowBox[{
         RowBox[{"getMomentumInPi", "[", "momentum", "]"}], "*", "Pi"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"spectrum", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"kSet", "[", 
             RowBox[{"[", "kDim", "]"}], "]"}], ",", 
            RowBox[{"\[Omega]Set", "[", 
             RowBox[{"[", "\[Omega]Dim", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Im", "[", 
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"weight", "[", 
                  RowBox[{"[", "kDim", "]"}], "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Omega]Set", "[", 
                    RowBox[{"[", "\[Omega]Dim", "]"}], "]"}], "+", 
                   "i\[Delta]", "-", 
                   RowBox[{"energy", "[", 
                    RowBox[{"[", "kDim", "]"}], "]"}]}], ")"}]}], "]"}], 
               "]"}]}], "/", "Pi"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Omega]Dim", ",", "1", ",", 
            RowBox[{"Length", "[", "\[Omega]Set", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kDim", ",", "1", ",", 
            RowBox[{"Length", "[", "kSet", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"spectrum", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
      ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Definitions", " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810376626373351*^9, 3.810376681703945*^9}, {
   3.8103767165449743`*^9, 3.810376732108768*^9}, {3.810376774763689*^9, 
   3.810376776377264*^9}, {3.8103787462203608`*^9, 3.81037875338736*^9}, {
   3.810378831916213*^9, 3.810378856182395*^9}, {3.810378960576898*^9, 
   3.8103789627187138`*^9}, {3.8103790412637987`*^9, 3.810379053328946*^9}, {
   3.810379127729329*^9, 3.810379236768886*^9}, {3.810379432637445*^9, 
   3.810379470874033*^9}, {3.810380781487191*^9, 3.8103808610195847`*^9}, {
   3.810380908836014*^9, 3.8103809263445463`*^9}, {3.810380956964862*^9, 
   3.8103810149694853`*^9}, {3.810381046065974*^9, 3.8103813053257723`*^9}, {
   3.810381580177771*^9, 3.810381625142024*^9}, {3.810381661929336*^9, 
   3.810382105601828*^9}, {3.810382138360569*^9, 3.8103821450767384`*^9}, {
   3.810382242683181*^9, 3.810382246969778*^9}, {3.81038228606592*^9, 
   3.810382288450636*^9}, {3.810382437568595*^9, 3.810382443929315*^9}, {
   3.8103824858751163`*^9, 3.810382503613666*^9}, {3.810382563536317*^9, 
   3.810382593818511*^9}, {3.8103826368386106`*^9, 3.810382646101956*^9}, {
   3.810383816510055*^9, 3.8103838173846483`*^9}, {3.81038884559372*^9, 
   3.810388849003641*^9}, {3.8103906697810163`*^9, 3.810390699810843*^9}, {
   3.810390760750798*^9, 3.810390761951206*^9}, {3.810394352083129*^9, 
   3.810394368561453*^9}, {3.810394434839192*^9, 3.810394681501354*^9}, {
   3.810394800537978*^9, 3.810394815686274*^9}, {3.810394896393325*^9, 
   3.8103949027118263`*^9}, {3.810394955659092*^9, 3.8103949566373453`*^9}, {
   3.81039579981538*^9, 3.810395809712092*^9}, {3.810396310791771*^9, 
   3.810396330794058*^9}, {3.81039636429146*^9, 3.810396391328713*^9}, {
   3.8103964303034687`*^9, 3.810396430474443*^9}, 3.810396578851117*^9, {
   3.81039676972056*^9, 3.8103967852585697`*^9}, {3.810400656023312*^9, 
   3.810400671237116*^9}, {3.810404459687192*^9, 3.810404461238873*^9}, {
   3.810406250636938*^9, 3.810406255362336*^9}, {3.8104063297652397`*^9, 
   3.8104063299799747`*^9}, {3.810407063925943*^9, 3.81040715020478*^9}, {
   3.810560189586678*^9, 3.810560189623322*^9}, {3.810560271316864*^9, 
   3.8105602945590553`*^9}, 3.810560531433834*^9, {3.8107365448358793`*^9, 
   3.810736559757663*^9}, 3.8115299240318108`*^9, {3.811575864722541*^9, 
   3.811575865733472*^9}, {3.8115830239698143`*^9, 3.8115830244798822`*^9}, 
   3.8115875421896963`*^9},
 CellLabel->
  "In[892]:=",ExpressionUUID->"2c5d6007-3fce-4311-9dde-8f46d72d4221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Listing", " ", "Files"}], " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<lehmann_*.txt\>\"", ",", "dataDir"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
       "files"}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Listing", " ", "Files"}], " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.81039599757122*^9, 3.810396125433206*^9}, {
  3.810398060516449*^9, 3.810398063494487*^9}, {3.810398122484665*^9, 
  3.810398139524791*^9}},
 CellLabel->
  "In[845]:=",ExpressionUUID->"d9ed871e-408b-44eb-a809-8c8aa4b97d03"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\<\"./data/lehmann_l=02_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"2", "\<\"./data/lehmann_l=04_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"3", "\<\"./data/lehmann_l=06_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"4", "\<\"./data/lehmann_l=06_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"5", "\<\"./data/lehmann_l=06_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"6", "\<\"./data/lehmann_l=06_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"7", "\<\"./data/lehmann_l=08_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"8", "\<\"./data/lehmann_l=08_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"9", "\<\"./data/lehmann_l=08_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"10", "\<\"./data/lehmann_l=08_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"11", "\<\"./data/lehmann_l=10_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"12", "\<\"./data/lehmann_l=10_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"13", "\<\"./data/lehmann_l=10_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"14", "\<\"./data/lehmann_l=10_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"15", "\<\"./data/lehmann_l=12_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"16", "\<\"./data/lehmann_l=12_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"17", "\<\"./data/lehmann_l=12_t=1.0_J=0.625_m=1.0_.txt\"\>"},
    {"18", "\<\"./data/lehmann_l=12_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"19", "\<\"./data/lehmann_l=12_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"20", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"21", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.1_.txt\"\>"},
    {"22", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.2_.txt\"\>"},
    {"23", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.3_.txt\"\>"},
    {"24", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.4_.txt\"\>"},
    {"25", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.5_.txt\"\>"},
    {"26", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.6_.txt\"\>"},
    {"27", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.7_.txt\"\>"},
    {"28", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.8_.txt\"\>"},
    {"29", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=0.9_.txt\"\>"},
    {"30", "\<\"./data/lehmann_l=14_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"31", "\<\"./data/lehmann_l=14_t=1.0_J=0.625_m=1.0_.txt\"\>"},
    {"32", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"33", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.2_.txt\"\>"},
    {"34", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.4_.txt\"\>"},
    {"35", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.6_.txt\"\>"},
    {"36", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=0.8_.txt\"\>"},
    {"37", "\<\"./data/lehmann_l=14_t=1.0_J=1.0_m=1.0_.txt\"\>"},
    {"38", "\<\"./data/lehmann_l=16_t=1.0_J=0.4_m=0.0_.txt\"\>"},
    {"39", "\<\"./data/lehmann_l=16_t=1.0_J=0.4_m=1.0_.txt\"\>"},
    {"40", "\<\"./data/lehmann_l=16_t=1.0_J=1.0_m=0.0_.txt\"\>"},
    {"41", "\<\"./data/lehmann_l=16_t=1.0_J=1.0_m=1.0_.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.810396025741809*^9, 3.81039604362904*^9}, {
   3.810396085764331*^9, 3.8103960960540733`*^9}, 3.810396163283956*^9, 
   3.810396215785585*^9, 3.8103970005654573`*^9, 3.81039830116523*^9, 
   3.8103986670184307`*^9, 3.8103990824755087`*^9, 3.810399694179892*^9, 
   3.810400025159423*^9, 3.810401235180163*^9, 3.8104043761497717`*^9, 
   3.8104057200612*^9, 3.810406015024948*^9, 3.810406295024506*^9, 
   3.810406797011745*^9, {3.8104069410558023`*^9, 3.810406955546688*^9}, 
   3.810443223474375*^9, 3.8104459289350863`*^9, 3.8104542459573517`*^9, 
   3.8104546041668587`*^9, 3.810560200225421*^9, 3.810560901771048*^9, 
   3.810736440312437*^9, 3.810786104287901*^9, 3.810842787303564*^9, 
   3.810844524484291*^9, 3.810877356757101*^9, 3.811514060423943*^9, 
   3.811518492181432*^9, 3.8115221167275343`*^9, 3.811524680267994*^9, 
   3.811525023259783*^9, 3.8115739546841173`*^9, 3.811574203373485*^9, 
   3.81157633291473*^9, 3.811576727962811*^9, 3.8115829217381687`*^9, 
   3.8115863889109383`*^9, 3.811587548964389*^9},
 CellLabel->
  "Out[846]//TableForm=",ExpressionUUID->"fbf0daea-db58-4f1a-adce-\
a58fefd5edbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Spectral", " ", "Function"}], " ", "-", " ", "BEGIN"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"whichFiles", "=", 
     RowBox[{"{", "38", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filename", "=", 
        RowBox[{"files", "[", 
         RowBox[{"[", "it", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"momentum", ",", "energy", ",", "weight"}], "}"}], "=", 
        RowBox[{"ReadData", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"A", ",", 
         RowBox[{"calculate", "[", 
          RowBox[{"momentum", ",", "energy", ",", "weight"}], "]"}]}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "whichFiles"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Spectral", " ", "Function"}], " ", "-", " ", "END"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810389140911186*^9, 3.810389232423902*^9}, {
   3.810389607848843*^9, 3.8103896206504498`*^9}, {3.810390650241652*^9, 
   3.8103906512426043`*^9}, {3.810390787565298*^9, 3.8103908359451723`*^9}, {
   3.810394965108252*^9, 3.8103950165725307`*^9}, {3.810395049030242*^9, 
   3.810395049611656*^9}, {3.810395613133753*^9, 3.8103956317130947`*^9}, {
   3.810395716482202*^9, 3.81039577935992*^9}, {3.810395924995694*^9, 
   3.810395931667713*^9}, {3.810395981696918*^9, 3.810396016565071*^9}, {
   3.810396105076209*^9, 3.8103961214727297`*^9}, {3.810397004868931*^9, 
   3.810397005011612*^9}, {3.810398906457726*^9, 3.8103989065984573`*^9}, {
   3.8103989544616003`*^9, 3.810398954596925*^9}, {3.810399012375163*^9, 
   3.810399012548181*^9}, {3.8104002011681633`*^9, 3.810400337112453*^9}, {
   3.810400553032855*^9, 3.81040056878815*^9}, {3.810400647336173*^9, 
   3.8104006500234003`*^9}, {3.810400760655737*^9, 3.810400783884313*^9}, {
   3.810401245025242*^9, 3.810401258763464*^9}, 3.810401312330393*^9, 
   3.810404384798785*^9, {3.8104057268898973`*^9, 3.810405727734165*^9}, {
   3.810406018413013*^9, 3.810406018819355*^9}, {3.8104062706977367`*^9, 
   3.810406270975472*^9}, {3.810406948219822*^9, 3.810406950008585*^9}, {
   3.8104459382977877`*^9, 3.810445956212764*^9}, 3.810454261246662*^9, 
   3.810560212790255*^9, 3.810560905602434*^9, {3.810736446642755*^9, 
   3.810736448155588*^9}, {3.810786111749064*^9, 3.810786116176743*^9}, {
   3.810842841718924*^9, 3.810842951173872*^9}, {3.810877751858386*^9, 
   3.810877755231174*^9}, {3.810878447308474*^9, 3.810878451885536*^9}, {
   3.811514073439703*^9, 3.811514074124442*^9}, {3.81151443827774*^9, 
   3.811514438588633*^9}, {3.8115184861204576`*^9, 3.81151848711061*^9}, {
   3.811524673680773*^9, 3.811524674129386*^9}, {3.811524830956483*^9, 
   3.811524832436639*^9}, {3.811524923886986*^9, 3.811524951948861*^9}, {
   3.81152520435625*^9, 3.811525204660201*^9}, {3.811527206905467*^9, 
   3.811527207309351*^9}, {3.8115282682933693`*^9, 3.811528269216008*^9}, {
   3.8115299320765553`*^9, 3.8115299337455053`*^9}, {3.811572454953424*^9, 
   3.8115724560645523`*^9}, {3.811573963542282*^9, 3.811573964590851*^9}, {
   3.811574214177923*^9, 3.811574214692297*^9}, {3.8115829158049383`*^9, 
   3.811582916142436*^9}, {3.811586396409649*^9, 3.81158639667478*^9}},
 CellLabel->
  "In[895]:=",ExpressionUUID->"1ada7f96-63c7-4f2e-8408-26b0161bd61b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Plot", " ", "Setup"}], " ", "-", " ", "BEGIN"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FrameTicksFontSize", "=", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LegendFontSize", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colors", "=", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<SunsetColors\>\"", ",", "\"\<Reverse\>\""}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListDensityPlot", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "GoldenRatio"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "colors"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FrameTicksFontSize", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"getMomentumInPi", "[", "momentum", "]"}], "*", "Pi"}], 
          ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"BarLegend", "[", 
         RowBox[{"Automatic", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"LegendFontSize", ",", " ", "Black"}], "]"}]}]}], "]"}], 
        ",", "Right"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<k\>\"", ",", "FrameTicksFontSize", ",", "Black"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\[Omega]\>\"", ",", "FrameTicksFontSize", ",", "Black"}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"FrameTicksFontSize", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Pi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ClippingStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "Identity"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Plot", " ", "Setup"}], " ", "-", " ", "END"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8103909062969522`*^9, 3.810390938447989*^9}, {
   3.8103914034289494`*^9, 3.810391478918695*^9}, {3.8103915094855747`*^9, 
   3.810391516321938*^9}, {3.81039154802481*^9, 3.8103915905346413`*^9}, {
   3.8103919290884333`*^9, 3.810391932636866*^9}, {3.8103919753528137`*^9, 
   3.81039197644311*^9}, {3.810392037643795*^9, 3.810392039151093*^9}, {
   3.810392920156106*^9, 3.810392976137426*^9}, {3.810393035948379*^9, 
   3.8103930537918873`*^9}, {3.810393107408752*^9, 3.8103931522075644`*^9}, {
   3.810393242861773*^9, 3.810393272518208*^9}, {3.810393353425254*^9, 
   3.8103933766020107`*^9}, {3.810393446708737*^9, 3.810393528079771*^9}, {
   3.8103939088417892`*^9, 3.8103939902174587`*^9}, {3.810394030581053*^9, 
   3.810394034449313*^9}, {3.810394107308866*^9, 3.810394131278425*^9}, {
   3.810394179044854*^9, 3.810394303459477*^9}, {3.810395071262528*^9, 
   3.810395125465225*^9}, {3.81039517580977*^9, 3.810395176377693*^9}, {
   3.810396504439508*^9, 3.8103965542968493`*^9}, {3.810397873596547*^9, 
   3.810397894880501*^9}, {3.810398814378429*^9, 3.810398885544795*^9}, {
   3.8103989301775723`*^9, 3.810398930396819*^9}, {3.810400934080658*^9, 
   3.810400958912231*^9}, {3.810408470293249*^9, 3.810408491707555*^9}, {
   3.810877706986392*^9, 3.810877719594139*^9}, {3.810877763107994*^9, 
   3.8108777635064173`*^9}, {3.8115220090808153`*^9, 3.81152205638853*^9}, 
   3.811522097835623*^9, {3.811527811500085*^9, 3.811527812041835*^9}, {
   3.81152784920562*^9, 3.811527851233184*^9}, {3.811527988081359*^9, 
   3.8115279890043087`*^9}, 3.8115280385311337`*^9, {3.81152809456561*^9, 
   3.811528123864709*^9}, {3.8115281665428963`*^9, 3.811528189082412*^9}, 
   3.811528247299938*^9, {3.811528954468864*^9, 3.811528973306384*^9}, 
   3.811529009373105*^9, {3.811529102993867*^9, 3.811529103890979*^9}, {
   3.8115292349156713`*^9, 3.811529244167405*^9}, {3.811529276049247*^9, 
   3.811529276801052*^9}, {3.811529332625198*^9, 3.8115293378911753`*^9}, {
   3.811529423577096*^9, 3.811529425274981*^9}, 3.811529471135352*^9, {
   3.811529534149588*^9, 3.8115295395365963`*^9}, {3.8115295766183777`*^9, 
   3.811529670937402*^9}, {3.811529706782659*^9, 3.8115297315283823`*^9}, 
   3.811530497449891*^9, {3.81153067341747*^9, 3.81153067594421*^9}, {
   3.811530974033003*^9, 3.811531005648448*^9}, 3.8115312789757147`*^9, {
   3.811531345496416*^9, 3.8115313476309357`*^9}, 3.811531382909293*^9, {
   3.8115723387428083`*^9, 3.811572354881505*^9}, {3.811572796222313*^9, 
   3.811572796473592*^9}, {3.811572991896453*^9, 3.8115729926368313`*^9}, {
   3.8115730575077267`*^9, 3.811573057869924*^9}, {3.811573098940668*^9, 
   3.811573114979587*^9}, {3.81157319723293*^9, 3.811573198766609*^9}, {
   3.811574715848421*^9, 3.811574719889657*^9}, {3.8115747582727118`*^9, 
   3.811574837819132*^9}, {3.811575889884302*^9, 3.811575890721258*^9}, {
   3.8115767503488913`*^9, 3.8115767546877537`*^9}, 3.811576949600582*^9, {
   3.811587589097731*^9, 3.8115876980285187`*^9}},
 CellLabel->
  "In[883]:=",ExpressionUUID->"3ffeba7c-2101-4d6e-bbce-0b9ed19f234c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "GoldenRatio"]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ColorDataFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SunsetColors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SunsetColors\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ColorDataFunction["SunsetColors", "Gradients", {1, 0}, Blend[{{1., 
         RGBColor[0., 0., 0.]}, {0.8333333333333334, 
         RGBColor[0.372793, 0.1358, 0.506503]}, {0.6666666666666667, 
         RGBColor[0.788287, 0.259816, 0.270778]}, {0.5, 
         RGBColor[0.979377, 0.451467, 0.0511329]}, {0.33333333333333337`, 
         RGBColor[1., 0.682688, 0.129771]}, {0.16666666666666674`, 
         RGBColor[1., 0.882236, 0.491094]}, {0., 
         RGBColor[1., 1., 1.]}}, #]& ],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DataRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["\<\"k\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       FontSize->18,
       FontColor->GrayLevel[0]], ",", 
      StyleBox["\<\"\[Omega]\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       FontSize->18,
       FontColor->GrayLevel[0]]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False], ",", 
      RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["\[Pi]", "8"], ",", 
          FractionBox["\[Pi]", "4"], ",", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
          FractionBox["\[Pi]", "2"], ",", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "8"], ",", "\[Pi]", ",", 
          FractionBox[
           RowBox[{"9", " ", "\[Pi]"}], "8"], ",", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "4"], ",", 
          FractionBox[
           RowBox[{"11", " ", "\[Pi]"}], "8"], ",", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "2"], ",", 
          FractionBox[
           RowBox[{"13", " ", "\[Pi]"}], "8"], ",", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "4"], ",", 
          FractionBox[
           RowBox[{"15", " ", "\[Pi]"}], "8"], ",", 
          RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"18", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"18", ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False]}], "]"}]}], ",", 
   RowBox[{"LightingAngle", "\[Rule]", "None"}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#1", "&"}], ",", 
      RowBox[{"#2", "&"}]}], "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"BarLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"14", ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->GrayLevel[0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False]}], "]"}]}]}], "]"}], ",", "Right"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5`"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"True", "&"}], ")"}]}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"VertexColors", "\[Rule]", "Automatic"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.810393264474996*^9, 3.810393273308497*^9}, {
   3.810393360841194*^9, 3.8103933771284924`*^9}, {3.810393447546379*^9, 
   3.810393528414008*^9}, 3.810393991808907*^9, {3.810394110738168*^9, 
   3.8103941319853973`*^9}, 3.810394182178844*^9, 3.810394223679051*^9, 
   3.8103942678438*^9, 3.810394304156865*^9, 3.8103951268801117`*^9, 
   3.810396164797023*^9, {3.810396505312909*^9, 3.810396555202681*^9}, {
   3.8103978749822607`*^9, 3.810397895766415*^9}, 3.810398888638749*^9, 
   3.810398931174327*^9, 3.810400959534902*^9, 3.810408493159732*^9, 
   3.810446188129653*^9, 3.81045431529989*^9, 3.8105602182478113`*^9, 
   3.810736491266333*^9, 3.81087772007207*^9, 3.810878480711172*^9, 
   3.811514087306121*^9, {3.811522028746595*^9, 3.811522057218382*^9}, 
   3.8115221209126587`*^9, 3.8115278129334517`*^9, 3.811527851873994*^9, 
   3.811527989920226*^9, 3.8115280393157167`*^9, 3.811528124648892*^9, {
   3.8115281678516903`*^9, 3.811528189918352*^9}, 3.81152824814217*^9, 
   3.8115289117922363`*^9, {3.811528957165606*^9, 3.811528974160067*^9}, 
   3.811529011371751*^9, 3.8115291047454777`*^9, 3.8115292445295067`*^9, 
   3.811529282087047*^9, 3.8115293385392942`*^9, 3.8115294258171997`*^9, 
   3.8115294719364347`*^9, 3.8115295404146023`*^9, 3.81152958062633*^9, 
   3.811529671897772*^9, {3.811529707776959*^9, 3.81152973204285*^9}, 
   3.811530499754015*^9, 3.8115306767893353`*^9, {3.8115309906244307`*^9, 
   3.811531006048718*^9}, 3.81153127957295*^9, 3.811531348073501*^9, 
   3.81153138332955*^9, 3.811572360087845*^9, 3.8115727968565407`*^9, 
   3.811572993580405*^9, 3.811573059017458*^9, {3.81157310104049*^9, 
   3.8115731160191107`*^9}, 3.811573199514142*^9, 3.811574726939747*^9, 
   3.811574761180126*^9, {3.811574794945956*^9, 3.811574838894115*^9}, 
   3.8115759816539087`*^9, 3.8115767556003942`*^9, 3.811576950378771*^9, {
   3.8115875918934803`*^9, 3.811587645631768*^9}, {3.811587677139715*^9, 
   3.8115876989577923`*^9}},
 CellLabel->
  "Out[886]=",ExpressionUUID->"149790b0-ce5d-4f10-8c0f-0ce14e8b0d56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListDensityPlot", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", "it", "]"}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"Characters", "[", 
           RowBox[{"files", "[", 
            RowBox[{"[", 
             RowBox[{"whichFiles", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"16", ";;", 
            RowBox[{"-", "6"}]}], "]"}], "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", "1", ",", 
       RowBox[{"Length", "[", "A", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", "plots", "]"}]}], "Input",
 CellChangeTimes->{{3.810390561175123*^9, 3.8103905743637657`*^9}, {
   3.810390607706459*^9, 3.810390617477171*^9}, 3.810390818702232*^9, {
   3.8103919039656353`*^9, 3.810391926648754*^9}, {3.810392042484671*^9, 
   3.8103920474465027`*^9}, {3.810392219164463*^9, 3.810392248715217*^9}, {
   3.810392948512353*^9, 3.810392949362302*^9}, {3.810396516583766*^9, 
   3.810396518331938*^9}, {3.810396559053966*^9, 3.810396561788746*^9}, {
   3.810400397316264*^9, 3.8104004535157537`*^9}, {3.810400797854093*^9, 
   3.8104008613657827`*^9}, {3.8104008948027143`*^9, 3.810400920520214*^9}, {
   3.8104009959739933`*^9, 3.810401023538859*^9}, {3.81040116394839*^9, 
   3.8104011867738867`*^9}},
 CellLabel->
  "In[898]:=",ExpressionUUID->"c433c2a1-e7a1-4265-9857-8aa1b75525d9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{GraphicsBox[
         GraphicsComplexBox[CompressedData["
1:eJyMvXm492O9v63JTsO27cqKpK0BFU1U+AnJVJsKpR1WtJsMRRGJBomKBpI2
pchQ2UVKO6QUIjIUMqRbxshYxtuU23M863Od3/v4nNfxOt7f55/neB3X+3y/
rh9n373uda91We6/d97sfY9fZJFF7njVIov8////Z6+83tseWe53a3/yrKdd
vt/F1/760uVW+fQnrrphkmd07vmtV3v7i/fc4R+Rd/7o939x6y8evX/tUwPv
/IuTLvzVGhv8s+PTvseu+fvvtt7wcesk3vnY935s1W/t+MR1Vgu88wa3PXbE
vAP/ZTJv3pn5xC/V/nnO2/QP5/9opf6fr//5/7H98/Q82fvMV/9+tmn//OHd
52y++ve5e/v3dXHj36U+95v3v2/7wL9f+N3aOdn9iU95kWsHH9jnvpSTT87f
bf5wP/c5m6983LD5x373OSefk9/s537u8zz+vvb6r55x5Reuif97IF/SfGN+
Rrz3ma98xjd49zmbt7/2G9++03j3OZu3v/Yb3+Dpc6Y/8SnjG/vcl3Ly1xnf
jr5u4N3nbL7yGf/Y7z5n8/bZvrOf+7nP8/h5yIffdvIiN/2l89d+83nr+ZTN
Vz7jH7z7nBOfMv5t0fhZ9bk/8d8Jfp/WfIPftZ2T3W++8hn/2Oc+58SnjH9X
7Dzw7kvZfPIZHy9vvPtSNu9s37mf+zyPr3c9tuTxL3597TO+eb7K0/qMb/Du
c078IcFvfFtskZk53n3Oid8i+I1/8Mw705/4lPGNfe5LufL3EPnI/Raoz/2J
Tz7jH/vdl7J5+0z/+i1zP/d5Hj83PvCqozb79tWlz/jH/Ezg077KZ/yDd1/K
yV9n/Fur8bPqc3/i+edpv/m8hefceS3laX3GN/a5zznxZPuNb9zPfc6JTz7j
H/vdl7J5cvKd+7nP8/j5/WW/deheD83r/LXffN4yPxN4n0/rM77Bu8858RsH
v/Htnsa7zznx9te+wfP5Tna/+cpn/GOf+5wTnzK+7dp496VsPvmMj+x3X8rm
nTeW39zPfZ7H1yf+6F1fPvbt2V/7x/xM4H0+rc/4B+++lJO/zvi2QuNn1ef+
xN8T/MY/eM7J7k98yvjGPvelXPn7ffn2/RMG3n0pm08+49/3Gu++lM2Tk+/c
z32ex9dtXrfcZy/6yZ+jv2Q+bz2fsvnKZ3yDd59z4p8Y/Ma/eY13n3Pi7S/n
fN7CM+9Mv/nKZ3xjn/ucE58yvnE/96VsPvmMj+x3X8rmvye/7Tv3c5/n8fWX
F964x/yn1z7jn+erPK3P+AfvvpSTv874t/hFAz+rPvcnfl7wG//gOXemP/Ep
4xv73Jdy5e828o37uS9l88ln/GO/+1I270w/n+/cz32ex8+Zrb+30/N2uKr0
mc9b5mcCn/ZVPuMbvPucE0+23/i2XuPd55x4+2vf4Dl3Xk95Wp/xjX3uS7ny
l4xv3M99KZtPPuMf+92Xsnly8p37uc/z+Lnr7du9d6Pf/qnz137jG/Mzgff5
tD7jH7z7nBOfMr492Hj3pVz5a9/g+fstsvsTnzK+sc99KVf+zsi3PRrvvpTN
J5/x8WN3DLz7UjbvbN+5n/s8j68X7/nSLT/y/Oyv/WN+JvA+n9ZnfIN3X8qV
v/Zvpb0G3n0pJ3/t9y+bb/Cck91vvvIZ39jnPufEp4xvx7f7uS9l88ln/GO/
+1I2b5/tO/dzn+fx9aVP+ftbvvmpK6O/ZD5vPZ+y+cpnfIN3n3PiU8a/GxYb
+Fn1uT/x9pdz/rwJz59vye43X/mMb+xzn3PiU8a36xq/QH3uT3zyGf/Y776U
zTvbd+7nPs/z8z77f+PH6//mz1eUPuMf8+arfZXP/PwOvPtSTv7ab35+55rG
v0t97jdvf+03vsHT50y/+cpnft6Gfe5zNm9/7Tc/b7PtYQPvPmfzlc/8/M02
jXefs/nks33nfu7zPH7etOKu/++O19Q+83nL/Iz4al/lM/7Cu8/ZvP213/h7
fuNn1ed+8/bXfuMbPH6T3W++8hl/2ec+Z/OVz/j2xhcPvPuczVc+499GLxl4
9zmbTz7vr8z93Od5fH39qa9+5bO+dnnnr/3GN+ZnAu/zaX3GP3j3OSf+puA3
/n2q8e5zTvz5wW++3oZn3pl+85XP+Mc+9zknPmX8++TPB36B+tyf+OTz5OeP
2373pWzePtt37uc+z+Prtzd8cPm1/nFZ9Ne+MT8TeJ9P6zP+wbvPOfEp499P
G+++lJO/9hv/4Dl3/qnytD7jG/vcl3Ly137j2082Gnj3OSc++Yx/7Hdfyuad
7Tv3c5/n8fXhK05b5gP/mf21f55POfEp4xu8+1Ku/LV/H7hy4N2XcuWvfYPn
3Jn+xKeMf+xzX8rJX2d8u/XygXdfyuaTz/j3t8a7L2XzzvTz/X3u5z7P4+sW
7//kvx/0/T+WPuMb8zOBT/sqn/EN3n0pV/7av8MbP6s+9yfe/nLO1xvwk5+X
Vj5ceVqf8Y197nNOfMr4tkzj3Zey+eQz/rHffSmbx2f7TuZ+7vM8fp50/9pP
/vkTen/tN19vMD8TeJ9P6zO+wbvPOfFbBL/x7S3zB35Wfe5PvP21b/CcO9Nv
vvIZ39jnPufEp4xvmzbefSmbTz7jI/vdl7J5+7yFMvdzn+fx9en7PX7B9dtc
Gv21f8zPBN7n0/qMf/DuS7ny1/7t23j3OSfe/to/eM6d91We1md8Y5/7Uq78
PUm+7bfvwPP9Hfa5P/HJZ3xkv/tSNm+f7Tv3c5/n8XX7Z55z71N+eUn0l8zn
LfMzgff5tD7jH7z7nBOfMr6t9qyBd1/Klb/2DZ5zZ/oTnzK+sc99KSd/7Te+
nfaMgXefc+KTz/h4auPdl7J5Z/rxm/u5z/P4+ttjPn/rKs/O/to35pcKPNl8
5TO+wbvPOfEp49tOjZ9Vn/sTb3855+sNeL6/SXa/+cpn/GOf+5wTnzK+3dn4
Bepzf+KTz/jHfvelbB6f7TuZ+7nP8/j6/FXedO3WH72489d+4xvzM4Enm698
xjd49zkn/rfBb3yDd59z4ncKfuMfvPucE58yvsG7L+Xkr/3GN3j3OSc++YyP
8O5L2bx9tu/wzp7H10f2XeoHTz3qD52/9hv/mJ8JvM+n9Rn/4N2X8rQ+49/x
jZ9Vn/sTnzKft/CcOx+vPK3P+Mc+9zknPuXJz9s03n0pT+vz5Od3Gu++lJPP
yW/u5z7P4+tPjzni67Pv/H30l8znLfMzgff5tD7jG7z7nBP/SPAb35557MC7
zznx9te+wfP5Tna/+cpnfGOf+5wTnzK+Ldl496VsPvmMf8/47sC7L2Xz5OQ7
93Of5/n6ZKezXvCZE5e4KPpL5r0p5s07m6985ud34N3nbL7ymZ+3+XPj3eds
3v7ab37eBp4+Z/rNVz7z5032uc/ZfOUzP2/zp98MvPuczVc+8/M77Hefs3n7
nHznfu7zPL6vcP1xH3zc+ReUPuOb58nVvspnfIN3n7P5ymf8vanx7nM2b3/t
N5+38JPfF1am33zlM76xz33O5iuf8Y37uc/ZfOXz5OdvGu8+Z/PJZ/rJ3M99
nsfXax9b+b823+f86C+Zrzc8n7L5ymf8g3efc+JTnnz/fpGXzfGz6nN/4m8K
fuMfPOfO9Cc+Zfxjn/tSTv464x/3c1/K5pPP+Md+96Vs3tm+cz/3eR5fD132
p2/47hq/K33GN+ZnAp/2VT7jG7z7nBNPtt/4dsrzBn5Wfe5PvP21b/CcO9Of
+JTxjX3uS7nyl4xvpzbefSmbTz5Pvn/ZePelbN7ZvnM/93keP9/yutVe/sA9
53b+2m/8Y34m8D6f1mf8g3dfypW/9u8/1hp49zkn3v7aN3h+v4vs/sSnjG/s
c1/Klb+HyrflGu++lM0nn/Fv2bUH3n0pm3e279zPfZ7H1ydvffrSb/zhb6O/
ZD5vmZ8JvM+n9Rn/4N3nnPiU8e0LswPvvpSTv/Yb3+CZd6Y/8SnjG/vcl3Ll
71vkG/dzX8rmk8/4x373pWzePtt37uc+z+Prr/dcd9HD33NO9Ne+Mb9U4Mnm
K5/xDd59zolPefJ+W+Nn1ef+xPPP037z/RZ4vr9Ddr/5ymd8Y5/7nBOfMr7d
vdfAuy9l88ln/GO/+1I272zfuZ/7PI+ve3zj3LvveM7Znb/2G988n7L5ymd8
g3efc+J/HfzGt60a7z7nxN8T/MY/eM7J7k98yvjGPvelXPlLxrctvznw7kvZ
fPIZ/9jvvpTNO9t37uc+z+PrK07d+C9rXXZW6TP+eb7K0/qMf/DuSzn564x/
55wy8LPqc3/i7a99g+ec7P7Ep4xv7HNfypW/ZHz7TePdl7L55DP+nXnawLsv
ZfPO9PP9Ue7nPs/j5y1XXHLeQV86s/SZz1vmZwKf9lU+4xu8+5wTT7bfk/dL
rhx49zkn3v5yztcb8Mw702++8hnf2Oc+58SnjG8vuWrg3Zey+eQz/rHffSmb
x+fkO/dzn+fx8zv3b/F/N6x3Ruev/cY35mcC7/NpfcY/ePc5Jz5l/Pufxrsv
5eSv/cY/eM6d/0d5Wp/xjX3uS7nyl4xvX3tg4N2XsvnkMz6y330pm3e279zP
fZ7H1xNXPHXt7R8+Pfpr35hfKvBk85XP+AbvPufEpzz5eZsXD7z7Uq78tW/w
nDvTn/iU8Y197ku58peMbwtWGHj3pWw++Yx/7Hdfyuad6efne7if+zyPvy98
/1lLPn3HX3T+2m/8Y958ytP6zM8bwLsv5cpfMj9v8MIPDPy71Od+88lfzvl5
A/hJn3PrN1/5zM8bsM99zuYrn/l5gxXeN/DuczZf+czXH+x3n7N5+5x8537u
8/zk77uOufDOH887tfR58vdNbd58ta/yefL3V413X8rJX/s9eW/huwM/qz73
m7e/9nvy902Nn/z9ljL95iufJ3/f1Pa5z9l85TO+HXPUwLvP2XzlM36y333O
5u2zfZ/8/Va7n/s8P/l+//VXnP22jU8ufcY3z1d5Wp8n329vvPtSTv7ab/z7
8A0D7z7nxOOv/Z58v73xk+/vK9Of+JQn329v+9yXcvLXGf92u2bg3Zey+eQz
/rHffSmbd6afz3fu5z7PT74/uez1hz/4y5+WPk++39jmZwKf9lU+T77f2Hj3
OSc+ZXxbe7mBd1/Klb/2DZ5zZ/oTn/Lk+41tn/tSrvwl49tGzxl496VsPvmM
f+s+b+Ddl7J5sn0ncz/3eX7y/Z6tbt/lWyv/pPPXfk++36L5lM1XPk++39J4
9zknPmV8e9bWAz+rPvcn3v5yzvcb4fn+Jtn95iufJ99vafvc55z4lPGN+7kv
ZfPJZ3xkv/tSNm+f7Tv3c5/nJ3/efdXtX9t7zRNKn/HN81We1ufJnzcb7z7n
xJPtN779/pUD7z7nxPPP035P/rzZ+Mmfb5XpN1/5PPnzZtvnPufEp4xv3G+B
+tyf+OQzPrLffSmbd6Z/8ufbdj/3eR4/Dzrhsdef99zjSp/xzfNVntZn/IN3
n3PiU578/vqJAz+rPvcnnn+e9hv/4Dl3pj/xKeMb+9yXcvLXfuPbrj8cePc5
Jz75jH/sd1/K5snJd+7nPs/j584rPvOuxR87uvQZ/zxf5Wl9xjd496Wc/LXf
+PbvLx549zkn3v5yzuctPJ/vZPebr3zGP/a5zznxKePbs1808O5L2XzyefL+
zsoD776UzTvTj9/cz32en/x91wabrnniGYeXPk/+vqnNzwQ+7at8nvx9U+Pd
55z4lPFt5/UH3n0pJ3/tN/7BT/5+S5n+xKc8+fumts99KVf+kvHtvZsMvPtS
Np98xj/2uy9l8/icfOd+7vM8fm6z5p6HrfXZr3b+2m9883zK5iuf8Q3efc6J
Txn/frTOwLsv5eSv/ebzFp5zZ/rNVz7jG/vc55z4lPGN+7kvZfPJZ3xkv/tS
Nu9s37mf+zyPr3uf96VLXzvzydJnfPN8laf1Gd/g3eec+JTx7Zo/DPys+tyf
ePtr/+A5d6Y/8SnjG/vcl3LlLxnfuJ/7UjaffMY/9rsvZfPO9PP5zv3c53n8
XOTMIz7+rNM/sHblM755vsrT+oxv8O5zTjzZfuPbJp8bePc5J97+2jd4zp3p
T3zK+MY+96Vc+UvGtwfOGXj3pWw++Yx/x24w8O5L2Tw5+c793Od5/Dzj7Gd9
b/kdDih9xj/PV3lan/EP3n0pJ3+dJz7+YuDdl3Llr32D5/cbye5PfMr4xj73
pVz5S558v/GHA+++lM0nnyffv2z73ZeyeXxOvnM/93l+8vX+HdfP/+wuh5Y+
T77e1nyVp/V58vV2493nnPiU8e31Nwy8+1JO/trvyc9bNn7y9b0y/YlPefL1
dtvnvpQrf8n4xv34+R72uT/xyWf8Y7/7UjbvbN+5n/s8j58f3mvrTR6+8jul
z/jm+SpP6zO+wbvPOfEp49/ujZ9Vn/sTzz9P+82fN+H5/g7Z/eYrn/GNfe5z
TjzZfuPbJz428O5zTnzyGf/Y776UzTvbd+7nPs/j54GLbHTkSfO/W/qMb56v
8rQ+4xu8+5wT/+HgN75d8riBd59z4ncPfuMfPOdk9yc+Zfxjn/tSTv4649uV
j244x7svZfPJZ/xjv/tSNu9MPz8fyv3c5/nJ38/ut8rdOzzrh6XPk5+313yV
p/V58vetjXefc+JTxr9X7Tvw7ku58te+wXNOdn/iU578/W3b576UK3/J+Pa6
Twy8+1I2n3zGP/a7L2Xz5OQ793Of5/Fzu/0OPGqJpX9c+ox/nq/ytD7jG7z7
Uq78tX8bNN59KVf+cs7XG/DMO9NvvvIZ39jnPufEp4xvG39m4Beoz/2JTz7j
I/vdl7J5Z/vO/dznefx8cMP9zv/Q/55U+sznreerPK3P+AbvPufEp4x/H9tg
4N2XcvLXfuMfPOfO9Cc+ZXxjn/tSTv7ab3z7+HoD7z7nxCef8Y/97kvZvDP9
fL5zP/d5Hj8//5S97v3daj8rfcY3z1d5Wp/xDd59zolPGd+OXWzg3Zdy5a99
g+fcmf7Ep4x/7HNfyslfZ3w7+qkD776UzSef8Y/97kvZPNm+8/197uc+z+Pn
Ehd9eJnlzzul9Bn/mJ8JfNpX+czvG8K7L+XKXzLfb9zhgoF3n7P55C/n/L4h
PH3O9JuvfMY39rnPOfEp8/uG3M99KcNXPuPfzucOvPuczdtn+85+7uc+z09+
P/HA96+/zztO6/y133zeej5l85XPk99fbLz7nM1XPuPb478y8O5zNm9/7ffk
9w0bP/n9RmX6zVc+T37fsO1zn3PiU8a3R7868O5LGb7yGX/Z7z5n8/bZvuM3
93Of5/F1xc223umam39Z+oxvnq/ytD7jH7z7nBOfMv69YtOBd1/KyV/7jX/w
nDvTn/iU8Y197ku58pc8eW/n7QPP9/fZ5/7EJ5/xkf/3uy9l8+TkO/dzn+fx
85RnbnboGrv/uvQZ/5ifCXzaV/mMb/DuS7ny1/5t++8D776UK3/tGzznzvQn
PmV8Y5/7Uk7+2m98m228+5wTn3zGR/a7L2Xz/PO37/jN/dznefw89vYXbHvB
48/s/LXf+Ob5lBOfMr7Buy/lyl/7d07jZ9Xn/sTbX875fiM8398ku9985TP+
sc99zolPGd+43wL1uT/xyWf8Y7/7UjZPtu9k7uc+z+Pr7Rce8dGPv+ms0me+
3vB8laf1Gd/g3eec+GOD3/i29UUD7z7nxJ8T/MY3eOad6Tdf+Yxv7HOfc+KP
DX7jG/dzn3Pik8/4yH73pWzePtt37uc+z+Pnqj9aav8VDv5N6TO+eb7K0/qM
f/Duc058yvh33wkDP6s+9yeef572G9/g8ZvsfvOVz/jHPvc5Jz5lfLu38e5L
2XzyGR/Z776UzTvTj9/cz32ex89PHHjIty+/6uzSZ/zzfJWn9Rnf4N2XcvLX
fuPbFxvvPufE46/9xj94zsnuT3zK+MY+96Vc+buqfPvSVwbefSmbTz7jH/vd
l7J5cvKd+7nP8/j5mw8vftJnl/tt6TOft8zPBD7tq3zGP3j3OSc+Zfx7QePd
l3Llr32DZ96Z/sSnjG/sc1/Klb9kfON+7kvZfPIZH9nvvpTNO9t37uc+z+Pn
0zY74Lev3P7czl/7jW+eT9l85TO+wbvPOfEp499pmw68+1JO/tpvvt6A59yZ
fvOVz/jGPvc5Jz5lfON+7kvZfPIZ/9jvvpTNO9t37uc+z+Pr5qs8ad61Pz6v
9BnfPF/laX3GN3j3OSc+ZXzb7FUDP6s+9yfe/to/eM6d6U98yvjGPvelXPlL
xrdNG+++lM0nn/GP/e5L2byzfed+7vM8fh7+zL3/8eUHf1f6jH+er/K0PuMb
vPtSTv7ab3y79RkD7z7nxNtf+wbPuTP9iU8Z39jnvpQrfzeXb7c03n0pm08+
499t/z7w7kvZvLN9537u8zx+3nj/w09Yc50LSp/5vPV8laf1Gf/g3eec+JTx
7TP3Dbz7Uq78tW/w/HwD2f2JTxnf2Oe+lCt/D5dv3M99KZtPPuMf+92Xsnn7
bN+5n/s8j58rXbnbs2/7/IWlz/jH/Ezg077KZ3yDd1/Klb/279lXDLz7Uk7+
2m98g2femf7Ep4xv7HNfypW/ZHzjfu5L2XzyGf/Y776UzTvbd+7nPs/j566n
3rXSYX+4qPPXfuOb51NOfMr4Bu++lCt/7d8JjZ9Vn/sTzz9P+82fN+H5/g7Z
/eYrn/GNfe5zTnzK+HbiKQPvvpTNJ58nv3/S9rsvZfPO9p37uc/z+PqLb+z4
+g1m/lD6zNcbnq/ytD7jG7z7nBO/a/Ab39b75sC7zznxJwS/8Q+ec7L7E58y
vrHPfSlX/pLxbf3Guy9l88ln/Nvo0IF3X8rmne0793Of5/Fzn9fd+5I9X35x
6TO+eb7K0/qMf/Duc058yvi3U+Nn1ef+xNtf+wbPvDP9iU8Z39jnvpQrf38h
37jfAvW5P/HJZ/zbec2Bd1/K5u2zfed+7vM8fi7/o1e8etM/1j7jn+erPK3P
+AbvvpSTv/Yb/1ZvvPucE79T8JuvN+A5d15deVqf8Y197nNO/D7Bb3zjfu5z
TnzyGf/+3wkD776Uzdtn+8793Od5/Dx/2Z3WXvFjl5Q+83nL/Ezg077KZ/yD
d59z4lPGt8813n0pV/7aP3jOnT+nPK3P+Mc+96Wc/HXGtyc9b+Ddl7L55DP+
Ldp496Vs3j7bd+7nPs/j54cO/OEbH1v60s5f+41vnk/ZfOUzvsG7zznxKePb
po13X8qVv/YNnnPnTZWn9Rnf2Oe+lCt/z5ePl35l4N2XsvnkM/5d3Hj3pWze
PtPPz/dwP/d5fvL7jovcuvkVv6p9nvy+oearPK3P+AbvvpQrf+3ftx+7ZY6f
VZ/7E29/OefrDXjOnek3X/k8+X3Dts99zolPGd+4n/tSNp98xr9vNd59KZvH
Z/tO5n7u8zx+/uzDy7/rhP/+Y+kzn7eer/K0PuMbvPucE0+235P3RhrvPufE
21/7Bs+583bK0/qMb+xzn3PiU8Y37ue+lM0nn/HxAx8ZePelbN4+23fu5z7P
4+eW179nu30Xvaz0Gd88X+VpfcY/ePc5Jz5lfPu/6wbefSlX/to/eM6d6U98
yvjGPvelXPn7M/m2auPdl7L55DM+st99KZvHZ/uO39zPfZ7HzwWbHrXLVj+o
fcY/5mcCn/ZVPuMbvPtSrvy1f3s33n0pV/7aN3jOnfdWntZnfGOf+1Ku/N1S
vj3WePelbD75jH/sd1/K5sn2ncz93Od5/DzqrGs+8ao3X975a7/xzfMpJz5l
fIN3X8qVv/bvgsbPqs/9ibe/nPP1Bjzf3ye733zlM76xz33OiU8Z37if+1I2
n3zGR/a7L2Xz9tm+cz/3eR5f11tlmc8vdk/tM74xPxP4tK/ymfd24N2XcvLX
fvPzNss13n3O5u2v/ea9HXj6nOk3X/mMb+xzn3PiU+a9He7nvpSPmtJn3t95
/qsG3n3O5u2zfWc/93Of5/HzpmPe+dXrvn5F56/9xjfPp5z4lPEX3n0pJ3+d
8feGxs+qz/3m7a/9xjd4/Ca733zlM76xz33OiU8Z39597MC7L+X1gr/O+Pee
xrvP2bx9tu/s537u8zy+HvDMQw8/ZfUrS5/xjfmZwKd9lc/4B+++lJO/9nvy
8zuNd59z4m8IfuMfPOdk9yc+ZXxjn/tSrvy9ST6+rPHuS9l88hkf2e++lM2/
R37bd+7nPs/j58v2u+y7X/lL76/95vstzM8E3ufT+ox/8O5zTnzK+PfQvgPv
vpQrf+0bPPPO9Cc+ZXxjn/tSrvw9QL5xP/elbD75jH/sd1/K5p0739v93Od5
fL3k/iV+/L7P/Cn6a988n7L5ymd8g3efc+JTnrzf03j3pZz8td/8eROec+dz
lKf1Gd/Y5z7nxKeMb9zPfSmbTz7jH/vdl7J5Z/vO/dzneXzd7f1vOW3NF11V
+ox/nq/ytD7jG7z7Uq78tX9LNH5Wfe5PvP21f/CcOy+hPK3P+MY+96Vc+XuJ
fDuo8e5L2XzyGf8Oft/Auy9l88708/0d7uc+z+PnUld+6exn/K72mc9bz1d5
Wp/xDd59zonfLfiNb1dfMfDuc068/bVv8Jw705/4lPGNfe5LufJ3N/k22+7n
vpTNJ5/xj/3uS9k8PiffuZ/7PI+fv9rw/N/f9sE/lz7jG/MzgU/7Kp/xD959
zolPGd9WbLz7Uq785Zzvt8Dz/R2y+81XPuMb+9znnPiU8Y37uS9l88lnfGS/
+1I272zfuZ/7PI+f7z71X64689/mdf7ab/xjfibwPp/WZ3yDd1/Klb/2775T
Bt59KSd/7Te+wTPvTL/5ymd8Y5/7nBOfMr5xP953Zp/7E598xj/2uy9l8872
nfu5z/P4uuiL17/xsP/L/to3z6ec+JTxDd59KVf+2r+1Gj+rPvcnnn+e9ps/
b8Lz/R2y+81XPuMb+9znnHiy/ca3XzXefc6JTz7j369XHHj3pWze2b5zP/d5
Hl9/8I197tz5v64ufebrDc9XeVqf8Q3efc6JXzT4jW9fbLz7nBO/VvAb/+A5
J7s/8SnjH/vcl3Ly1xnfuJ/7UjaffMa/Lx028O5L2bx9pp+/3+J+7vM8fr75
KWc8sME/a5/xzfNVntZn/IN3n3PiU8a/LRo/qz73J97+2jd45p3pT3zK+MY+
96Vc+fsD+cb93Jey+eQz/r1jsYF3X8rm8Tn5zv3c53n8vHvPRx+37Hf+UvqM
f8zPBD7tq3zGN3j3pZz8td/4d3Tj3eec+C2C33y9Ac+589HK0/qMb+xzn3Pi
U8a35fYa+AXqc3/ik8/4+ILGuy9l8/icfOd+7vM8fn799jWedv8brun8td98
3jI/E3ifT+sz/sG7zznxKU9+36rx7ku58tf+wXPu/CHlaX3GN/a5L+Xkr/3G
tzsb7z7nxCef8e/vtw28+1I2b5/p5/Od+7nP8/i6+tZ7LHnh37K/9s3zKZuv
fMY3ePc5Jz7lye+vN959KVf+2jd496U8rc/4B+++lJO/zvj2860G3n0pm08+
49+pjXdfyubx2b7z/X3u5z7P4+tfLvzZfxzzxWtLn/HP81We1md8g3dfytP6
jG/7NX5Wfe5PfMp8vQHPufN+ytP6jG/sc59z4lPGN+7nvpTNJ5/xcd+LBt59
KZvH5+Q793Of5/HzzCM+/qzTZ64rfebz1vNVntZnfIN3n3Pi/xL8xrfjGu8+
58TbX/sGz7nzccrT+oxv7HOfc+JTxjfu576UzSef8ZH97kvZPD7bd/zmfu7z
PH4+4x2HffO47Wuf8Y35mcCnfZXP+AfvPufEp4xvv99i4N2XcuWv/YPn3Jn+
xKeMb+xzX8qVv2fKt39tPN/fZ5/7E598xj/2uy9l8+TkO/dzn+fx832Ln/K8
Q37R+2u/8Y/5mcD7fFqf8Q3efSlX/tq/VRvvvpQrf+0bPOfOqypP6zO+sc99
KSd/7ffk75v+deDd55z45DM+frTx7kvZvPMz5Df3c5/n8fXkcy8/9tNPvz76
a988n3LiU8Y3ePelXPlr/65q/Kz63J94+8s5X2/A8/19svvNVz7jH/vc55z4
lPGN+y1Qn/sTn3zGP/a7L2Xz+GzfydzPfZ7H18X2vu/FO25T+8zXG56v8rQ+
4xu8+5wTf3LwG98e+/TAu8858VcFv/ENnnln+s1XPuMb+9znnPiTg9/4tnbj
3eec+OQzPrLffSmbt8/2nfu5z/P4udVqzzhxi5/UPuOb56s8rc/4B+8+58Sn
PPm8bbz7Uk7+2m98g8dvsvvNVz7jH/vc55z4lPHtu413X8rmk8/4+KLGuy9l
886LyW/u5z7P4+fxd71y1XWfcEPpM/4xPxP4tK/yGd/g3Zdy5a/9+2Lj3Zdy
8td+4x8852T3Jz5lfGOf+1Ku/N1KvnE/96VsPvmMf+x3X8rm8Tn5zv3c53n8
fOy4t/585bf3/tpvPm+Znwm8z6f1Gd/g3eec+JQnf9/aePelXPlr3+An//dC
mf7Ep4xv7HNfypW/x8s37ue+lM0nnyd//9p496Vs3tm+cz/3eR5f3/rundda
6vvZX/vm+ZTNVz7jG7z7nBOfMv7NNN59KSd/7Tdfb8Bz7jyjPK3P+MY+9zkn
PuXJz9s03n0pm08+4x/73ZeyeWf7zv3c53l8PXqpr/zmiQ/VPuOf56s8rc/4
Bu++lCt/7d8nGj+rPvcn3v7aP/jJzwspf0J5Wp/xjX3uS7ny963y7ZeNd1/K
5pPP+Pe6xrsvZfPO9p37uc/z+HnfJcdvdNebbix9xjfPV3lan3lvCt59KSd/
7Te/b3V1493nbD75yzm/bwVPnzP95iuf8Y197nNOfMq8N7XMpQPP9/fZ537z
lc/8/A373edsPvls37mf+zw/ee/tgAsumvet2ufJe2ttfibwaV/lM/7Cuy/l
5K8zvj258e5zNm9/7ffkvbXGT953a9n9iU8Z39jnvpSTv/Yb37if+5zNVz7j
H/vd52w++Uw/mfu5z/P4eei6t2127t97f+03vjE/E3ifT+sz/sG7L+XkrzP+
7dR496Vc+cs5n7fwzDvTb77yGf/Y5z7nxKeMf9zPfSmbTz7jH/vdl7J5Z/vO
/dzneXy95eEn/+mkdf4a/SXz503Pp2y+8hnf4N3nnPiUJz9v8MjAuy/l5K/9
5s+b8Hx/h+x+85XP+MY+9zknPmV8u6zx7kvZfPIZ/97WePelbN7ZvnM/93ke
X9f46QqzRxxc+4x/nq/ytD7jG7z7Uq78tX+rN959KSd/7Tf+wXNOdn/iU8Y3
9rkv5crfW+Qb93NfyuaTz/h32kkD776Uzdtn+8793Od5/PzyjhvcsP9fa5/5
vGV+JvBpX+UzvsG7zznxKePfkY2fVZ/7E29/7Rs88870Jz5lfGOf+1Ku/F1D
vnG/Bepzf+KTz/j3H413X8rm7bN9537u8zx+XvuC931gt9fc1Plrv/GP+ZnA
+3xan/EN3n0pJ3/t9+T9wsa7zznxRwa/+XoDnnPnc5Sn9Rnf2Oc+58R/OfiN
b0964cC7zznxyWf826/x7kvZvH2279zPfZ7H11de/dk7tv1C9pfM5y3zM4H3
+bQ+4x+8+5wTnzK+vbTx7ku58tf+wXPu/FLlaX3GP/a5L+XkrzO+3T5v4N2X
svnkM/59sO13X8rm7bN9537u8zy+7nPI0R/Z+M/ZX/vm+ZTNVz7jG7z7nBOf
Mr5t2nj3pVz5y/nkv7feeL6+IbvffOUzvrHPfc6JTxnfuJ/7UjaffMa/ixvv
vpTN22f6+fke7uc+z+Pr5RufOf+1K91c+ox/nq/ytD7jG7z7Uq78tX8nN35W
fe5P/KbBb/yDZ96Z/sSnjG/sc1/Klb/7yDfu576UzSef8e81mwy8+1I2j8/2
ncz93Od5/FzhSdft9YJP1T7zecv8TODTvspnfIN3n3PiLw9+49/VTxx49zkn
/uTgN5+38Jw702++8hnf2Oc+58SnjG/LNJ6/32Kf+xOffMZH9rsvZfP22b5z
P/d5Hj/3OH3BIotf3Ptrv/GN+ZnA+3xan/EP3n3OiU8Z39ZtvPtSrvy1f/Cc
O6+rPK3P+MY+96Wc/LXf+LZP493nnPjkMz6y330pm3deQX5zP/d5Hl8v2O25
n3t4ub9Ff+0f8zOB9/m0PuMbvPtSrvy1f9s13n0pV/7aN3jOnbdTntZn/GOf
+1JO/jrjG/dzX8rmk8/497fGuy9l82T7TuZ+7vM8vi7zsjWfevOu2V8yn7ee
T9l85TO+wbvPOfEp49smjXdfypW/nPP1Bjxf35Pdb77yGd/Y5z7nxKeMb9zP
fSmbTz7jI/vdl7J5+2zfuZ/7PI+vO9285UGXnFP7jH+er/K0PuMbvPtSrvy1
f7s23n0pJ3/tN77BT35eQpl+85XP+MY+9zknPmV8+2njF6jP/YlPPuPjqo13
X8rmnZeR39zPfZ7HzzPm3kO5pfSZz1vmZwKf9lU+4xu8+5wTn/Lk99cbP6s+
9yd+1+A3vsHjN9n95iuf8Y197nNO/E7Bb3z7RuPd55z45DP+sd99KZvH5+Q7
93Of58fv/fT+2u/xezsLz837fFqfx+/t9H0pJ3/t9+T3rbYYePc5J/6q4Df+
wXNOdn/iUx6/39P3pZz8dcY37ue+lM0nnye/f9X2uy9l8872nfu5z/Pj936y
v2Q+b5mfCbzPp/V5/N5O3+ec+JTH7+30fSlX/to3ePc5Jz7l8Xs7fV/Klb9k
fIN3X8rmk8/4B+++lM0723f4lP15/bO591Bujf7aN8+nbL7yGd/g3eec+JQn
v7/eePelPK3PfL0Bz7nzF5Wn9Rnf2Oc+58SnjG/nN959KU/rM/79Z+Pdl3Ll
szP3c5/n8fXJc++h1D7jn+erPK3P+AbvvpQrf+3fXZ8e+Fn1uT/x9tf+wU9+
X0aZ/sSnjG/sc1/Klb8/k28/afdzX8rmk8/4x373pWzePtPP1/fcz32ex88t
595DqX3m85b5mcCnfZXP+AbvPufEk+03vi3ZePc5J97+2jd4zp2XVJ7WZ3xj
n/tSrvwl4xv3c1/K5pPP+Md+96Vsnpx8537u8zx+njD3Hsptnb/2G9+Ynwm8
z6f1Gf/g3eec+JQnv7/eePelXPnLOb9vCM/vN5Ldb77yGd/Y5z7nxKeMb9zP
fSmbTz7jI/vdl7J5Z/vO/dzn+fF7P9lf+8f8TOB9Pq3P4/d2+r6UK3/t39GN
d1/KyV/7jW/w4/d9+n7zlc/j93b6PufEp4xvNzSen29gn/sTn3zGP/a7L2Xz
zvad+7nP8/i66dx7KNlf++b5lBOfMr7Buy/lyl/7t2HjZ9Xn/sQfHfzmz5vw
fH+H7H7zlc/4xj73OSf+seA3vnE/9zknPvmMf+dtO/DuS9m8s33nfu7z/Ph9
ntpnvt7wfJWn9Rnf4N3nnPhNg9/4dkLj3eec+A2D3/gHzznZ/YlPefzeTt+X
cvLXGd+4n/tSNp98xr+XNd59KZu3z/TzPgr3c5/nx+/z3F76PH5v5/a1lwp8
2lf5PH5v5/auz9l85TNfb5zRePc5m0/+cj5+b+d2ve9ze9dvvvIZ39jnPufE
p8x7O9xv/L7P7V2/+cpn/Fz70oF3n7N5+5x8537u8zx+rj/3Hkrvr/3GP+Zn
Ak9OfMr4Bu++lJO/zpPfX2+8+5zN21/7zdcb8PQ502++8hnf2Oc+58TfF/zG
t483foH63G++8hk/H9p/4N3nbN4+23cy93Of58fv/fT+2m8+b5mfCbzPp/V5
/N5O3+ec+JQnv7/eePelnPy13+P3dhaeOx+pPK3P4/d2+r6Uk7/2G/+2abz7
nBOffMa/614/8O5L2bx9pp//fXA/93keX2+dew/ljuivffN8yuYrn/EN3n3O
iU958vvrjXdfypW/nPP1Bjxf35Ddb77yGf/Y5z7nxKeMb9zPfSmbTz5P3l97
ZODdl7J5fLbvfH+f+7nP8+P3eWqf8Y/5mcCnfZXP4/d2+r6UK3/t30saP6s+
9yf+nOD3+L2dhfPO9Cc+5fF7O31fypW/t8o37ue+lM0nn/GR/e5L2Tw+J9+5
n/s8P37vp/fXfvN5y/xM4H0+rc/j93v6PufErxH8xr+3Nt59zol/SfCbz1v4
8fs+fb/5yufx+z19n3PiU8a3gxrvvpTNJ5/xkf3uS9m88xrym/u5z/Pj937u
jP7aN+ZnAu/zaX0ev7dzZ9fnnPiUJ7+/3nj3pVz5a//gx+/73Nn1Jz7l8Xs7
d3Z9KVf+flm+7d54/nzLPvcnPvmMf/Mb776UzZOT79zPfZ7H11fMvYeS/bV/
zM8E3ufT+oxv8O5LufLX/l09b+Ddl3Llr32D5/s7ZPcnPmV8Y5/7Uk7+2m98
437uc0588hkft2q8+1I2P1/5WvnN/dzn+fH7PNlfMp+3nk/ZfOXz+L2dvs85
8Snj22ca776Uk7/2e/zezsJ5Z/rNVz6P39vp+5wTnzK+ndn4Bepzf+KTz/jH
fvelbB6f7fv4fZ++z/N8f/7KufdQ/l76jG/Mm6/2VT7z/XZ49zmbr3zGt9sa
7z5n8/bXfuMfPOdk9yc+ZT5v2ee+lJO/9hvfuB/z7HN/4pPPfP+F/e5L+czC
Z/vO/dzn+fF7P7XP+Mf8jPhqX+Uz/sG7L+XkrzP+/WvjZ9Xn/sTbX875+yZ4
5p3pN1/5PH6/p+9zNm9/7Td/37RJ48fv+/T95iuf8ZH97nNOPDn5zv3c53n8
3HPuPZTeX/uNb8ybd058yvgG776Uk7/2G/92afys+tyf+H8NfvP1Bjx+k91v
vvIZH9nnPmfz9td+49tJjWeefe43X/mMj6s03n3OiXe279zPfZ7H9wvn3kP5
R+kzvjFvvtpX+Yx/8O5LufLX/n278e5zTvwuwW98g2femX7zlc/4yD73OZu3
v/Yb37gf8+xzv/nKZ/xjv/ucE2+f7Tv3c5/n8fW5c++h1D7jG/MzgU/7Kp/x
D959KSd/nfHvSY13X8rJX/uNf/CcOz9JeVqf8Y197ks5+Wu/8Y/7uc858cln
/GO/+1I272zfuZ/7PM/n885z76H0/tpvfGPevHPiU8Y3ePelXPlr/97VePel
XPlr3+A5d36X8rQ+4xv73Jdy8teZz1vuxzn73G++8hn/2O8+58Q708/X99zP
fZ7H923/8MsDrnnqXaXP+Ma8+Wpf5TO+wbsv5cpf+/emxrsv5cpfzk9vvsFz
7vwm5Wl9xjf2uc/ZfPJ3Z/m2Q+OZZ5/7zVc+499LG+8+58STk+/cz32ex8/9
X7rxJpetWvuMb54nV/sqn/EN3n0pV/7av10bP6s+9yfe/to3+N3bOdn95iuf
8ZF97nM2b3/tN75t3njm2ed+85XP+Mh+9zkn/qXK9p37uc/z+HnS5+ctfv5s
9te+MW8+5Wl9xjd496Wc/LXf+HZw42fV5/7E7xr8xj945p3pT3zK+Mg+96Wc
/LXf+Mb9mGef+81XPuMf+93nnHhn+8793Od5fJ934w6X/vpztc/4xrz5al/l
M/7Buy/lyl/7d0Xj3eec+IOD33y/HZ7v75Ddb77yGR/Z5z5n8/bXfuPb/MYz
zz73m698xr9TGu8+58Q723fu5z7P4+cT13n4kJ+dWPuMb54nV/sqn/EP3n0p
J3+d8W3pxrsv5eSv/cY3eM7J7jdf+YyP7HOfs3n7a7/x7eG1B959Kc+b0mf8
O63td59z4u2zfed+7vM8fq78rf3f8cM/ZX/Jf2y+eZ7sfeYrn/EN3n3OiU95
4l/j3Zdy5S/nfL8dnnOy+81XPuMv+9znbL7yGd+4H+fsc7/5yueJf4cPvPuc
E2+f7Tv3c5/n8XeLB5+99FGPuzv+78G+MT8j3vvMVz7jG7z7nBOfMv79d+O3
UZ/7E29/7R8852T3Jz5lfGOf+1Ku/F1ZvnE/96W8cvDXGf+e33j3OSfePtt3
7uc+z+P7p9923NX/85LeX/uNf8ybd058yvgG776Uk7/2e/L9y8a7zznx9te+
wTPvTH/iU8Zf9rkv5crfLeTbpxrvPmfzlc/4x373OSfePtPP9ze5n/s8j+/H
/fi1R35p89pnPm+ZN1/tq3zGP3j3OSc+Zfz7QePdl3Ly137z9QY8584/UJ7W
Z3xjn/uczVc+49sBjXefs/nKZ/x7U+Pd55x4cvKd+7nP8/h5ydPOffc+n6h9
xjfPk6t9lc/4Bu8+58SnjG9nNX5Wfe5PvP21f/B8f5Ps/sSnjG/sc1/KyV9n
fDu68e5zNl/5jI83NN59zol/k/Jx8pv7uc/z+Pnwdlu8cI/vZn/tH/PmU57W
Z3yDd1/KyV/7jW93N959zok/K/jN3zfBM+9Mv/nKZ3xjn/uczVc+4xv345x9
7jdf+Yx/r9x+4N3nnHh8tu9k7uc+z+P7C8+56eYP/b72Gd+YN1/tq3zGP3j3
pZz8dca/5Rs/qz73J/7u4Ddfb8Bz7ry88rQ+4xv73OdsPvn7sHxbv/HMs8/9
5iuf8XHRxrvPOfH22b5zP/d5Hj83Xm63/33PA7XP+Ma8+Wpf5TO+wbsv5eSv
/ca31RvvPufE21/O+byF59x5deVpfcZH9rnP2bz9td/49s7GM88+95uvfMZH
9rvPOfGLKtt37uc+z+Pnbp984gff+R/3lD7jG/Pmq32Vz/gH776Uk7/O+LZ9
42fV5/7E21/7Bs/3d8juN1/5jI/sc5+zeftrv/GN+7kv5Y2n9Bn/2O8+58Q7
23fu5z7P4+cRV33tZW95Y+0zvjE/I77aV/mMb/DuSzn5a7/x7TONn1Wf+xO/
ffCbrzfgmXem33zlM/6yz33O5iuf8Y37uc/ZfOUz/p3ZePc5J96Zfr6+4X7u
8zx+nvvqF9y93i69v/ab77cwv7R47zNf+Yx/8O5zTrz9tX8nNN59zon/TPAb
3+A5dz5BeVqf8Y197nM2X/mMbxc13n3O5iuf8Y/97nNOPD4n37mf+zyP73d9
9aSfrnF476/9xj/mzTsnPmX8g3dfyslfZ3xb7OCBd1/Klb/2D37y3wtr2f2J
Txnf2Oe+lJO/zvh2a+Pd52y+8hkf2e8+58Q7nyu/uZ/7PI/vS/399bu/4uza
Zz5vmTdf7at8xjd49zknPuXJ92/uHPhZ9bk/8fhrv/l6G555Z/rNVz7jG/vc
52y+8hnfuJ/7nM1XPuMf+93nnHhy8p37uc/z+Lnumy5Zbfk7a5/xj/kZ8dW+
ymd8g3dfyslf+41/mzZ+G/W5P/H887Tf+AeP32T3Jz5lfGOf+1JO/jrjG/dz
n7P5ymd8ZL/7nBPvbN+5n/s8j58f/N62jzxnyXs7f+03vjFv3jnxKeMfvPtS
Tv7ab3zbrfHuc078psFvPm/hOSe733zlM76xz33O5iuf8e3rjeecfe43X/mM
f29vvPucE+9s37mf+zyP7197/F2nL7F27TO+MW++2lf5jH/w7ks5+euMf4c1
flZ97k+8/bV/8JyT3Z/4lPGNfe5LufL3g/Lt441nnn3uN1/5jH/sd59z4u2z
fed+7vM8fv7qXZ/e+1+2q33GN+bNV/sqn/EN3n0pJ3/tN/79vPGz6nN/4u2v
fYNn3pn+xKeMj+xzX8rJX/uNb9yPefa533zl88THxrvPOfLK9p37uc/z+Hnz
af/6hkcPqn3GN+bNV/sqn/EP3n0pV/7av+sa7z7nxP88+M3XG/CcO1+nPK3P
+Mg+9zmbt7/2G9+4H/Psc7/5ymf8Y7/7nBNvn+0793Of5/Fz8ZkjnnTvz2uf
8Y1589W+ymf8g3dfyslfZ3x7dMmBd1/Klb/2D55zZ/oTnzI+ss99KSd/7Te+
LdN45tnnfvOVz/jHfvc5J96Zfr6/w/3c53n8XG3Xlc+75YbaZ3zzPLnaV/mM
b/DuS7ny1/6t2Hj3pVz5yzl/3wTPufOKytP6jI/sc5+zeftrv/Fto8a7L+XF
p/QZ/57cePc5J55s38ncz32eH7/Pc1/01755PuXEpzx+b+e+ri/lyl/7t2bj
t1Gf+xNvf+0bPF/fk91vvvJ5/H7PfV2fc+JTxj/uN37f576uP/HJZ3xkv/tS
Nm+f7Tv3c5/nx+/91D6P39tZeE6u9lU+j9/v6ftSTv7ab3zbpfGz6nN/4tcM
fo/f21k470x/4lMev9/T96Wc/LXffN5yP/elvO2UPk/eH2m8+5wT72zfuZ/7
PD9+nyf7a988T/a+xKc8fr+n70s5+Wu/8W/fxs+qz/2J3yX4PX5vZ+G5877K
0/o8fr+n70u58nd/+XZs48fv+/T95iuf8Y/97nNOvH3ufG+8+zw/fp8n/+/B
vjFvPuVpfR6/t9P3pVz5a/+uaLz7nBNvfznn+y3w4/d9+n7zlc/j93v6Pmfz
yd+T5Bv3G7/v0/ebr3zGP/a7zznxzvad+7nP8/j+pLn3UGqf8Y1589W+ymf8
g3dfyslfZ3x7WuPdl3Ly137jGzznZPebr3zGR/a5z9m8/bXf+Mb93JfyvCl9
xr8L1x549zkn3tm+cz/3eX783k/t8/i9nYXn5Gpf5fP4vZ2+zznxKY/f7+n7
Uq78tW/wzDvTb77yefx+T9/nbL7yGd/WaPz4fZ++33zlM/6x333OibfP9PPn
W+7nPs+P3/u5P/pr/5ifEe99iU95/H7P/V1fypW/9u9tjXdfyslf+z1+b+d+
ve9zf9ef+JTH7+3c3/WlXPm7snzbtfHuS3nlKX3Gv1Ub7z7nxJOT79zPfZ7H
973n3kPp/bXffN56nux95iuf8Q3efc6JT3n8fk/fl3Ly137zeQvPvDP95iuf
8Zd97nM2X/k8eW+/8Zyzz/3mK5/xkf3uc078qsr2nfu5z/Pj93l6f+33+L2d
nk95Wp/H7+30fc6JTxn/Dm+8+1JO/trv8Xs7C8+dD1ee1ufxezt9X8qVv3vL
N+7nvpT3ntJn/Nu68e5zTryzfed+7vP8+L2f2ufxezsLz8nVvsrn8fs9fZ9z
4lPGtzMbP6s+9yfe/nLO5y08585nKk/r8/i9nb7P2Xzl8+S/t9t49zmbr3ye
/P5i493nnHj7bN+5n/s8P36fJ/tr/zxP9r7Epzx+b6fvSzn5a7/x7cbGu885
8fbXvsHz9Q3Z/eYrn8fv9/R9zuYrn/HtCdsP/Ph9n77ffOUz/rHffc6Jd6Z/
/L5P3+d5/H3B3Hso+X8P9s3zZO9LfMr4B+++lJO/zvj2osbPqs/9ib8x+I1v
8JyT3W++8hnf2Oc+Z/PJXzK+cT/m2ed+85XP+HfT2QPvPufEk5Pv3M99nh+/
z5P/92DfmJ8R732JT3n83k7fl3Ly137j30sb7z7nxNtf+wY/ft+n7zdf+Tx+
v6fvczZvf+03vnG/8fs+fb/5ymd83LHx7nNOPD4n37mf+zw/fp9nfuev/R6/
tzO/450Tn/L4/Z75XV/KyV/n8fs98/W+z/yuP/EvDX6P39uZv/D3xZS3V57W
5/F7O/O7Pmfz9td+49v+jWeefe43X/mMf29svPucE2+f7Tv3c5/nx+/91D6P
39uZ3/HVvsrn8fs9fV/KyV/7jW+7Nn5Wfe5PvP3lfPzezsJz512Vp/V5/N5O
3+ds3v7ab3z7WuPdl/JuU/o8+f2rxrvPOfH2mf7x+z59n+fx87y591Bqn/l+
C/NLi6/2VT7jH7z7nBNvf+3fCY13n3Pi7S/nfN7Cc+58gvK0PuMv+9znbL7y
Gd+4n/uczVc+49+djXefc+LJ9p3M/dznefy8e+49lN5f+41/zJt3TnzK+Afv
vpSTv8749kjj3Zdy5S/nfN7C8/U92f3mK5/xjX3uczZf+Yxv3M99zuYrn/GR
/e5zTrx9Pk+Z+7nP8/i+9Nx7KLXPfN4yb77aV/mMb/Duc058yuP3exZ+vrPP
/Yl/JPiNb/C87092v/nKZ3xjn/uczVc+49sSjXefs/nKZ3xkv/ucE2+f7Tv3
c5/nx+/91D6P39uZr/d96n2Vz+P3e/q+lJO/9hv/4LdRn/sTj7/2e/zezny9
79P3Jz7l8Xs7fV/KyV/nyX9vq/HuczZf+Tz5/kvj3eeceGf7zv3c53n83HHu
PZQHOn/tN74xb9458SnjH7z7Uk7+2m/8+2jj3eec+OQ3/71deM7J7jdf+Yxv
7HOfs/nKZ3zjfu5zNl/5jH/sd59z4u2zfed+7vM8vh8y9x5K7TO+MT8jvtpX
+Yx/8O5LOfnrjH8HNN59KVf+cs7XG/Cck91vvvIZ39jnPmfzlc+T/95W4zln
n/vNVz7jH/vd55x4Z/vO/dznefw8fe49lN5f+41vzJt3TnzK+AbvvpQrf+3f
qY2fVZ/7E29/7R8852T3Jz5lfGOf+1Ku/D1Evv2p8e5L+ZApfca/wxrvPufE
O9t37uc+z4/f56l9Hr+30/PVvsrn8Xs7fV/KyV/7jX+XNt59zom3v5yP39tZ
OO9Mv/nK5/H7PX2fs/nKZ3y7p/Hj9336fvOVz5PfP2y8+5wTb5/tO/dzn+fx
89/m3kOpfcY35s1X+yqf8Q/efSknf53x759LDrz7Uk7+2m98g+fcmX7zlc/4
xj73OZtP/t4s37if+1K+eUqf8Y/97nNOvH2279zPfZ4fv/dT+zx+b6fnq32V
z+P3dvq+lCt/7d/SjXdfypW/nI/f21l47ry08rQ+j9/b6fuczVc+4xv3c5+z
+crnyfdfGu8+58Q723fu5z7Pj9/nebD0efzezoOTr+/Np32Vz+P3ex7s+lKu
/LV/b278Nupzf+LtL+fj93YenJw7v1l5Wp/H7/c82PU5Jz5l/ON+4/d9Huz6
E598xj/2uy9l8872nfu5z/Pj9356f+33+L2dhfNk70t8yuP3e/q+lJO/9nv8
fs+Det+n70+8/bV/8Hx/n+z+xKc8fm+n70s5+Wu/+bzdrPHuS3nbKX3GP/a7
zznxzvad+7nP8+P3fnp/7ff4vZ2eT3lan8fv9/R9KSd/7Te+/U/j3eec+F2C
3+P3dhbOO9Of+JTH7/f0fSlX/u4v305u/Ph9n77ffOUz/u3eePc5J97ZvnM/
93l+/D5P7fP4vZ2F5+RqX+Xz+L2dvi/l5K8z/l3eePelnPy13+P3dh7U+z59
v/nK5/H7PX2fs/nk70ny7f7Guy/lk6b0Gf9Obrz7nBNvn+0793Of5/HziXPv
oWR/7Rvz5lOe1md8g3dfypW/9u/RtQfefSknf+03vsFzTna/+cpn/GWf+5zN
Vz7j23Mb7z5n85XP+HdN+3+/+5wTb5/tO/dzn+fH7/3UPo/f21l4Tq72VT6P
39vp+5wTnzL+LdV496Vc+Wvf4Dknu9985fP4/Z6+z9l85TO+cT/3OZuvfMa/
Px8+8O5zTrx9pn+jlrmf+zw/fu/noeivfWN+Rrz3ma98Hr+381DX55z4lPHv
fY13X8qVv/YPfvy+z0Ndf+JTHr+381DXl3Ly1xnf1m+8+5zNVz7j36KNd59z
4vE5+c793Od5fP/03Hsovb/2G/88T/a+xKeMb/DuS7ny1/7NNt59KVf+2jd4
5p3pT3zK+MY+96Wc/HXGt0823n3O5iuf8ZH97nNO/KLK9p37uc/z4/d5en/t
9/i9nYV+k73PfOXz+L2dvs858SlPfn+l8e5LOflrv8fv7Sw8dz5BeVqfx+/t
9H3O5iuf8Y37uc/ZfOUz/n2o8e5zTryzfed+7vM8vl869x5K76/9xjfPk73P
fOUzvsG7zznxKY/f73lo8v1N9rk/8fbX/sHz/U2y+xOfMr6xz30pJ3+d8e2o
xnPOPvebr3zGv+sb7z7nxNtn+vn9Fu7nPs+P3/vJ/3uwf8ybT3lan8fv7fR9
KSd/7Te+3d949zkn/szg9/i9nYf0vk/fn/iUx+/39H0pV/5eKt8ub/z4fZ++
33zlM/49a/uBd59z4vHZvo/f9+n7PD9+76f2efzezsJzcrWv8nn8fk/fl3Ly
13n8fs9Det+n70/8/cHv8Xs7C+ed6Tdf+Tx+v6fvczZvf+03vq3X+PH7Pn2/
+cpnfHxS493nnHj7TD+Z+7nP8/i5ydx7KNlf+8b8jHjvS3zK+AbvvpSTv/Yb
/17XePc5J/5FwW98g+fc+XXK0/qMj+xzn7N5+2u/8Y37Mc8+95uvfMbHTzTe
fc6Jt8/2nfu5z/Pj93ke7vy13+P3dh7ueOfEpzx+v+fhri/l5K8zvm3X+Fn1
uT/x9te+wfP5Tna/+crn8fs9D3d9zubtr/3GN+43ft/n4a7ffOUzPrLffc6J
/4TyJvKb+7nP8/h+5Nx7KLXP+Ma8+Wpf5TO+wbsv5eSv/ca3/Ro/qz73J367
4Dc/bwnP1/dk95uvfMZH9rnP2bz9td+T/95W492X8m5T+ox/7Hefc+LJ9p3M
/dznefw8d+49lNpnfPM8udpX+Yx/8O5LufLX/h3fePc5J36/4De+wTPvTL/5
ymf8ZZ/7nM1XPuPbhY3nnH3uN1/5jI/sd59z4u2zfed+7vM8ft419x5K9te+
eZ7sfYlPGf/g3Zdy8tcZ/+5ovPtSTv7ab/yD5/Od7P7Ep4xv7HNfypW/58q3
px088O5L+dwpfcZH9rvPOfHO58pv7uc+z4/f58n/e7BvzJtPeVqfx+/39H0p
V/7av7vuHPhZ9bk/8XcEv8fv7Sycd6bffOXz+L2dvs/ZfOUzvnE/9zmbr3zG
P/a7zznx5OQ793Of58fv/dQ+j9/b6flqX+Xz+P2evi/l5K/9xr9VG7+N+tyf
eP552u/xezsP632fvj/xKY/f2+n7Uk7+OuMb93Ofs/nKZ3xkv/ucE+9s37mf
+zw/fp/nkdLn8Xs7j3R8ta/yefzeziNdX8rJX/s9fr/nka7POfGrBr/5vIUf
v+/zSNdvvvJ5/N7OI12fs/nKZ3w7pPGcs8/95iuf8e9tjXefc+Kd7Tv3c5/n
x+/91D7z8wbMz4iv9lU+j9/b6fucE58y/n2r8e5LufLX/sGP3/fp+xOf8vj9
nr4v5crfHeUb9xu/79P3m698xj/2u8858fbZvnM/93keP3819x5K76/9xjfm
zTubr3zGN3j3OSc+5fH7PY9Mvr5hn/sTb3/tGzzzzvQnPmV8ZJ/7Uk7+2m98
437uS/mQKX3Gvz0a7z7nxDvbd+7nPs+P3+epfR6/t9Pz1b7K5/F7O31fyslf
+41/f228+5wTf2rwe/zezsJz578qT+vz+P2evs/ZfOUzvp3dePc5m698xj/2
u8858faZfv58y/3c53n8XHzuPZTaZ3xj3ny1r/IZ/+Ddl3Ly13n8fk/fl3Ll
r/2D59yZ/sSnjG/sc1/KyV9nfHtO493nbL7yGf/Y7z7nxJPtO5n7uc/z+Ln6
3Hsotc/4xrz5al/lM77Buy/lyl/7t1Lj3Zdy5S/n/H0TPOfOKylP6zO+sc99
zuYrn/GN+7nP2XzlMz6y333OibfP9p37uc/z+PruufdQ/ln6jG+er/K0PuMb
vPtSrvy1f+s0flZ97k+8/bVv8Jw7r6M8rc/4xz73OSc+ZfzbtvH4zT73Jz75
PH5/559dX8rmne0793Of5/l8PmDuPZTaZ3xj3ny1r/IZ3+Ddl3Ly137j20ca
P6s+9yfe/to/eM6dP6I8rc/4yD73pZz8td983nI/96X87il9xr+fNN59zol3
pp/Pd+7nPs+P3+epfR6/t9Pz1b7K5/F7O31fypW/9u8LjXefc+LtL+d83sKP
3/fp+81XPo/f7+n7nM1XPuMb93Ofs/nKZ/xjv/ucE4/P9p3M/dzn+fF7P7XP
4/d2Fp6Tq32Vz+P3dvq+lJO/zuP3e/q+lCt/OR+/t/NPve/T95uvfB6/t9P3
OZuvfMY37sc5+9xvvvIZH9nvPufE22f7zv3c5/nx+zzZX/vG/Ix470t8yuP3
dvq+lCt/7d/ijXdfyslf+z1+b2fhvDP95iufx+/t9H3O5pO/8+TbyxvvvpTn
TekzPv5j7YF3n3Pine0793Of58fv/fT+2u/xezsL58neZ77yefzeTt/nnPiU
x+/39H0pJ3/t9/i9nYXnzkspT+vz+L2dvs/ZfOUzvq3eePc5m698nvz5s/Hu
c068fbbv3M99nh+/9/No/N+DfWN+Rrz3ma98Hr+382jX55z4lPHtHY13X8qV
v/YPfvy+z6Ndf+JTHr+382jXl3Ly1xnfuJ/7nM1XPuPfTOPd55x4Z/vO/dzn
eXzfe+49lN5f+41/nid7X+JTxjd496Vc+Wv/Ptl496Wc/LXffN7CM+9Mv/nK
Z3xjn/uczVc+49ts493nbL7yGf/Y7z7nxNtn+8793Of58Xs/vb/2e/zeTs+n
PK3P4/d2+j7nxKeMf0c23n0pJ3/t9/i9nYXnzkcqT+vz+L2dvi/l5K8zvv26
8e5zNl/5PHl/qvHuc068s33nfu7z/Pi9n9rn8Xs7C8/J1b7K5/H7PX2fc+JT
xrczGj+rPvcn3v5yzuctPOfOZyhP6/P4/Z6+z9l85TO+cT/3OZuvfMY/9rvP
OfH22b5zP/d5fvw+T/bXvnme7H3mK5/H7+30fc6JvzT4jW9/a7z7nBNvf+0b
/Ph9n77ffOXz+P2evs/ZfOUzvnG/8fs+fb/5ymf8W377gXefc+Kd6R+/79P3
eX783k/+34N98zzZ+8xXPo/f7+n7nBOfMr69sPGz6nN/4v8W/B6/t7PwnOx+
85XP4/d7+j5n88nfh+Ub93Nfyg8Hf53x769nD7z7nBOPz/ad9525n/s8j78b
z72Hkv/3YP+YN5/ytD7jG7z7Uk7+2m/8e3njt1Gf+xNvf+0bPPPO9JuvfMZf
9rnP2Xzl8+S/t9V49zmbr3zGR/a7zznx+Gzf8Zv7uc/z4/d5FpQ+j9/bWdDx
1b7K5/H7PQu6vpSTv/Z7/H7PAr3vs6DrT/zLg9/j93YWTM6dt1Oe1ufx+z0L
uj5n85XP+PaFxo/f91nQ9ZuvfMbHjRrvPufEk5Pv3M99nsfPI+beQ6l9xjfm
Z8RX+yqf8Q/efSknf+03vu3e+Fn1uT/x9pdzft4Anvd9yO43X/mMb+xzn7P5
5O9u8o37uS/l3ab0GR9Pbrz7nBO/kfJu8pv7uc/z+Hne3Hsovb/2G988T/a+
xKeMf/DuS7ny1/4d33j3OSd+9+A3n7fwzDvTb77yGX/Z5z5n85XP+Mb9OGef
+81XPuPfHY13n3Pi8dm+k7mf+zw/fu8n/+/BvjFvPuVpfR6/t9P3pZz8dca/
BY13X8rJX/s9fm9ngd736fvNVz6P39vp+5zNJ3/Pk2/LHjzw7kv5vCl9xsdr
Gu8+58Tb5/OUuZ/7PD9+n6f2efzeTs9X+yqfx+/39H0pV/7av+H9mAV636fv
T/yC4Pf4vZ2Fn+9k95uvfB6/t9P3OZuvfMa3f2s85+xzv/nKZ3xkv/ucE2+f
71Lmfu7z/Ph9ntrnS5pvzJuv9lU+j9/v6fucE0+23/i3QePd55x4/LXf4/d2
Fs4705/4lMfv7fR9KVf+Li3fuJ/7Ul56Sp/xkf3uc068fbbv3M99nsfPHebe
Q3ms9BnfmDdf7at8xj949zknPmX827Xx7ks5+Wu/T2u+wfP5Tna/+cpn/GWf
+5zNVz7jG/fjnH3uN1/5jI/sd59z4p3Xld/cz32eH7/3U/s8fm/nMb3v81i5
r/J5/N5O3+ec+JTx7SuNd1/KyV/7PX5v5zG979P3m698Hr/f0/c5m0/+7iDf
ftT48fs+fb/5ymf826nx7nNOPDn5zv3c53n8PH3uPZTeX/uNb8ybdzZf+Yxv
8O5zTnzK+HdK42fV5/7E21/7B8852f2JTxkf2ee+lJO/9hvfrmw88+xzv/nK
Z3w8tPHuc078Tsr2nfu5z/Pj93lqn8fv7fR8ta/yefzeTt+XcvLXfuPfFY13
n3Pi7S/n4/d2Fs4702++8nn83k7f52ze/tpvfON+7kv59Cl9xj/2u8858faZ
/vH7Pn2f5/Hz3+beQ6l9xjfmzVf7Kp/xD959KSd/nfHvkSUH3n0pJ3/tN77B
c+5Mv/nKZ/xln/uczVc+4xv3c5+z+cpn/GO/+5wTT06+cz/3eX78Pk/t8/i9
nYVf35CrfZXP4/d2+r6UK3/t37KNd1/Klb+cj9/bWXjuvKzytD6P39vp+5zN
Vz5P/ntbjXefs/nKZ3xcsMvAu8858c72nfu5z/P21T47T+tj5VPKyY/kU/Xv
37n69+lc/ftxTv+8/e9j4k/7/z551tMu3+/ia389/PtYbJ15Zw6Z83mb/uH8
H620MHv+inae+Nde/9UzrvzCNd0+5j903XDufcwf8uG3nbzITX/p9jH/6nbu
fczf9diSx7/49X/p9jG/YMFw7n3Mb3zgVUdt9u2ru33Mn/OV4dz7mP/+st86
dK+H5nX7mP9yO/c+5p/4o3d9+di3z+v2Mb/FCcO59zG/zeuW++xFP/lzt4/5
57Zz72P+lxfeuMf8p/+528f83y4Yzr2P+Zmtv7fT83a4qtvH/I+2Gs69j/ld
b9/uvRv99k/dPuZ3b+fex/zFe750y488/0/dPubXbufex/xLn/L3t3zzU1d2
+5hftJ17H/P7f+PH6//mz1d0+5i//7Dh3PuYv2nFXf/fHa+5otvH/GHt3PuY
f/2pr37ls752ebeP+W3bufcx/+0NH1x+rX9c1u1jfsV27n3MP3zFact84D8v
6/Yxf8/lw7n3Mb/F+z/57wd9/4/dPuZ//r7h3PuYP+n+tZ/88yf8sdvH/D73
Defex/zT93v8guu3ubTbx/wb9x3OvY/57Z95zr1P+eUl3T7ml2jn3sf8b4/5
/K2rPPuSbt/k8/bo4dz7mH/+Km+6duuPXtztY/7oVw3n3sf8I/su9YOnHvWH
bh/zf2zn3sf8T4854uuz7/x9t4/59x09nHsf8zud9YLPnLjERd0+5l/Uzr2P
+RWuP+6Djzv/gm4f8/tfO5x7H/PXPrbyf22+z/ndPuaf3c69j/lDl/3pG767
xu+6fcwf1869j/m3vG61lz9wz7ndPuZXX3M49z7mn7z16Uu/8Ye/7fYx/7ut
hnPvY/7Xe6676OHvOafbx/yWHx/OvY/5Pb5x7t13POfsbh/ztx02nHsf8684
deO/rHXZWd0+5vds597H/C1XXHLeQV86s9vH/FPbufcx/537t/i/G9Y7o9vH
/OHt3PuYP3HFU9fe/uHTu33Mv3P54dz7mH/h+89a8uk7/qLbx/wP3z2ce9/E
l2MuvPPH807t9jF/5HeGc++b/Pu+/oqz37bxyd0+5n917XDufZN/X8tef/iD
v/xpt4/5G5Yezr1v8s97q9t3+dbKP+n2Mf+4LYdz75v883rV7V/be80Tun2T
z9uXDOfex/xBJzz2+vOee1y3j/nPHzecex/zO6/4zLsWf+zobh/zv1l+OPe+
iS8bbLrmiWcc3u1jfmaN4dz7mN9mzT0PW+uzX+32Mf/V1wzn3sf83ud96dLX
znyy28f8yy8czr2P+UXOPOLjzzr9A2t73+Tz9glHzp17H/NnnP2s7y2/wwFr
ex/zl587nHvf5P+9d1w//7O7HLq29zG/1QPDufcx/+G9tt7k4Su/0+1j/iOf
HM69j/kDF9noyJPmf7fbx/wqj204d+59E9/2W+XuHZ71w24f87d/YTj3Pua3
2+/Ao5ZY+sfdPubf0c69j/kHN9zv/A/970ndPuZXfdNw7n3Mf/4pe937u9V+
1u1jfvHFh3PvY36Jiz68zPLnndLtY36tC4dz72P+0APfv/4+7zit28f8+QcN
597H/Iqbbb3TNTf/stvH/PffPpx7H/OnPHOzQ9fY/dfdPua/sORw7n3MH3v7
C7a94PFndvuYP+nO4dz7mL/9wiM++vE3ndXtY/75vx/OvY/5VX+01P4rHPyb
bh/zh7Rz72P+Ewce8u3Lrzq728f84786nHsf87/58OInfXa533b7mN/lI8O5
9zH/tM0O+O0rtz+328f89ZsP597H/OarPGnetT8+r9vH/KarDufex/zhz9z7
H19+8HfdPubPaufex/yN9z/8hDXXuaDbx/wrHhjOvY/5la7c7dm3ff7Cbh/z
R7Vz72N+11PvWumwP1zU7Zv8eaOdex/zv/jGjq/fYOYP3T7mP/3N4dz7mN/n
dfe+ZM+XX9ztY36Pdu59zC//o1e8etM/XtztY/7Edu59zJ+/7E5rr/ixS7p9
zN/Szr2P+Q8d+MM3Prb0pd0+5pc9aDj3PuaXWOTWza/41aXdPubf/rjh3PuY
/9mHl3/XCf/9x24f81/5yHDufcxvef17ttt30cu6fcz/tp17H/MLNj1ql61+
cFm3j/lHNxvOvY/5o8665hOvevPl3T7mX/2b4dz7mF9vlWU+v9g9l3f7Jp93
7dz7mL/pmHd+9bqvX9HtY/6YY4dz72P+gGceevgpq1/Z7WP+6nbufcy/bL/L
vvuVv1zZ7WP+GZ8bzr2P+UvuX+LH7/vMn7p9zP/n/OHc+5jf7f1vOW3NF13V
7WP+s+3c+5hf6sovnf2M313V7WP+tHbufcz/asPzf3/bB//c7WP+3nbufcy/
+9R/uerMf5vX7WP+Je3c+5hf9MXr33jY/83r9jH/3+3c+5j/wTf2uXPn/7q6
28f8N9u59zH/5qec8cAG/7y628f8pe3c+5i/e89HH7fsd/7S7WN+sb2Gc+9j
/uu3r/G0+99wTbeP+XXbufcxv/rWeyx54d+u6fYx/7HZ4dz7mP/LhT/7j2O+
eG23j/kfXzScex/zc39cmLmu28f8fe3c+5h/xjsO++Zx21/X7WP+oHbufcy/
b/FTnnfIL67r9jF/fDv3PuZPPvfyYz/99Ou7fcyf1869j/nF9r7vxTtuc323
j/n3tnPvY36r1Z5x4hY/ub7bx/ze7dz7mD/+rleuuu4Tbuj2Mf+cu4dz72P+
sePe+vOV335Dt4/51f53OPc+5t/67p3XWur7N3T7mN+8nXsf80cv9ZXfPPGh
fh/z/2jn3sf8fZccv9Fdb7qx28f8RpcO597H/HoHXHDRvG/d2O1j/nvt3PuY
P3Td2zY79+83dvsmXy+2c+9j/paHn/ynk9b5a7eP+Wvaufcxv8ZPV5g94uC/
dvuY37Odex/zX95xgxv2/+tfu33M/0879z7mr33B+z6w22tu6vZN/u91O/c+
5l959Wfv2PYLN3X7mH9zO/c+5vc55OiPbPznm7p9zN/azr2P+cs3PnP+a1e6
udvH/KKbDOfex/wKT7purxd86uZu3+Tr9XbufczvcfqCRRa/+OZuH/Ont3Pv
Y/6C3Z77uYeX+1u3j/l37j6cex/zy7xszafevOvfun3Mf7Sdex/zO9285UGX
nPO3bh/zX23n3sf8GXOf57d0+5hf6cjh3PuYHz7vb+n2Mf/Gdu59zA+f97d0
+5jn3PuY/9nc5/mt3T7mFzlvOPc+5p8893l+a7eP+WXaufcxv+Xc5/mt3T7m
T23n3sf8CXOf97d1+5i/rJ17H/PD5/1t3T7m72rn3sf8pnOf57d1+5j/Ujv3
PuaHz/t+H/PHtXPvY374vL+928f8Ny4dzr2P+fXnPs9v7/Yxv0079z7mh8/7
27t9zO/Vzr2P+VvnPs/v6PYxP/PIcO59zA+f93d0+yaft+3c+5gfPu/v6PYx
//t27n3MD5/3d3b7mN/hhcO59zH/irnP8zu7fcx/rp17H/PD5/2d3T7mj27n
3sf8lXOf93/v9jG/7SbDufcxP3ze/73bx/wa7dz7mN9z7vP8792+yf+9befe
x/yFc5/3/+j2Tb7ebufex/xz5z7P/9Htm3y93c69j/md5z7P/9HtY/797dz7
mB/+e2F3dfsmn7ft3PuY33/uv5d0V7eP+a+0c+9jfvjvzdzV7Zt8vdbOvY/5
4b/X0e9j/pZ27n3MD/+9g34f889r597H/PBefL+P+Te0c+9jfnhv++5u3+Tz
pp17H/Ofnnuv+O5uH/NHtHPvY3547/Xubt/k87adex/zl8y9l9nvY/6hdu59
zA/vDfb7mH/N9sO59zE/vP/W72P+be3c+5gf3rvq9zF/cDv3PuaH94Lu6fYx
f2I79z7mh/dW7un2Tf683869j/lz596ruKfbx/z57dz7mB9+37/fx/zTDh7O
vY/5peZ+X7rfx/yL2rn3MT/8vmm/j/nt27n3Mf/Bud/Xu7fbN/nzejv3Pua/
Nvf7Tvd2+5g/p517H/PDfy/93m4f8/PaufcxP/y8fb+P+RvbufcxP/z3evt9
E9/bufcxv9rcz9v2+5hfp517H/PD5/193b7J53U79z7mh8/7+7p9zH+7nXsf
88Pn/X3dPuZ/2M69j/nh877fx/yD7dz7mH/S3Od5v4/5J7dz72N++Lzv9zG/
eTv3PuaHz/v7u33Mv7edex/zw3v393f7mP9RO/c+5ofP+/u7fcyf2c69j/nh
877fx/zv2rn3MT983vf7mF92++Hc+5gf3vvs9zH/wnbufcwPn/f9vsn/vW3n
3sf88Hk/v9vH/KfbufcxP3zez+/2Mf+ndu59zA/vHc3v9jG/9GuGc+9j/u65
z/t+3+Tz4uDh3PuYH97b6Pcx/+p27n3MD5/3/T7mN2vn3sf8jnOf5w90+5g/
sJ17H/PD78s+0O2b/N/rdu59zA+/b/hAt4/529q59zE/fN73+yb/9/YXw7n3
MT/8vku/j/n127n3MT983vf7mN+unXsf88Pn/YPdPuY/1s69j/nh8/7Bbh/z
J7Rz72N++Lx/sNvH/B/bufcxP3ze9/smnzft3PuYH/680O9j/hX/X11nqONU
GITROoIgwRE04QnAYTZBVO2qxRHA7gPAW2AaBA6/r9Aui+YpEBgeANHWkHTm
fNP5hrtuMqcnuRXz90/2fpN998HHvJ8++GfZdx98zPv98MFfZd998HFf2A8f
/F323Qcf834/fPC32XcffOT1Tx/800fRdx98zPvpg1/fRN998DHvpw/+Zfbd
B395mufTp/M2++6Dj3l/GD79Xsq+++C/neb5Yfh0X86+++DjvnAYPvg/2Xcf
fNwXpk/n7Sb67oOPeT99mjfZdx98zPvp03mbfffBx7w/Dh/8h+y7Dz7m/XH4
4L9m333wcV84Dh/8Nvvug495P33wf7PvPvi4L0wf/Jvsuw8+3vebPp232Xcf
PPvq3Qff99mXD177zs0H/z377oPX/mnzwe/aPuXywWv/rvngn/w+37dcPnjt
PzWf5lXb51k+eO17NB/8i7bvs3zw2r9nPvhPbZ9c+eC1b8x8mjdt31z54LX/
yXzwX9o+o/LBa9+N+TRv2r6j8sFrX4j5dN7enO/TKB+89i2YD/5127dRPnjl
35sP/nPLcy8fvPK/zQf/vu0rKB+88pfNp9+bLU+4fPDKnzUf/KHlDZcPXvmf
5oN/sDnPsywfvPIPzQd/3fJaywev/Dnz6bxteWrlg1f+lvl0X255geWDV16R
+eB/tDyf8sEr/8V88D9b/lX54JW/YT6dt9vzPInywStvwHzwz9v7+OWD9/fF
Hxv/quVPlM8//3+e/1P+de817/Mv1W/z/f2lmnyfpZp8hqWa9/GXavIRlmry
Ppbq/ryrC6/78876XXveWX9szzvrXXveWZMvsVT35531uj3vrFftj+/job6f
3uf7ob+6+Ad/PPCv
          "], {{{
             EdgeForm[], 
             GrayLevel[0.8], 
             GraphicsGroupBox[{
               
               PolygonBox[{{13032, 12000, 13000, 13036}, {13001, 1, 12001, 
                13033}}], 
               PolygonBox[CompressedData["
1:eJwl2nlYHtXZB+DXpQkEl1ZtgOC+BAitWrUJJFatS4DQauuSQNJq6xIgtGpd
AgTr3gChLlUbILhUrQGSqq3aAKEudQmQuC8Bglu1DZBYtdoGSFr97uf6/rgv
zm/mnZkzZ86cOTPJYRdedvaluycSiY93SyS+4u+Pjkkk1it008Ui+RSW7JlI
VFDOyfLFTJuUSGSQzkVyGfOUiyikVP4Zy5RrqKZCPpHZ9jOHvPgrF7PC8Rqo
Z4H8E7Ypb2eUC+Sr2GI/QwxypXw5a5TX0s5lcsmxicS6ryUSHXSyUM61fIrj
pZDMLPmrzNAAOWSzr/zvox1DWwwxyOfyAZYvtH4RJewv/9fy2dptDnnskhPR
VsoVlPOlZXtatkq5hWb2kE+I89jDMRjkeHkvdsZ+mCBFTmKj8ib6mCwXxDL1
30Qf+fLpcQzlFpo5TT436hzXkBLOkQ+M66v+3XSRIb9/XCLxpnq+xWb+Jn9A
v/IAg3wo/50tykO8zT/kEX/nOe0iChmOtrN8k78v8lL8Xn6bl5Vf4VXekd/l
NeXXeYP35Ouj/SZrP8q5Tq6K66acQjKV8t/9fprjZZDOh/JW27/j77uxL4bl
P7vuk6ZqN5JYJ39q3RrbrKWdT+RxpkSbk8yY/IPoG9oth2zOkq+JvqsOc8ij
Rr7BPlfun0g00sSN8l8de6V9NNLEs/KTLFYupYyn5I/8XaYONVSzXf6T7Td/
XfszwGPy96JvuK67mKBI/qPla6xfSzuPysfGvaA/raWdY+SsuC+ViygkM/ru
t5zHUc6DPHbJX1WfGdOdL9nsK+/FzljPBClyEhuVN9HHZPnftt9ypGvNIJ/L
n7JGeS3tfCIX++2KbPc59SyQ37d82xHOnVHek99mvXI3XQzJe/rtKsdroZk9
5ARLlCso50u/G2dK1JVkxuQ/+t2ab6oL7TwqPxH9WXmIQR6Xn49juAYtNPOc
3MkU5RSS6ZCfieMqV1DO0/JfmK08hzy65QHHXqH+DdTTL//I8vXOvZsuFskX
M22G/kw6F8X95rfTtFsG6XwojzBPuYhChuWPWKZcQzXb5QNsv9A1XEQJ+8vH
RhtkagPaOUY+IdpAeYhBjpe/wTLlGqrJiXPTt2a7f+aQR7fcyRTlFJLpkJ9g
i744xCCPy0fGs0K/yyCdI+RDY2w3/mxnlEPktHgGKDdQT6p8ZLSLOmSQzhFR
v3im2E8N1eREH7d8nvVFFJIpnxjXI0udyYu/8qFs0x7bGeUQ+cC4HsrddJEh
p0U/VW6gnlT59Ogb9tNCM6fJBXEvKG+ij3z5e3HPKO9igiL5lOgvyhWUc7J8
blyjuP6UcI78g7gHlXPI5iw5N/qfbVJIZlaMr8Rz2+knDAeJjbGttp7hWZdD
NmfJP2K9cjddLJJ/oX9sPlhfZIAr5IctX+16tdLGI/I37XO1tmyljaNjHI/n
R4r90cWQ/HPbr7afVtq4VL6aSYcYG0hiqdxun0vtu5Iq1sjVls+0fha5LJMf
snyu9fkUsFp+P/qL421nlPfkgegvyg3U0y+/GmO2cg7ZvCKPx/Njb+1HMmPx
jI/n717qzyCfy5/G2Km8lnY+iXEyxnvbzCGPXXJCfZYoV1DOl5Z9FH3SNjVU
s11+M56/6rCIEt6I51bcC9ZnkM6H8kiMz8pFFDIs/zWeKe6pRpp4Vv6ptpmq
fVNJ40L5Bcs3WN9DLxvkLmYqzyKX9fINfrtS+zbSxI3yPZZvPcDxGOFe+VeW
b7C+h16Wy/dbPtV1SCWNB+RbLJ9+qPuMLG6Vf2v5cvuppY6V0Yeib3hIt9LG
0XJzzM2s76CTVXK95Tscb4xxVsi/inPzPO2hl+Xyi/EcnOI6MMEm+TeWz7ef
BRRzh9xs+3Xq1UEnq+QnLV+sPUop4ym53PKl2rKSKpbIP2brQdqFEc6XL2Gu
9fkUsFj+JYvVtZQyro02YLnj1VLHSrnecXao/xjjrJB/Y/l86xdQzB3yLZZP
V/9MsrhVvifqYv0wI9wbz1DLV7iXG6hngdwbc8JoD/rokZ+JuZRyBeU8HXOp
GLPVIYVkKuWrYszez73AIFfKl8fcQnkt7Vwm/4xlyjVUUyHfHeOLunbTRYv8
e6bpJxmk86D8O7ZZv51R7pP/EPuzvobqmMfIbcxTLqIwxiP5dFZ91b5p5jT5
lLgHlSso52T5xHhGKc8hL/7KZbE/dS2ikFL54qifcgbpXCT/JOqnLbczygXy
uSyMMZMSzol5GDvtexcTFMl7xbIYG5iIcSbeNaKdrU8hmVnyCdHO+2pnBjle
LmCj9ZvoI19uiuurjRqop1G+K+qivIgS7pRvj/FeOYdsbpOvj3ZxXSso5zp5
z2g/9WqhmT3iesR4muR8GeU+uS3GoWTnRCGt8t0x3lvfTRctcl30NXPfTfRR
K/867kvlXUzQIDfF+GybBupplO+KMVF5ESXcKd8eY7ZyDtncJv8lxl19dg55
dMvPxzuOcgvNPCd3xtiunEIyHTEvjnFc/dfSzqNRv7hG2mMXEzTIN0e7KLfQ
zE3yNdGHlOeQR41cF9dIeRN91MY8O+4P13At7RwjJ8XvtO8m+pgcfTyeC+pQ
Q3XUSf59PAOUM0jnQfnmODft1kIzN8lPxDPK+iEGeVzui7HE2DXGOBvll477
/3d3r74JmyZelN9Cl03o3glVTrwp/8+cdLF3m1LK+ELusnymv7PIZb38r3gP
tE0/A3wW7ySWbzZH7meAx+LdiknWTSaJdfI9bP2G8YoR7pV3U++VjtdIE7vL
zZavs76DTlbJE/Yx0/pZ5LIz3jGZqw75FLBVbvfbpepQSRVr5IdjrqLcShuP
yNVxbjn2Ry7L5K879nITp1rqmCr/yvIN1vfQy3L56jg35ckksVRO99t1tumg
k2nyL+OdzvpSyrhWHlXHpepaSRXb5H+yWrmVtvjeIt8Q74i2aaSJG+X/WD4p
3vNJYod8v+VTnVMqaTwgP8Rc5XwKWC3/UH3mx7cTijlb/qHl8+M9i2LOlvOi
XWIeSS6z5TP8doOJZA+9zJW/yWoTzFbaOFouj7b3flJJFUvkb1m+2fp+BjhO
Poq5yvkUMF3+RfQh2/QzwBXyJXEeyvkUsFj+TrSpepVSxknyYbafaj+ppHG4
XBLXw3l20MlC+VtxDHPVfgY4Tv5utLP9NNLEqfL3/Xa6bTLJ4kz5jOgH1vfQ
y1y50PId2mOMcebJ37d8urbMJIsz43fssM0Y48yTvx19SHkyScyUfxrn4UZN
JY0L5fOiT6pDLXXMl3/MVuVhRjg/5tnRx7VRK21cKv8mrq/7ZwHF3CH/luXK
tdSxUv55XEvHa6WNS+X/sdg4VUoZX8S3jLhXDSKNNHGjPMFM62eRy86Yn8bv
jLeNNPGs/EL0oZh70MuG6C8sdbxKqlgid8X+rJ9FLuvlq5nkeJNJYmncl7E/
5R56WS5Xx7bKs8hlmfyVmCeqVw+9TJL/FX3SXLqfAT6T/xZtr5xKGh/Io1E/
5Uqq2Cb/I/qucj4FbJX/Ge2n3EobH8v/iTrHOE8SO2I8iDZVr1LKuFbeLeby
1jfSxO7yn2Nb5z6ZJNbF/RF11kb9DHCF/GTsz/pSyngqngHRJ5XHGGej/FDU
2TMinwJWxxgb94fnaQedrJL3jn5v7Moki33kS2Jbx8ungMXyb6NP2qaWOlbK
X4vxxTYLKGa/aPu4RsapHnqZJCdH/eIbGuNMkevj/jDGjTHOCvmWuI/0z0yy
uDX6cxzD8RZQzB3yQXEvON4wIxws3xLnYX0mWdwqvxTLvGdlksXLcntcX+1R
SRVr5Lfi3KyvpY7N8v3RN6xPJY0H5MFoP+s76GSL/E7URXmYEd6V/xTXzTb9
DPCYfE/8Tr2GGeHeaINoF31ijHFWyA9Hv4q5Fm08Ir8WbWDfCyjmdblf25ji
JUyJEx77ic1ydpybsbCSKmbI34370jjVSBOnyofG97Vp5nqMcoh8ZHxb8j6W
QTpHyLnx3exAcymSmSWfEN/1rB9ikOPlA+PbnP1000WGnMTGdHMf+pgs78VO
5V1MkCKnxfcw2zRQT2p8d2SGcg7Z7CsfG98OHW8t7RwjfyO+cynXUE2OnBXf
w5SLKCRT7o15mEbaRF+8G8vPx1xPuYVmnpOfibmycgXlPB3vlzFPVN7FROxD
fjXm2amORzavyOMxv49zIpmxmGc79irlFprZQ06wRLmCcr70u//GHFN5DnnR
PvIBfrfQuS+ihP3lF6P9DreeCTbJr0ZbHaEuZPOK/GZsq7yIEt6QfxffudxT
2xnlPrkqviO591JIplK+Kr7/eZYMMciV8u/jm5s5RQbpPCi3xfc15SIKY54l
/yG+EyrXUB3fVuU32Mdp74vXmcTr8mvoxgnDZsLwl3hVfgW3RUKXTxjCEi/L
l7NGHdbSzmXym/Heo80XUcIb8R4ax7W+hmoq5GuY7ZzmkEeNfHt8S3PuOWRz
m/zr+DZn/S4maJBvZpVyC83cJN8V3+Zss4gS7pSbWKHcQD2N8t2sV+6mixb5
J9H25gXbGeUC+XqW2HcF5Vwn17FReRN91Mpl0c7OqYhCSuXz4nluP7XUMV8+
Mb7fu0fnkBd/5ffjHVYbbWeU9+K9Nu79gyxjlAvkurhXD3Fc+qiVL47x4GDX
nHQukn8W95tyDdVUyN+LPul4u5igSD43+p99L6KEc+QfRD9VziGbs+K7d4wb
yt10xe/jW0aMB8oN1LNAvj7uGfWqoJzr5GvifJXnkEeNXBXjlXIKyVTKP425
snZLJY0LYz4Zz1BjYSllnBRzx3j/0JYddLIw5mvxTLZ+MknMjHlYvM9YP8wI
58f8OeYg8e+H5DJbvirGSW00xCBXypfHGKa8lnYuk8tivFIuopBS+eYYN9S/
hWZukn8d7ay8iwka5D/G/g6zP9p5VO6MNjA2pJBMh3xKtJ9rU0E5J8unxzGU
W2jmNLkg+oHyJvrIl9+O7zn6TjddDMl/j+8lafoG6Xwoj8R3FeUiChmW/x3f
N5SHGORz+dN4T1ZeSzufyB/Fdx/lGqrZHt+Mov85pwzSeVAeiO8g6tBAPf3x
3SL686G2YZT75KboQ8oN1NMoPx/nqz1aaOY5+ZloF+UKynla/kv0K+U55NEd
z49olxhv6aNHfiKur3oNMcjj8h/i/lCuoTqui3xX3AvqsIgS7pTb4ppbX0Qh
rfLtcX9Yn0M2t8l3x/2h3E0XLXI2Sz3XKqlihvxCvKd4L+yhlw0x3vCBsmZK
pMV7u/yC326I+tPLBvn7THefZZLFmXIhO1z/McaZJ39HWy82gJdSxkkxp2az
nfczwGfyaNTvSPWjim1yueVL97OMKpbIP2R+fKukmLPlX8Yx9ncMyrhWPsr2
c51nPgVMl/eOeeJ0dSaLfeI9ym+n2ncqaVwop8c9bX0HnUyLd1Pbb7affgY4
Tp5g5lHuX3LZKf/D9nOdUz4FbJXfYrkGraWOzXJXbKstZ5HLevkr0c6e4z30
MkkuYZ327aCThfI/Wa2NWmnjYzk52j7mD4wzRf56jPfqX0sdU+Pd3vL5MT5S
zNlye7S9/lRJFWvkh+MY0cdo4xG5L46hrmOMs1H+WuzPPGMBxewn/42p6pVK
Gh/I6XEe1nfQybToQ9phumuYSRZnytvVsYc+fXBj/J8B5aPi3d47eD4FTI/3
5Ph+pT+NMc48+bxoZ/uppY758mExjtsmlTQOj28jlk+KuSVJ7JC/G+9W9tNI
E6fKB8WYrd2GGeFg+S31Xm5uVEsdm+XdWGk/jTSxu/yv6C/OvZ8BPou+EX1S
OZ8Ctsr/YVL82zdJ7Ig2jXdxx1tAMfvFs0J9Zsb3X3KZHecW7awvppLG4fLP
LV+tH7fSxqXyGfFea5seepkb5+a3W12HYUY4OK5b3Av6bCppfCBnx3ca7VZJ
FTPkvePet00mWewj/ynOVz/pZ4DH5POirfSxWuqYH30yltmmljqmRr+Pcci5
99DLJPlJyxfrY6WU8ZR8RtwfxpUeepkr58V9FO8Y5DJbviTuQeeeTwGL5Ylo
P9dmFrnslP8Xx3C8Usr4Qq6O3xlDZpHLMvn+aGfnlEoaD8g/tnyrPjbMCOfH
GBbjlXarpIpt0a+ib6hXI02cKr8U/d44kEkWL8vfjn5g/WSSmBn3eVxL+2ml
jY/lh6IPqUM+BayWX4sx0X4WUMzr8mtxX+qfCyjmdfnq6PfOaTJJLJUH4760
voNOtsiDlq+znw462SL/Nc7DdWikiWdjbI/2U9dSyjhJfifaxTbDjPButHOM
z9q8lDK+iO8Wcb72M5kk1kW7RL9Sh0yyeDn2F/1UeZgR3o37Lb7DuV6NNLG7
nBzfBeL/aDDOFPkX8Zxx/fsZ4Ar5/wDdlCXf
                "]], 
               PolygonBox[CompressedData["
1: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
JzhJTPn//xqMkP/dPob87/X04KuDQv4PvI4FOA==
                "]]}]}, {}, {
             EdgeForm[], 
             GrayLevel[0], 
             GraphicsGroupBox[{
               PolygonBox[CompressedData["
1:eJwNzUcuBWAYhtEvEjW5BddtersVQcIS1JmBOrMAZupc3QdWoO4DK1DnGDqD
k7zP4P/+we3dlZ2GiMjQSNdkxEky4pQzsrqdVXuNdTp0ngv7knNyepS5VMQ8
C5R0lT17nwNqepwr+5obJvQYR/Yxh9R1hSV7mUXKOk3Nf3WqpHQvb/Y7H/Tp
Hh7tJx7o1gN82d980q9HKLrdTYFhPcWz/cIr07rArTd33FPUGTbtLTbo1AlK
dpkKST1I1p0ceYb0DE3piGZamNWt/CQifvmjTf8DGtQuCQ==
                "], 
                VertexColors -> None], 
               PolygonBox[CompressedData["
1:eJwV1HV01lUYB/AftdEj9BwlVGCUghIbGMQGeo4OMMZGKCiMDQzYwE6EBaGi
xEYuwE5iAxOU2MgF2EnqOSpgAAOBhZ/3j88f7/m+93mee3/33A5JafGpdYMg
iCOMxU2CYAnZ5LCUZXzcKAg+4VM+YzNbqCurR30aEEY46U2DIINMspjDXJJk
k0gmhclM4YxalZzlHP9xntSGQZDGdGbwMI/wtDXP8CzPMZPn2S3bw172UUoZ
xWqVsJNd7GYPX8u+4Vu+43t+4HfZH/zJcU5wksb20ISmNKM5EZzS+3RoH1Ry
lnMsV2sFK1lFLnlsl+2gmBJ2sot4tUaSQCKjGE0bWVva0Z4ruJLX1XqDN3mL
t3mHd2Xv8T4fsJZ1xEQEQSxDGMrN3MKPsp/4mV84yCH60JcooulHf8r1qGA/
B/iSr+ho1k5E0pkudA2dkyyCFrSkFa25UXYTAxjIIAbzIA8xlWmkkkac3sMY
zghu5w7y1SpgNWt4ldeIbGwOutCVbnQn27fMYSnLWM4KXmoeBAt4mVdYyCL2
6r2PUsoop4LDsiMc5Ri/8hvr2UAhRWxkE3dyF/GMJIFEZoa7v8xiNulk0KtZ
EPSmD32JIppc8singNWsYSGLWMwSsslhK9vYzg6KKeEf/uUUpzlDJVeZqQMd
6UQknelBT67lOnrRm1Jryiingv0coNAZFbGRTXzIR8yyZjbpZJBJFi3cxZa0
ojWXcCkrrVlFLnnkU8AEPSaSxCSSSeEy3/hy2tCWdrRnnB7juZf7mMBELqh1
kSqqqaGWbu5Ed67mGnrQM/QuqHWcE5zkL/5mnmw+L/Bi6D6xIPSeuYvnucBF
qqimvqwBYYTTkEZEEU0/+nM9N/CoNY/xOE/wJE9RQy2B/9QJvcvUY6qzmEYq
aUxnBplmzWIOc0NzM59buY04hjGcEWx2Rlv4nC/YyjbWuqPrWM8GCiligB4D
GcRgYogN/TbjYGKIZQhDOWjNIQ5zhKMcY4w9jOVu7mEc40kwUyKjGM0YxpIs
S2EyU7ifB6jSu5oaagnMXof/AV9/9Xc=
                "], VertexColors -> 
                None]}]}, {}, {}}}, VertexColors -> CompressedData["
1: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
e/fh4iNzn7Ig+IMSb19AL2b/c9JftNB37el+2G6zMGW3+XugRnn4SPQ3Ay7/
qyo25DdkRxz6NgjLHChGbVfzOXaeiDq2UQcN5hhVmX5Wq/9td2sWVRO4zoCH
llNCo3fUA6Q1ulmFVGJzha9FT5L8aiH5ct6tkHnpsGGC2bjQpQmb/xw3mWM5
gZ8NCOA3kc8SPDCA3c9zhbkvY7MgWvo1PCzqw+6mIkvuqbJYkLKvsuj5a9z+
5+S1roqLIE8JxKrH1cnzJUOBbqZNIL0KcPlhfpVTR8sQyN9IMjA92g/dGxdX
D9/N/G3/679jw41VzBn5U6jgqbli71ue8t92iY7cVfMedILJ4jyJ5fVFMMhj
bDlteSc2P6x1pW/heQpcNHu0pWe0ClD6vmW3TzVg85/jprXDRvW6NwHDaU1R
fKsGsfu9m77BY5EsSLa+xhza34vd413H6W+lCShnK1uvienH5gtTSj7b25ZB
w2uBapviFNBVHOvlD63F5r83W/3rs23+qMpeLwQWx+zoIUt6YPQ9+87zJynw
uy4ADZkHuxGYJs6c98pxAL6jCG6Fvdm/7bjH439mwRUH8R/cBHgNV2qqbmiB
xTdzXvFr5QMu/6uqyT5/RPtQ/CMCdBgLjGwrB7G7d6N1fJEgC4h4nWbd8i7s
HoLcg17qERD+6Hzyxt0D2FxYLpQp1tQPz98kmYbXvYdL8QYDhaeasTnne8K/
JtF6IsveqRBQ7x425/uDFsiv0ldRMs6D3/UzLpIMi2sIdhq+uzGvrAcunqam
rTz1+rcd93j8z2xrm3VoxQUEKT0/Do6t64Eurh2pql2T8zAm/6sqNqA8XvQm
m4CSsozLE+oU7F7kpGhHpTBgXd8O5zP327D7w5WLnM7bEyBU/Ha3WdkANs/s
KdVJfsOEKQd9Zz2JboQrLyUDaaql2JzzPeFfkznfdu0y7afCkss39Ufia0De
br1qU0sd/K6fU7yFcnYQcPiVi4ZUaQvIOltXXf6c+9uOezz+ZzZ3ketoVQgu
vZN98PFJPySn8giGa70DXP5XVWzY6OSb/7qSgJZD8WMFXhTsrlDecSrCkg45
ovW3imY3YnfX9Q+VhM9NzgOBbWm20wex+dGch7Y3DyC4rRmffWtdJ3iceUIz
4XmOzTnfE/41MXjV91DatxF+6M6ghe3NhUUNG8qeqXbC77qb9Is5UdcooEta
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
Kd7V9NvON/3V4uAsBIeuWtTbDfSB8Y1XMjpKGb/tP8etV9JR2DuJDkhhzHbe
2ibsbuvIE3d/GgsCvPMpeb+cB8blTjS9kzI8LDiff0L89BP8vsVtydZdVQRw
H7zy2tKHgt25NqkteZfChKDGS/lfz3did3HDpsAbTUx4Krj82/4pXdjdPUTR
/7Y0BQ5kq0ftTS3A5gc+rPkwO44J8XGznuufb4TF9mWjZEDpb7t22+tW9iiC
EHHhoPaYQfCtmF0ib5j32/6zzs+KPGuP72JAlYX8e62zLdh9c5eYs7UMC77k
ZKw9Lt2N3dcKjpy6aMUCS64EI22LHuxe8yRLu4lNABF9RI6xgIrd7+288XKV
IguQ+8a1DzW7sXsnBHcbL2fBLrmZeWES+P0Z1cnAVoYKq0VWFM4Veo/N8zXG
rqlIIdi4omhZo1sHSL7RLzISSPpt//n5C54HOYQ4UGHcM0zgAFHBsb8vuebM
jGeAKDIYG81qxe6889Ns3bazYLdXcPGinm7sHlHkWlHWwAJpsUJfh1192J1W
uN6klp+Efae2i3gHU7E7K1Y7c2oCC4Y1RLq0b/Zi93XEHkVkzoLQ7WIBcjo9
2P3rI6mcpgoqpGelpltlVWPzs9T0z1b3EDj2J04ROtALUfTLO0wmUn/bf37+
7o3W23Re06DbN/jCjsd1HHu7RW+MaQEDdH2b1sxY0IbdS85ZRyzxYYHEUWi/
3tOD3QeuB7g06RKgGyvivG3TAHZ/0GKUOSZKguZxhe/zCqnY3eity8TQIgKe
v3Q7yvLtx+4PbGS/MSJYILWbf3SfSS92X7ufFSy6iAax++vnrPOqxeZ6jRSR
1TUIpHl21O9K6wfGNm71ePt3v+0/P382W+lxWAwdOmzPD84db+TYX654Encq
lgFqEZ77abGt2P2h8MmilCYWOJeuCU4w7cPuTSEmvNNjCejw8bjImz+I3V0N
r610FSHBePlE05UsKnb3miNdaH2WgACC+6ETzyB2f/BRIoDOYkFA4NKUxDd9
2F1p8zVn0SU0uCbZ+yUpqBaba6xRTrg0gsC81vf0RqdBmH9otOIpf95v+8/P
N2GxnldtYgBimm2qX9PCsXcump3PNGXAQZ8sm+lh+J0iIlrxXpmAYuHpO6KH
+rF7FtXmfFUXAcM+RmvGKijY/eIrcfm7s0gomHvjUkM0Fbv7J3sqhCQToJZw
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
FNSeKD5kFofv3I/qvYa/0D4oGrSUl0L3RQfEH5yro+eOQJlXNvr4LltZtWxx
BwVTNfs1PK8y9yd8pZcr6Tz5+Dylqnk+c/8w7q94ku4bp0xrFzb+JNH92JWv
kcfoXHpau3X6PALft5D+R7LfUdB+t1VX/BO+l8LEDF56LnsmIeJmF4TvS45q
TNdLpeCcMG9gVTq+OxBbGyILKdikkZt/WpBCd5sFRitP1lOgxJvGHbQP3+Wq
1KvndlIgsrL9xxtX5l71W+63dikFd9sT1FUkmbvT1vMTl+m+sXVPL/fnf/pG
LHdbXpKjT+fS1SQVI/Of+C5xa06xzAcKlilfc8wvx3eN7JpPmW8pcJYPKz2V
hu9uKTLqkukUbDh5t9aoGN8fBtwo86Tr7HbD9xfD5lHofuf24wnzBgoCOK3w
yRDfpXnbN27ooqDX6P7ap7eZuzyX56OD5RRsm+3WM305cx/h0rR9UkDB8uVb
bDv48L03z3LQms6lpa+/2p36J5ew3CZE9/2nLArCl950PNaK70a6Z44W0Ln0
fIumiec3fO88U8R7kl6nA49FZX8zvvtrXTz9hK6zcksU2C7/vC8Ly59K+hae
aaT7xskrX41M8D16SdOsG90UWO4VXLXci7m/kRlOjvxKwQ7ZA2Z/VZj7khnL
DWqKKJhVxil/IoLvFiVXNJ3oXDoaaXjDmA/fbU2vPttFz2UPF+jqPPvn71RY
bnj2sg/PJ3ouM1jxVY6F72/h0ZkSep1qDt0dDSS+L3daIPSUrrN117+XK/3z
viwst/lo/zyziQItsYY1P8zxnSzt9ajpoeCJ1IYWti9zt5Dxm0tVUuDEOT5B
bGTu0y8mFmrRua0of/aEtCS+7xBtj7Sic0lBs+XR6zn4rpS5LMwljwKL36vO
3Zgg0X3eTfttV2i/doin/dz/gG9QPZT/ne4bowo5qq5cFLpH9VI11nSd/Tx3
1Ywfyviu6HD/1LEWCm4kyQ/MtcH3YIVr+ktZFCTvI3s9HjP3lqVlgSI1FCwx
7UuT12TupwjHT5V0bksPBcrIyeP7i4CuRatLKBjzvPbFURzfxazufzKj+6I9
l+v9OTPwfYeVu5VBIQWUWuki3ln4fv50jIs7ndtNB9e1bBHG94r4P/dHv1Hg
MTKPP2sdvo9n7B852kbB3BncLrFn8D3co+vKETYFpxuytL4FMfdpql+FZ9RR
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
AXVrJ+h1plQ8WX0uDd9n2e+eVU2fu+TBCHOrUnw/UDY+PEW74JHGhdJl+H7w
zKmfObRbfp6jNq8U34O+qdwwGKPAopWX92ITvsuGcSvvo/NE8FPa3E8DzH0y
mxV/nM4ThSVH61S+MPchPc7tZnqfc1n/eTTwDt+1325f9ZWey2YZX88Uicf3
kN3XYrIouk87G+qa/gHf+T+JxJj/oKBXO+lNdjm+H+rssgmjPZF3vK6sAt8n
PT3NnWmfwUcqyv4P+KeTn1cM0TlgfsTjlXIrviv2y1kH03misSSj+C+Hua/l
LmAZ03ly0Lgsciyfubed5Yg8pPf5TP+/1WPp+F6eSsj9oueyBjJYcH4KvgvL
zpQLGKTg7LqtltbZ+J7gOSnMpvd5eFem65xv+K40U2ubyk8KHuT/yd1Wie/v
9XNXLaR9YaBdXtc3fJ9R7HnG/RcFK3/fEXr9Hd+rrk4lt9F5orxB9ud/9ysx
dS43jspmOk+km87U3chn7l/Sty5fT+/zdddfrsrNxPfzstO0/7vPLUsive3f
+9ywXOrnHYWbQxTEn84YNs3F90tSz/+eove52ONXEbpV+H7Z723Ba9ofr9Hp
P1yN78fVfiz+QHvTZ42ugP8Br12kmsM7TsHqrZ7dDR34Tu4JlZaapOBqU/Hc
TRRzV3h47PJCOk/aY0zlyDzmvn1WzpUCOgeGmu3V1n/E9zsmxhlraNeaV2uf
konvhxLak+zo69YVEuKq9QXfRf+uSu2k9/nOqaEgvRp8Tw3mTxUZpUDI5Uzq
/Fp8190yNfc47e+uOh5yqsP3L2fdqh3pHCBgek96F77zamkGmdJ5krda/b3m
IHPfALOKJ+j6yH6nee9kHnN/crHfaDvt66onZHVy8N1pmtDIYdp5Yp1WJ/wP
uH+hKzeMUHDEoy2yswjflzdvENWk93mJnnJ2by2+X9YTGXKgPSLy5e9ndfgu
y10Ci8co+DU+ryOoEd/l7y2KrqVzYH7y+B7THnyfe3HBwyA6T/SUJlz2DjH3
kBrBmG76vzul17EE8pj7/l8hMRG06yUHzu7OxXfnsbfb3Om637FK0C/zC74X
3vPj5flB55KIwDHlMnzXsT468yZ97tqXPawbrcN3320JD0poH+1beH9dw/+A
3xO/wqZzYNT6tjh/K767L/MPVp6gwKnos3V9L75X6+YbNNJ54jKz59exYeZ+
g+ujQwd9fpcesf7x+zNzN265ntZM+6X59ju7/gc8YPKFUyxd99NWKB5+XYLv
VvejWtPoHFh3YXmH+ld895B7vSycPnd9yjwBjvX4XjE0d0yVPnemr7k/jDXi
+8PI9IM5vyi4esmp8007vo8bT8xwo3Pghpzy481sfE97oFoh+YeC6Wu5ou6M
MPc8Do/If/MU347f52zymPtPT5GjI7S7bEy5ovs/4Gt71uvn0efOutcg+NxX
fH/28oSxzX9/d5UeUlxThe8vLs1aH/ffHPQ2Z3Z8Pb6v5uuPiKVzoN8mec2P
ZnwPT+M0htJzh+nSseYT3fg+rXiO4lc6Bw7s9vfx68P3xR7L9U/QeTLzpQP7
4w/mbu82tnk53Q9VSkVNSuczd6s4N6+/dA4InJg73zUP36P8ea400OduvNX+
uFQNviferKfm0+cu+Tk3l0ItvlfyZlYU026+VHf3mgZ814hvyl1J1307mZSm
FW343j/sZ+JIn7u+uMzFAmx8j+j0Vlzym4LhBn6tgX5833C/VySJzpNbaal8
PKPMXdakYaM+nSfsfcKXi/OZe7HGMXkZ2oMO1b0R/R/w02s3jnTTn/PvRo+A
6AZ8Vyie75FH+xaZ+GVi/wPuF1xjOYeu+/sVR6ijjfguaP2k8gOdA7OmbD4/
bMd3zyVZilvoc2c9OhFgN4Dv8fOlG5xonx/n3XSMg+9TD8N+jtF5sprnWfLG
Meau8dVD5yh9fi+pBKiKfmHuAl8jQm1ob83wvrX5f8CfCOtbttCf83UOd2V1
C77PyjV2PkX7oZcv2gaa8L0jwHeeE+0vazvOzG/G941mbpH/r707j6bq/fsG
jpSKZGgeEJKESqYUV6FIhkQaTBGSJimlJCkZGgylSTIllJI5SSLzPI+R2Rmc
s7eQTHFfrWf91tM/Z33uX8/9XX5rPff55yyvPz7H2fu63vtzlb0vA7zuqKuk
SS/rnnn/qLZOpx/Pu7hr863NiZl3Wz+fWY3Yfa9r5s7+D/CLbVXPtk6RSFaN
y8Z49O/9/sYuOwM8f0uftCg05v29j2ouMcrEvpOtgvq2YOZ9zQ7aqcTffTWf
kNupjpn3ZMM+dl7s66z5975um3nnEA527sc5YHJ61/Si/wCXDhn61I9zYGTB
psKM3pl3nZIAG7dJEmnIzc2pG5h5j/KIXKeOvfCoUm4dOfOu6bhP9gLOE39+
Ew/Dsb93eVl07Pf6Jb37zrtFeX/vlywTSviGSCRmJslcUTTzzh7zZpsF/p72
ndnqB7tn3n++yrZ/i3NgxxwuUdOOmfd5B5+wncWucfG+k177zLt3FpvL7XES
DefZJdtTZ97baemHh/C8YxPZ7F4zOPNudXlpSxL2FZc/5X/8PvM+ljh1MfZ3
nqwZPbdl/O9954IlBV247oJjuUXsuX/vVcHaHyxxDtiI8sxxLJ55d2zfOtqL
cyBc2KQ+onfmXWLEI1YHeyJyiePonnnn1jxVMQv7U5XzblWdM++aG0ZKxXGf
HzFs8HxW/8z7sjl9uwx/kSifWmtpPzzzvjGMYiKGvdzVqSNiaOZ90/Hwr004
TzR27brPOfH3vowU74/EeUIJmm5g5vy9z5n39k48/v1klPle5pXMvFvsXWi3
D+fsFBGRc5oy886nT/PowfPuun7+zWe9M+8N8qdKXmMPuNCzLLJn5t1qt4l1
Kh6XTrqOZy8wZ96fOVEjn+N5N+/SHMukHzPv249MrgnAriOlwenyH+DUwWr5
udMkcmZrk62e+Hvfq5S74CLOk+8v2Ec25Py9a4e9T539+zmxmYsNVctm3ksn
X5NROAfy5MoEv1Jn3inlPXKXsQ+MTvEL/Qd48mvNRWbYbyj7bgunzLw770p9
vg33+S4Lr3ukkzPv3beED3TieWcVRaM1jMy8vwtu9RnD7rNR8Tr6OfOea5/g
thXnSfBll/XRk3/v1u8W9zvjPElRkTj6Z578u35mHf3SOZwDXTzbJnkrZt7T
9RaL0PE435dkJDCHPvP+5X17DxfO/fuPW9K8/gNc4lt42O8++EFxQZDLf4Av
XDxrXQYelw37V+z/+n3mPbRXcpMEXi+wn7l6iW105n2gmF3BGrtXnnL9rLGZ
94Ilt7adw3nSrSjH/fjX37vfwknbDHzcP9N26xt9+XvfwlWh/AvnwAH7eLpD
1cw7c+q2owQe53qhVWnz+2fe6b8SN/tjv0cJtqtkzLxPThu53cdO69aOavsP
8DX3LytuwePyqkCRS9/QzHu9nKvZ7/+vkfvQqL1/bOb961KehWXYnRIb1cvH
Z94jzd9FJOM88d24fiJ16u/9OsPQa+cgXo9rF6s+y4O95O37ghd4HUjztnmt
Uvv3fk7g27qjeBzWtU+IcDL+3u1P5qby4utXt3Or0wjx917Vf4tvNnbpxl15
Zf8P7mCemhKDx7Od4Oeuth9/73Kl1s8r8Xka+lUU3jr+944c9rko4PN+8b1w
cdDk3zur98dpc5/dx99f1fWsR8If+4c635ewFukgUYXot0n1i//XWzR99TKY
JFoRsqxgXiLs9wy19vZ9I9G2GKn4H46w37q0cqoZj48OU2nHHW9h32gqZBbe
RqJilL7R+STsMo9TNL/j64qV4cKs/a9g7747OKrXSqL3Nx52ZNnCnuvvmzT9
ez874bEqtZew72z76kq0kEjiTuVQpSXszPe3qjlxHVOXF685ImB3Nh7a4tFM
ogtTxKmXh2F//ypFjI2G1yPbc6RCQmC/ceiszewmEvHwiqzabgT72i/PRb/j
dfv1ECWeeU9gLxd/rXGlgUQCopNPA3RhX5bgr/b7PtuPhgJdux/Arj+9cPxb
Hf7ceLp62C7YpbVa2hJ7SZS8bcMiIz/Yc84Mhsvh3NxkuUDORg32ZQHDptd7
8HELuvpVyhd2HlPVnReqSSSz8/W2r4qwh5TdnaveTaI3rYJqpTdhj3o6vyay
kkSG1ZyUaVnYdRvdJUY68Tg3DJ6/+Rrs8t8XKv1+jurjxqDj5RKwWxMp9Gc4
lxTW29UecoHdfWm32pdSEkW/8n6oJgT7ovstV+TaScSUm0NTc4L9tD9vREIx
7ueLnHv1FsN+MJaNkY5zabaVknH7SdjnP/k+4VVIIv7sLZY/uGGn+nHvlMW5
lO+2uVLBFvb0OzY1GvkkWhwW8UCWA/a4tRP2gTiX8oMVslQtYGeuXOHbi9c5
Q4aHAgd/EqC3iLKpduLcOPZ217pBExL0jx9Tjjlkk6jNZGHTViYBesuGw9dW
NZJoTIoWq2dAgj6s7uVR9YlEk7n+OpOdBOjdcgO1O+tJlLj921kdLRJ0V2Oi
efFHEpksnyW8uYEAPeHCu0IDnBv6m+5v6PojN1j5T0MdZeV0EsUW2ZRXFBOg
v1rumauJc+PolAI77x+5wcqdnh5XUkgl0Sm3uomSTAL0DXQOXmGcG68Z290K
pEnQdSztts9PIpFw9lX7Fe8I0I++iihoLcPXTR3um7PESNCPhI46psST6LlG
alVCOAH6xUvOna4lJLL/EqiSuYwE/ZdKb+amOPy9IsbqrgcSoM9jtxEdx/N6
qafXRN8CEvQ6l+Qs1xhch297s6sHATpDMmnpATyv7y/qULj8x7xm5S/XWuQG
viDRERGuzkBHAnQtyUbB23hem6etPXh8BPYMeWrmmTASqQkV2yVawB6TdlHi
0Wd83rcseRNFg10z96US7zMSid/xkincC7uqu+Wii5kkih/mVRNrhf2aFaf+
yUckqp5YwJOlBPvnQht9iQ8kelbkEVdbDvul9w+CrweSKMbnecI1Udg/unT1
ReJ5t8U8ejwqC3brylmS2ndJxDGQZkpywx5imXiLgvv76nWnbD3jYX8z/dni
oxfuG99HBAwNMUEXFt99hMT9PbfG9dXmzwnQb3FmkjXXSZR3sPLDyRYm6Nu8
Y7hTcX9fVD41Z9kdAvSRgKGPXldIpHltLEv+MxN0NZfGl3K4v89OWW3/7BIB
eqYnR3r5eRKtem91e10kE/SAAAVPq3C8LhPJu1NiTYA+VLqy9PkpEv3K4r2y
7CYTdK8ALWUVPC/GHwQa39IlQF8u7hbbb0Mix26lDw1WTNA95OVPpTwkkbuR
7qcYeQL0Oj/dyNdmJHqxcqvbBjUm6LccF2UX+JNoNJpNY95KAnTGFb8LZXh9
sjzeUqR5KRP0k0E8EXa4/07j3CF/dRp2cdlHc3bqkCjgUIBgMMEA/eXy9mU+
N/DvmfO1vayTCbrw9gGREYT7lttrQoW/MECP5jwStNqVRL63lodk5zBBP9el
s7hRnkSlodJWfPcZoEfFPwldiset3q7I54vCmKB/51U/UCZJohstzIA5FgzQ
rz3097NxwON22+YHVy8zQefnlxrOWEmiDbUWtffWMkD/ufGt2MBRErWSEqPh
+5ige2kSvJ74eizbVBovQu0H3ULKbcEL3L/2Z9vxrBZngn57ab4g5xSB2sTt
T6992Q+6ybvlh6334uugEbvp1SEG6Af0szr5cX+sm3TMiG7aD7pVU/onXjyu
TOw/JSllMUB3mktJdWshUDpTbCKcux90Du3Xn29uxuuIN7NPJt5kgB5xNa1p
YQGBtnwWDz2UTAe9yupC6CNREu3aZ5K3SYMB+jNJ+3Ev3F9Gfb4+PWJIBx1V
bJpeJEAiIeFOsdaJftDvtTque/SIQM221x9u7KOB7vXOEeVOEyjFbEt94pt+
0HNbyxW7rhBorO38WZczNNC32uuZHOnHdQxH268Z94MedDbTd8qUQHpS/Osn
qVTQuTRWiNyqI9CZlaqHar/TQafb6vbZbyXQA/kn095GVNBR1v6e1gwCqYgs
PTR0gw66WL2XqKcAgdIUvhReiKOAPiahWtuD+49p//U3c2fTQZ9OmqMS2MdE
O14Kc/sy+0B/UFUnxOlGIFPnSM93l2igT25YvSM6hYn6ohIo1Yv7QHfcKydz
7SCBen5Vm/jUU0F/NqZ0PNKViaJCbhqfFe4F/brlGml7aQJl5LcpHVxJBV1A
yI1DSIWJmo7Kchpw9oDe0bfsV/A4ExVt2lUrokkB/V02lW6Mr69Sj55zVWZ2
gZ7dEDUals1E4fc+i9zf0wf6WY3w0bmPGEgibFxBDXWCzruHz+jRVSZSLE04
cU+sF3SLQ85BFvj6FDG5cO1noXbQRXoFmhZIM5GBmL+qb2E36KNOJos1DvQj
jZCn11bItILeLrCAp6aUgR6Pvh2NW9cFunFTwesTZnR0jepYRI9pAj3ayUop
9CADPbw62+fm5g7QjV9HTX7YSEOOfrqD7MfrQJdVPveh9Eo/KrkaaM6V2gp6
jLTVVuVsClp2bqRkq30F6JOX9vUY4uuBiPe7wiz3JtBz6j4FW471InH7PsMW
3xzQOYNrBgxbqYjfsNzkh3ItSz/KrXjuRBHub/zj9UxOdKN2ldUVw08yWPq/
6vhL98/NYaegq2rrDrznLGbpWovHFQ+4kcjspB0tQLgDjZcMPI6LTmTpPKgu
w7wd9wdv5i1KcuhBv8hgDpkDn1h66N4l4h8Vmaj2chD/r/AmlFOuq7hxfzZL
P39BhG6G16s6Bh/9FxV1oBtOlNT155JZOv+Yvr5JNwUJewbqjsRWog128koN
TTUs/aLsAzJrDxMdTbqguqawCUk6Wpd7/vjM0vWSuiJFPerR9O651KADn9HK
uq1Fr5XaWLqL6Fv+kLt9aDdhdaJgYQXq2bTiYrp5HUtn+zdfLw7NPcj1vhJd
KPO/u27le2TanK1+5049YuX/bv3/ff3v6//n15cFnbdlFuUgrzzF3Z+6YlHU
3dqaw/KFiJX/u/WrXjns8BTsRuJ6HAa76cXow6Mitnv6TYiV/7v1dWxcatW7
+9ETVwtp3tF6FBA61TbmUIBY+VEZZd8bs8tRkJugU7l4KrpcfkFszftalq7a
25vy1p5E0zpNdZNnvyHJ6lxlZat4ln7ftnybyqEeNPXoi//Q6VJUkbhw/apv
DSx9PlfSar9MEln6mtXa9XSh/f5JEpobP7D0I9Wbq/nwujn25cI4Xdd6tPp4
0TjhU8jS1VuSmwfGSRSwSuDO17Be5FHKV7DBIJul56hO3FVcQyKVdXni9S6t
SCRNN8+QJ56l/5+zMICWx92xD7CnoMmrQTxHmKUs3ZmS/sPqKYkcut+w8x7p
RCE0zz3GUyks/V919qlYa2kmU1G7h5/7nqgalr63vm/JpkoSiXLuqdVP7UZ0
LY7tscc/svR/1eEb2BgVFEZDrTauvYKT9SxddbPCq5sjJDKt8nBSOdOLFluO
l8ZwZ7P0f9UxZjDiyrfREdl/eFvt5ibQXSJVLxh59qGRIVJUwyUfdAPT3Xy1
fnRkrbr//hWLZtA5biSPC4tR0NSqRAeHkWLQJT00128JpiPteW2ub7ybQReU
CX2UaE5BdXnW/qGhpaAf7b0gvNeCjqRPuRzIiG8CnSt+Y4KdIgVla8jEcd0o
AX38FIUM76GhsKDwJWtGGkAvOjr5XeBjH1K2vDNQwlkI+ocXD1++3U9DhK7X
moe9daBn0ZabXV7dh9TzLufv9/8CuprZpk7iOxVpHzc/ruJdy9Jj2iVN1X6R
aH8uY+TNh14kp4EU9zpls/R/1XGXqJfqm6ai0LqbbBUfakG3nXxhsY2J13uc
plTa5hzQj5ZmTb2xpSG63BNjK6l60CsGKBV8/n0o5Sl9O09BPuhvu/ZrL6ug
IakaLTuvqAbQBSLdDBzwOElZcJWy5o9xwspXLVkbxjNMQx0CqjpjMo2gpzcd
91lxh4LkBsn5npQy0FXCV8YMfqahoo3K4zrnGkD3vLQtNeQsBUmZS2vbiZSB
nnr+J0NNi4aWJeSqy2bWgX5jwsLCYhrnDFuuleNQEeiqI7vEflRSUYVyyu5N
PLWgR5jlK+kG9iGOnTKtig35oOfz5SiMfKAinT32R3wya0DfxDZmujq4DyV1
0gYFlhSA/oAvq90br7v9Lvpc0rWrA93jR1Pt8F4KMjlq9kxCqBT0uR1nNN+M
0FCIZO+Ty0qNoEufkXWVtKKiNrnk5QNXqkH3sz8pczqJjkaPT92zb28GXdYq
zGPHKRpKCUiZLadeD7obTz9vjWQ/chC9dH/93a+g84QlHCuXoqP7Mreqdg43
gl75QLnw4O5+5DmurCD48yvo8t75USd86MhPSN9AXasZ9LhiRvhz7n5E3r24
3070K+jRgycrQrzpqN7A4IaZZjPo/VNllXfw526QYnBnacHu5ZL/7elWOjK3
23S5eX0T6C8yjvedxtepbwnzNex/NIAe7Hf7Ej2PhjqjLLO0b8IuE3viGHmE
hkxGHdpcZ9WDvpyXm+vUMRoa59DuURKFffLeTt/zgjRkFK3rGcJWB/qw79qJ
wu00dP+WQqL2I9i3zQnL0hunIrOFS5/dflkLesXrvW/27aQhPbUf81Ki60AX
beg+w/+Niny15/XuQbWgDzx9ut5Yk4bknOYwnifWgf795hbvPdE4x872Omo7
14B+bKzoUKUsDWkdSFRKOFYHek12d8VeWyrabJFvxvCtBt3psUQEDx8NoY4D
wTrDtaDf4lnpEbcD59JPp07t2dWgh6mdzr09F4/DusSMFc21oOsPOjixa1GR
Y4jdM5VV1aDTY72K69fivt3nYPlGjTrQzdlCNz08TEVdEjeEPSyrQR88FEF2
GdCQS+NEm8vXOtD9dH9RnbWpqOTSgfPua6pBH/Baf+GYJQ1xjETfDBGsB30F
+4bgpF8UJBPZsjhboAp0y8vVC+J34Hl647PI8ag60Je2NBw9+ZSCJOQW9Gwx
KAedYnnqaiAPDeVJbz7+jlIL+rsMtipXKwqS7VTP4M8oBf2Fo4Fz2SQV+WQu
iHkQXwt6LZf0QRVnCspa9KtCYE8Z6LIHxR40S9MQ07Ji6WOzOtDz6HpJ26Mo
iCh5++je83LQXZb+WnjhIg3Ftz65K3a8HvQpDf8SttcUZM/zJmFfYTnoAdu8
2tojaOh5pv4Va84G0Hc3Bfr5OeHj4E1oZSiUgV7wlnP3yec0ZGPCx0DD9aCH
xsUsvSlFQZlvmk71bygBfbq1n1/dl4aW3MjhU42rB11OyoOvQIKCjvAM1jfy
lYC+PuDp9+YXNLTjxB25O9wNoCeZXNMVwcdZKqa5R76oHPQo/qydK4ToaISR
vlqzoBH0/TukfCqicM4k7x7oP1sDet/HdSdKGHS0ueLLUF5SC+htLWyhw1k0
5Dlqy5F8ugH0jccujf+o6kc3HySc42e2gX60/dyQZBwdnVYypyzNbwbduGhS
xOIsAzGnPXXXPukAfbnzhaoBw36UWmlpKLimFXTrrVtne+QxEHlicduCuV2g
rzgk63U2vx+x+Z0MN85tA12qnVL2nYOJluz1Depa3A36grGXhrR1DBQece/T
0Lp20L+TPAk/lJgo++llhcnxbtBvB3YXzz3DQAF871Ws73eA3vpKQbLoFBMZ
l1tq72jvAX2c2zdyaRIDydo2n3BL7wQ9Nnl1ZUwkE2Wm+QUvLOoFPfUxb1zD
CAMJOAuNBXZ2ge6Zu2xOYAMTHeZ9mnAstg/0hqtfU5YrMpGiAa/e0GA36DwC
tWlyswnEluekQzlHAT1MpYKzGB+3e7Gx7Jp/HDdWviSlKlZWhkAShxePJAhR
QW/p9skqCGYivTRPnlnRvaBbW1HXftMnkInNtXvqCVTQ3SPLrZ2ymajoZKRo
uXYf6HMHF4zWOhBoneIOuyXraaAbP9K6bd3GRA1FSwpa8vtA/zjWKcrhQSCV
tFV8Az400DWvCWYR35nopWWWarQQBfSEaN1zrwIJtGdbnS+ligb6z7U2Za5s
BJplQnvvbU4B3XPPkzjTUAIZnRdfms9FB122pdp0iJtAZRbjFxf7U0BfNrm3
YMkrAjEPyJ4TV6SDLrU3Y+36JQQydohNkf9IAd2l8EQrezKBmgq3tLFZ0UGv
zZvWSFhDIJ8V8u9mMymgb+RVPHPsE4HUNNN12+7RQV/Wtoh6aTOBNik6hihu
poJeu0qkLLWYQHTpZU9X5dJBTz689HykJoHuSjLy53lSQddWtLLzbCSQn8E9
nsIpOuhTiXL5JocI9LhRyHhTMxX0aP4xQ/NeAu06rL8kVKUf9DPahGnFaQJd
UhKcHlagga712V566TCBMrQ6JHZe6QedolbQucmHQAoPjbnGY2igB4icrg2a
TSLxn4cpDfn9oJtRDfa3vSTQVnEhIwVJOui613eRP5eRiIdmeyN0OQP0kPGe
iegcAjl7ax7SCaeD/vwF44nmBhKx225sSLJngP5rQZ1JXxOBbv+0C8jm7Af9
U6WqUrkKiQaCOxxq4xignxO9cm0uk0D8qX05OX/8XSsrDw2dlySnTaITFRyP
3/cyQI9+9dVZmg1/rmSWu0t8P+jn2PbWxxqTaJ/J6KXAlUzQ53cP3rojQCK2
AdWDrb/6Qa+JvV7gc5RETNMEnS59JugGXoFsfmIkKmx1rDTXYoDeY6R/7dNJ
Eun1u240cGeCfrl+dNGsLSTSXtkwvP42A/Qi3YKNuy6SKFjQ3aLqDRP0Szek
4it2kCjzRPupwnwG6ANcFKERdxJdDSt3S2xggq72dt+8b7okqm2/K947xgD9
kbJDop8PiSiBPryNE0zQ4+5rUTQPkkj3Z4hLkwTsRydf1A36k6jERiq78I/7
Glh51Fv9IA583rleah0N1WWC3vZDSV/sEYnKDxdSvRQJ2PlMjuofJ9EFZN21
9hQTdBWjPXUHnpFoGU0navKP+0pY+cGr7F5SZ0g0VXiLWuLLBJ19p0abRDiJ
NncuXVJuRYAeVqJ1rNuZREdHoj+tj2OCznk7QVT7Ja6TcUNj9I/7elh5mJ2B
YMQ1EgXF6iSRVUzQGaNzjSpek6jmwpK7jf4E6H0mXh/3eZMou0R19uURJui5
q86xKSeQaHbyr9BtMQToexJs50/5kajanE57uRR2t/eB0otTSdQku8BzRybs
VVLh1n4P8efy7DafJf/f8J7nySYfSHRAwbwiqgL265Fsk/vxuOpctPjwgC7s
QRbGriKfSHR2053QWe2wP3Z5t80bj6u3vlM+p4/BHh3JbPTPJpH10tikr0zY
M2l0iwN4XF2ccnDe7AJ7Q+Gr5NRcfN4vuohdnIB9JNAlv+4Vvk55xYpE3IH9
u7Vt+tMCEkmoTfIOc5Ggy34hJYm3JPoWNmvk4B/38bHyPtuBj8rFJJJdvaBI
S5AE3Xsl2+PTiSTqZ190xfkNAfqX+7/Y75WSaK/n7VuHVpOgP7RsFNycQqK8
ObbVdukE6PlRyqLB5SSKTP9QrvDHcwxYuW7F6voDaSTqYgwpvM4hQDebHdVx
sZJEKZRSdvU/nsPAysnM279+3/dtrV22puaP+75Z+QJO8fXa1STSVFR8t+qP
+75ZeZ6juemWDBKtqKg7ZFFDgN5w6MykWC2+ztZv7hf/4751Vn5brKTHJJNE
sbk5l0O+EqAXdqg+na4jkeLbz9ukd5Ognzg6+4ZDFonuXiwrfdhDgC7SnC3z
qQGfR2fuvEQ9EvS50j0SO/C8Tku7bniTQYCea+YgbNBEogj2+xlXjEnQ06wE
xyZySLQqNBuxDxOgr9vLoVLSTKJH7rd/dRwhQc8ws5D9inNDz3zximWTBOiD
H6voOl9JdDJ+vq2lFQm78tmggnwSZaDbkcc4YY8qfGFd1or7QKcgyc7jsE/O
55U0KSSROudqC1Fu2G/eVUn5va/qotGlXKWnYQ/sU63YVUSiIXuJXzILYQ+O
z3X/vY9I+peyuGQn2Nc5mcxJxXVWHwwL4eWHfc1tB4ZqB4niyl2jvlyE3aNM
U50X5ypj7U2VAAHYxatrxFZ34r6rznCH9xXYH3KVulTjOlkRSTVfF8MuUaNS
K9BFIv4NHcNvrsFeMyExoYVz26cjXkV2FewiszuUFbtJ1Hfg3pYnN2Ffx+b9
wAjnthrv9V7OtbBHC7dwu/fgvlGfZ+NaX9jfiA4m/n6ujob4frM/n6vDyonS
Pq+6XhI9FFJspfrBbikaKEDi3HZmHBtnKsMeLOmqu4ZCosR9RJ9XEOyta8oe
8+NcFTalpa1Thz3Uq/vyESqJTjdlalY9hX2WXCXfHJyrs8K/OAfrwC42Mnzo
Oo1EVt8S5AtCYV/prkSpbCSRg5LMiPF+2K8q6Vx5SCfRk3dqZedfwN45dtL1
BM7VcG7BfrXDsDdo8jU86SeRb4n+47oY2KmTZoZtLST6mnMi/5Yl7OltMmz3
GDiXMoM+DMXBXi93arsuzlWDdyGW721hlxvuunqFSSKerxVsI+9gt+8u1qxq
w3312gPKmqdgV170jHacwNe1sO8co8mwfxDiSj/1O1edQx6qnId9q+q8DwdI
EvVciH438R52FPrhLB/OvZiJ+CP7rsD+8TxNGg3gPqT7sTfjI+z7XoVaxuLc
Oz9rh9IWD9j3SD67JPydRNtleItTP8OukySwSQnn0nyj0zGEN+x73BY6/cR1
npd7rzbNhf3pun1Hy3Eu7RZ0/1HsB/vtK+tdSwdxjiXI2pMFsG+e477wPM6l
qvIDKtSHsC93micZOoTPy0X2GrcS2PnT9msL4dyI33XstNBz2Ke4c7+cHiaR
7g2/kaly2L9XC6xPw7mh6X5jLnsU7O8fCzTL/yCR144YXdNq2MOOhzkL4Xkd
Tcyfu+Q17EKKO1cycZ0mbzG/S3Wwm3trm2vjef1TBdmtfge7i2eHw4MREsnP
jduxuxF2o5iEFBU8r28GxsfIJ8POCLsWvP4n7kO0HDQrm2E/f4DonIfn9ejT
lUPJabCvNLttnoLrbK/po0m0wm4x2Gb8BdfZaqjFVf0Bdte1iwMUR0mklZ9w
9/A32LO6pr9Y4tyQmi92+HIm7DVxyeHvcJ3SSvN0mw7YR3U0ln3DdURKm7Wf
ZcGeYxx3RHiMRIXs/L5aXbDLnnzAtwvnxrnv59UPZcNe8rlJwQfX4d2//xVP
D+x9RRnhobhOS4Se7tcc2Jvs7ccYuM4S0m5Fdi/sd5enyTNwndNuJnekcmGX
iJotqz+Oc0ObJmVDgd0y2LpiHc692fzkcuk82I0Wpx55jetEMHPcBqmwl/nR
z+nhOpmPRrMr8mD35TmsyTZBovKzcjm2dNij0kNUj+I6zxLUx4XzYRd/zi6z
D9fh+Zwm8Lkf9slPlLfHcB1JYfMG2XzY19MlbIJxnR3CGcXTDNi3sBdQTHAd
I5OyyJ95sNdcmUr8huvIKIr/kCBgZ7vOkN2G64i0nGlwz4Od0AsREZok0ZWW
YoGtJOySAVYuy3GdjhhTCSIX9tma6k9NcZ3cTSrv1QdgV0TcxeN4nFNT1e+e
yIVd4PyygKe4jo70+FX977A/q+OJ6cE/d4nIU+blwl67J8+gGde5Or931GoQ
dne2rFOduM6aIzbDE19gT/OXq1j1i0ScW9iibg3Bnsvg4P99HLg0JhztcmFf
7bVW1xbXmf/yFDVrGHaH6z+3rcXfp1ooalIkD3bFe338CbjOjbQULo4R2MUP
Nynr4jrUfXwuxXmwTwU8//ET19nEEZao/BP2HZVe2ua4ziXZR3KC+bD/0/uV
/9P7Ef/T+43+0/sJ/tP7hf3T+wH90/t9/E89z5/VO6vnt89ZMrg4Da9HAhqV
zsSHwf5UxL38dBOJJmxVDaaNYZfx/Lj9Oe6DPaQfFX77QoDeuMQ26udTEq0Q
szsoqAW76KKrHuZ4HSKwV27WwD3YbRK4Ds8vJpHNWLaR+x//PsnKyybdNRta
SFQ80KZ33BJ2Vs/D/5/aZ+Gf3jfhn94H4Z/e14DV+7+7f8F/d379F9nRuqQ=

           "]], {
         DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
          Frame -> True, FrameLabel -> {{
             FormBox[
              StyleBox["\"\[Omega]\"", 18, 
               GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
             FormBox[
              StyleBox["\"k\"", 18, 
               GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
           FrameStyle -> Directive[
            GrayLevel[0], 
            Thickness[Large]], FrameTicks -> {{Automatic, Automatic}, {{{0, 
               FormBox["0", TraditionalForm]}, {
               NCache[Rational[1, 8] Pi, 0.39269908169872414`], 
               FormBox[
                FractionBox["\[Pi]", "8"], TraditionalForm]}, {
               NCache[Rational[1, 4] Pi, 0.7853981633974483], 
               FormBox[
                FractionBox["\[Pi]", "4"], TraditionalForm]}, {
               NCache[Rational[3, 8] Pi, 1.1780972450961724`], 
               FormBox[
                FractionBox[
                 RowBox[{"3", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
               FormBox[
                FractionBox["\[Pi]", "2"], TraditionalForm]}, {
               NCache[Rational[5, 8] Pi, 1.9634954084936207`], 
               FormBox[
                FractionBox[
                 RowBox[{"5", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Rational[3, 4] Pi, 2.356194490192345], 
               FormBox[
                FractionBox[
                 RowBox[{"3", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
               NCache[Rational[7, 8] Pi, 2.748893571891069], 
               FormBox[
                FractionBox[
                 RowBox[{"7", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Pi, 3.141592653589793], 
               FormBox["\[Pi]", TraditionalForm]}, {
               NCache[Rational[9, 8] Pi, 3.5342917352885173`], 
               FormBox[
                FractionBox[
                 RowBox[{"9", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Rational[5, 4] Pi, 3.9269908169872414`], 
               FormBox[
                FractionBox[
                 RowBox[{"5", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
               NCache[Rational[11, 8] Pi, 4.319689898685965], 
               FormBox[
                FractionBox[
                 RowBox[{"11", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Rational[3, 2] Pi, 4.71238898038469], 
               FormBox[
                FractionBox[
                 RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
               NCache[Rational[13, 8] Pi, 5.105088062083414], 
               FormBox[
                FractionBox[
                 RowBox[{"13", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[Rational[7, 4] Pi, 5.497787143782138], 
               FormBox[
                FractionBox[
                 RowBox[{"7", " ", "\[Pi]"}], "4"], TraditionalForm]}, {
               NCache[Rational[15, 8] Pi, 5.890486225480862], 
               FormBox[
                FractionBox[
                 RowBox[{"15", " ", "\[Pi]"}], "8"], TraditionalForm]}, {
               NCache[2 Pi, 6.283185307179586], 
               FormBox[
                RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}}, Automatic}}, 
          FrameTicksStyle -> Directive[18, 
            GrayLevel[0]], GridLines -> {None, None}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> 600, LabelStyle -> 
          Directive[18, 
            GrayLevel[0]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
            "M10DefaultDensityGradient", "GridLinesInFront" -> True}, 
          PlotLabel -> FormBox["\"l=16_t=1.0_J=0.4_m=0.0\"", TraditionalForm],
           PlotRange -> 
          NCache[{{0, Pi}, {-0.5, 2}}, {{0, 3.141592653589793}, {-0.5, 2}}], 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{
            FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                GraphicsBox[{{}, {}, 
                  RasterBox[CompressedData["
1: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
1Ks=
                   "], {{
                    Rational[-15, 2], (-300)/GoldenRatio}, {
                    Rational[15, 2], 300/GoldenRatio}}], {
                  Antialiasing -> False, 
                   AbsoluteThickness[0.1], 
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]], 
                   LineBox[
                    NCache[{{
                    Rational[15, 2], (-300)/GoldenRatio}, {
                    Rational[-15, 2], (-300)/GoldenRatio}, {
                    Rational[-15, 2], 300/GoldenRatio}, {
                    Rational[15, 2], 300/GoldenRatio}, {
                    Rational[15, 2], (-300)/GoldenRatio}}, {{
                    7.5, -185.41019662496845`}, {-7.5, -185.41019662496845`}, \
{-7.5, 185.41019662496845`}, {7.5, 185.41019662496845`}, {
                    7.5, -185.41019662496845`}}]]}, {
                   CapForm[None], {}}, {Antialiasing -> False, 
                   StyleBox[
                    
                    LineBox[{{7.5, -185.41019662496845`}, {7.5, 
                    185.41019662496842`}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -112.13876485943427`}, 
                    Offset[{4., 0}, {7.5, -112.13876485943427`}]}, {{
                    7.5, -37.7515244883336}, 
                    Offset[{4., 0}, {7.5, -37.7515244883336}]}, {{7.5, 
                    36.63571588276707}, 
                    Offset[{4., 0}, {7.5, 36.63571588276707}]}, {{7.5, 
                    111.02295625386778`}, 
                    Offset[{4., 0}, {7.5, 111.02295625386778`}]}, {{7.5, 
                    185.41019662496842`}, 
                    Offset[{4., 0}, {7.5, 185.41019662496842`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -167.9291951377598}, 
                    Offset[{2.5, 0.}, {7.5, -167.9291951377598}]}, {{
                    7.5, -149.33238504498462`}, 
                    Offset[{2.5, 0.}, {7.5, -149.33238504498462`}]}, {{
                    7.5, -130.73557495220945`}, 
                    Offset[{2.5, 0.}, {7.5, -130.73557495220945`}]}, {{
                    7.5, -93.54195476665912}, 
                    Offset[{2.5, 0.}, {7.5, -93.54195476665912}]}, {{
                    7.5, -74.94514467388396}, 
                    Offset[{2.5, 0.}, {7.5, -74.94514467388396}]}, {{
                    7.5, -56.348334581108766`}, 
                    Offset[{2.5, 0.}, {7.5, -56.348334581108766`}]}, {{
                    7.5, -19.15471439555844}, 
                    Offset[{2.5, 0.}, {7.5, -19.15471439555844}]}, {{
                    7.5, -0.55790430278325}, 
                    Offset[{2.5, 0.}, {7.5, -0.55790430278325}]}, {{7.5, 
                    18.03890578999191}, 
                    Offset[{2.5, 0.}, {7.5, 18.03890578999191}]}, {{7.5, 
                    55.23252597554224}, 
                    Offset[{2.5, 0.}, {7.5, 55.23252597554224}]}, {{7.5, 
                    73.8293360683174}, 
                    Offset[{2.5, 0.}, {7.5, 73.8293360683174}]}, {{7.5, 
                    92.42614616109259}, 
                    Offset[{2.5, 0.}, {7.5, 92.42614616109259}]}, {{7.5, 
                    129.61976634664296`}, 
                    Offset[{2.5, 0.}, {7.5, 129.61976634664296`}]}, {{7.5, 
                    148.21657643941805`}, 
                    Offset[{2.5, 0.}, {7.5, 148.21657643941805`}]}, {{7.5, 
                    166.81338653219325`}, 
                    Offset[{2.5, 0.}, {7.5, 166.81338653219325`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.13876485943427`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.7515244883336}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 36.63571588276707}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 111.02295625386778`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 185.41019662496842`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]], 
                    Directive[
                    Opacity[1], 
                    Directive[14, 
                    GrayLevel[0]]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                 Scaled[0.02], PlotRange -> All, Frame -> True, 
                 FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                 Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
                 NCache[{Automatic, 600/GoldenRatio}, {
                   Automatic, 370.8203932499369}], BaseStyle -> {}], 
                Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               Directive[14, 
                GrayLevel[0]], FontFamily -> "Arial"}, Background -> 
              Automatic, StripOnInput -> False], TraditionalForm]}, 
           "BarLegend", DisplayFunction -> (#& ), 
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8333333333333334`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.372793, 0.1358, 0.506503], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.24852866666666668`, 0.09053333333333334, 
                    0.33766866666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.372793`", ",", "0.1358`", ",", "0.506503`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.372793, 0.1358, 0.506503]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.372793, 0.1358, 0.506503], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6666666666666667`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.788287, 0.259816, 0.270778], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5255246666666666, 0.17321066666666668`, 
                    0.1805186666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.788287`", ",", "0.259816`", ",", "0.270778`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.788287, 0.259816, 0.270778]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.788287, 0.259816, 0.270778], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.979377, 0.451467, 0.0511329], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6529180000000001, 0.300978, 0.034088600000000004`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.979377`", ",", "0.451467`", ",", 
                    "0.0511329`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.979377, 0.451467, 0.0511329]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.979377, 0.451467, 0.0511329], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.33333333333333337`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.682688, 0.129771], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.4551253333333333, 
                    0.08651400000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.682688`", ",", "0.129771`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.682688, 0.129771]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 0.682688, 0.129771], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.16666666666666674`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.882236, 0.491094], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.5881573333333334, 0.327396], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "0.882236`", ",", "0.491094`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.882236, 0.491094]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 0.882236, 0.491094], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6666666666666667, 0.6666666666666667, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 1., 1.], Editable -> False, Selectable -> 
                    False]}], "}"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"0.00312775713326436`", ",", "1.`"}], "}"}]}], 
                  "}"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                    RowBox[{"14", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                RowBox[{"LegendMarkerSize", "\[Rule]", 
                  FractionBox["600", "GoldenRatio"]}], ",", 
                RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
                
                RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
                RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
                RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
              "]"}]& )], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8103905750638027`*^9, 3.810390608831933*^9, 3.810390729934989*^9, 
   3.810390814608952*^9, 3.8103908457210827`*^9, {3.8103909164735317`*^9, 
   3.810390942117605*^9}, {3.81039146093636*^9, 3.810391485350773*^9}, {
   3.810391584004724*^9, 3.810391595269847*^9}, {3.810391782014234*^9, 
   3.810391788082169*^9}, {3.810391906696463*^9, 3.810391938746827*^9}, 
   3.810392049399124*^9, {3.810392227865271*^9, 3.8103922507902203`*^9}, 
   3.810392342192637*^9, 3.8103923981482*^9, {3.8103929247800493`*^9, 
   3.8103929388748093`*^9}, 3.8103929814692698`*^9, {3.8103930481022043`*^9, 
   3.810393057727213*^9}, 3.810393268203128*^9, {3.810393364543*^9, 
   3.810393382306775*^9}, {3.810393451925887*^9, 3.8103935318065443`*^9}, 
   3.810394003314014*^9, {3.810394114925994*^9, 3.8103941359698*^9}, 
   3.810394186008305*^9, 3.810394227457534*^9, 3.810394271363574*^9, 
   3.810394308119833*^9, 3.8103952088901176`*^9, 3.810395825619926*^9, 
   3.810396166287031*^9, 3.81039622642714*^9, 3.810396404626031*^9, 
   3.81039644084722*^9, {3.8103965080800753`*^9, 3.810396593518826*^9}, 
   3.810397019619102*^9, {3.810397878674755*^9, 3.810397899695962*^9}, {
   3.81039891892865*^9, 3.810398939049028*^9}, 3.8104007121071787`*^9, {
   3.810400814811137*^9, 3.810400864360169*^9}, 3.810400924359673*^9, 
   3.8104009647590837`*^9, {3.8104010143572598`*^9, 3.810401027097733*^9}, 
   3.810401192058448*^9, 3.810401506463846*^9, 3.810403535284803*^9, 
   3.8104044066604347`*^9, 3.810404475991777*^9, 3.810405812513365*^9, 
   3.810406199241117*^9, 3.810406628822138*^9, 3.810407376247992*^9, 
   3.810408520415102*^9, 3.81044619746587*^9, 3.8104543246301403`*^9, 
   3.810454612500051*^9, 3.810560222818025*^9, {3.810560278825938*^9, 
   3.810560300653748*^9}, 3.8105604789193773`*^9, 3.810560560485157*^9, 
   3.81056091548508*^9, 3.8105610642440443`*^9, 3.810736498477359*^9, 
   3.810786827017852*^9, 3.81087773011339*^9, 3.810878487630003*^9, 
   3.811514095678727*^9, 3.8115144579063797`*^9, 3.8115189256278276`*^9, 
   3.811522037491488*^9, 3.81152207031996*^9, 3.811522132531919*^9, 
   3.811524692750317*^9, 3.8115249371417313`*^9, 3.811525023129553*^9, 
   3.811525232880588*^9, 3.811527647426552*^9, 3.811527820750445*^9, 
   3.8115278602903967`*^9, 3.811527998727475*^9, 3.81152804839709*^9, 
   3.81152813611582*^9, {3.811528179599328*^9, 3.811528202689342*^9}, 
   3.8115289243955297`*^9, 3.811528987868947*^9, 3.8115290252750874`*^9, 
   3.8115291194703608`*^9, 3.8115292598504763`*^9, 3.8115292993487673`*^9, 
   3.811529353263842*^9, 3.81152943822374*^9, 3.811529484730015*^9, 
   3.8115295532022257`*^9, 3.8115295955485697`*^9, 3.811529687132043*^9, {
   3.8115297233478947`*^9, 3.811529747233399*^9}, 3.811530144612554*^9, 
   3.811530504433733*^9, 3.811530681481901*^9, {3.811530996870639*^9, 
   3.81153101159689*^9}, 3.811531285184745*^9, 3.811531353879424*^9, 
   3.8115313881266937`*^9, 3.811572290735633*^9, 3.811572365078602*^9, 
   3.811572759762866*^9, 3.811572804712328*^9, 3.811573000725877*^9, 
   3.811573067149868*^9, {3.811573108872284*^9, 3.811573123474039*^9}, 
   3.811573208142428*^9, 3.8115739739228573`*^9, 3.811574221174925*^9, 
   3.811574732369474*^9, 3.8115747662711906`*^9, {3.811574799525936*^9, 
   3.8115748431436462`*^9}, 3.8115759859435167`*^9, 3.811576379413025*^9, {
   3.8115767377742863`*^9, 3.811576759781691*^9}, 3.81157695431581*^9, {
   3.8115875838754787`*^9, 3.81158762745603*^9}, {3.811587682937253*^9, 
   3.8115877043811483`*^9}, 3.811587881219263*^9, 3.811588135418214*^9},
 CellLabel->
  "Out[899]//TableForm=",ExpressionUUID->"20bf0535-0158-498a-a744-\
40d9d63e4bd7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"plotsDir", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"Characters", "[", 
             RowBox[{"files", "[", 
              RowBox[{"[", 
               RowBox[{"whichFiles", "[", 
                RowBox[{"[", "it", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"16", ";;", 
              RowBox[{"-", "5"}]}], "]"}], "]"}], "]"}], ",", 
          "\"\<.png\>\""}], "]"}], ",", 
        RowBox[{"plots", "[", 
         RowBox[{"[", "it", "]"}], "]"}], ",", 
        RowBox[{"ImageResolution", "\[Rule]", "200"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"it", ",", "1", ",", 
      RowBox[{"Length", "[", "plots", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.810407644037093*^9, 3.8104077362654543`*^9}, {
  3.810407947676444*^9, 3.810408000410625*^9}, {3.810408044620438*^9, 
  3.810408116688716*^9}, {3.81040818022536*^9, 3.8104081895995407`*^9}, {
  3.8104083258654327`*^9, 3.8104083518491898`*^9}, {3.810408534282598*^9, 
  3.8104085345824947`*^9}},
 CellLabel->
  "In[900]:=",ExpressionUUID->"fbb9b51f-0a3d-41e3-ac99-d8d67dcaf8a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sliceA", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"A", "[", 
           RowBox[{"[", "it", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "k"}], "&"}]}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", 
          RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Pi", "/", "2"}], ",", "Pi"}], "}"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", 
       RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8107367237083673`*^9, 3.8107368008008747`*^9}, {
  3.8107368566015244`*^9, 3.810736900361429*^9}, {3.810736938075314*^9, 
  3.81073703871846*^9}, {3.8107371642993*^9, 3.810737169831215*^9}, {
  3.8107861408480997`*^9, 3.81078618013682*^9}, {3.8115251734554653`*^9, 
  3.8115251939568*^9}},
 CellLabel->
  "In[800]:=",ExpressionUUID->"2430b3d2-eab7-4f46-9f06-bcf0a52859dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"sliceA", "[", 
          RowBox[{"[", 
           RowBox[{"it", ",", "ik"}], "]"}], "]"}], "+", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"(", 
              RowBox[{"ik", "-", "1"}], ")"}]}], "}"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{"sliceA", "[", 
             RowBox[{"[", 
              RowBox[{"it", ",", "ik"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
        
        RowBox[{"{", 
         RowBox[{"ik", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Opacity", "[", "0.75", "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"it", ",", 
      RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7fNQtyg95Y2ji+bSYhCd8F+2BUT/VUxtB9HXgqJ7
QPT1g/pTQHR+4+elIPqZDucyEB3uq7gGRKscsd0Konfmf9wJog0e8e0C0Xu+
qO0H0Sf6Vp4C0StkSy+C6GPCuy+DaBb9qbX1QPrgKpYWEG2lltMJov+EPOwB
0QqNU++BaAeu4ocgetoRxbcgOtJx5wcQvWtL1g8Q/Wyjw08QfbuS7y+IvqWw
CUyXma3iepr6xnHhi0W8ILrtx+ubz4F03gGHOyA6qqL1AYi+8+AMmL6dffQJ
iDZqz3wBok0+3xZ9AaRXdTpIgGiPNptiEH3Q4lYZiE6aGzEDREtM2gmmmxgc
ItnS3jhGbL8PpgGMib5q
  "],
 CellLabel->
  "In[802]:=",ExpressionUUID->"2d4596cb-8856-40f8-a905-bfabd257d577"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw92Xc8V//3AHB7y3zbldKnQTtaqnOatCQpJVnZDaQiI2SVZGXvTUilkpYr
DaWPEopQkiirSJnh59vnvH9/vR/3cR+ve8+9z/frvM553Rnm9nqWXBwcHKu5
OTj+95vL/7XNeLyXue59gduiYAN45xmo2L7tZRTiSi+X9G6A/buemzrl9zI1
ARqGfuobYVH/yiQPn16mOMNpoOzMRuCLvtIYYNjLcMRVHj1XuhE+rFaQD18y
OX7sm+prgU1w62PgvgSBXub5jwCR23qbQIZ3cM5O5gdzKzLCFJM2wdMd9Wlm
x34wDqdPfPfo2gROEXennlb8wdjOjxt1Xb0ZZjTFxQS++M7ckfDdvfniZnit
4i6V7Pydmd/XvrHrw2bwOHIo+OY/35nR6bp33JZuAbWb6wSf1/QwC58rzOW7
sAXej0z3bfLuYYTj/r0R17IFAjZwTvQu6mHMQj7KbFujBRqBn8/wfuxmKrqH
nv8TqwWtbx7/kg/qZqyX5/bBkBaEy2faL1zdzSRYpLrlHdAGNPPv3PCti+HX
Pqnk/lAbvudYWxpEdTEPH44aP1PZCgm92p+ObOpiCqR1C5KDtsK2laoHvX52
MiF1DmbThrbCkKfwu4iUTmaxZEb5AattkFXerXtFp5MZmRGnYVe3DfTFXr18
+KeD0VpsIWW7fTtwGVzbUp3bwfQk7OhyKNsO15NCH7Xv72AMPqeeSVyzA4zb
HdeM8nUwKh/8Hgrf2wEiC/fcEbv9jdnRWivUsHon3DulvnTW4W+M1cNVU+cy
O8HmIevqSolvzA1zv/myWjrk8ZXh33uYq6JaB5789fjKRGb6SVia74ITfz2+
MkvErIKnDOwC5b8e7cyQ/MdNg1t0yaOd2T5o6S8bqUse7YxSd73i2TZd8mhj
eKq7Fm9YuZs82piiDuNp7pd2k0cbE7Y5y31z227y+MK84OtbcRf04Mtfjy/M
np1XM/sT9MjjC1OXeiVeckyPPFqZg/WD5zVM95BHK8OMFYd6PNtDHq3Mvsax
LNHF+uTxmZEQ6L4mlKhPHp+Z+qNGqfGie8njMzMndUF2h/de8mhhdHMDtymP
7CWPFsbF/1jCsdP7yKOFuZuUf5hrcB95tDCOHzp1JN0NyOMT8+LdS9Va3v3k
8YmRNahXOhexnzw+Mf59F1sPzD0A84W+74o728xsmZBQSnx0AAJjr29+3PCR
8ZipHRxmagjtc500u5d/ZBaKFnh68x6EDcUaS1iXPzAL946LPrh+EJK0hmav
+9HEiNRvCI80N4KRd/eUrLc3MSH8u0VtFA/BPisPydDsRiah+U7S5cZDUPgb
BO5yNzJxb7bxe6YbwxQ/rvEWkwYmYEP8yhgnE7CTftov9OA9Ey1kf0Z1tik8
Sw/oWCb3njE6d/qufLQpzFy2rdnoZD3jWjA79oOIGZwtE3nrV1XHDIjf+lAS
YAYNu19XFMyvY4JWL68QFjCHlS1hpXXn3zHdTe9S5YLNIcJBv4ij7S0T9NFw
JSocht4Jmfx5698yOas+hH/JPww7Qt6n6iXWMsGN9XH2WywgZ1pCtNtwDXP1
5o+2PV8tgKfA+FLG3hpGqVozUjTUEkzXzvCpvFHNmJ+y2qWy3goe/NvqMiBa
zbw+tPHAnFErkDPKOj7d7g1zy037TXGJNZzssrHQflbFHGR+SPoF2UCVq5qh
48wqxnLON62tlrawX7opWX3sFSM5c3RB7VY7EF9mdtH/diXjF/hAXkDzCPy7
u/10/bF/GdOk8/Bh1VHwdThirjr7JXP3qKCOhdYxWBPSu9P94wvmVEuQ9QuL
4/Dr6qlVr6KeM2Hrfl4wuGwP+f+OzFLeVc5wXRvTXGfnABZdnuIn+J8xFbzr
EtulHUFJiPfPY+YJE3Znca5fhSPUzg38ynJ5zFy6I2DJCjoBQVpiNdaLy5gN
D4rD8g2dYJNVRMndb6XMh455/55bcRKGBJfpy25gGH2Dp7q/VU6BjdZatfuF
D5geGc74oBmn4ZOvFpeJyj0GprTyci91Bt2y3e+5Iu4wnN2NGTsMXKB04uD1
LJ7bTDOTGpNy+QwsXmsVsO1UIaPRn6vu2+EK+PvTg6aX1xi7XY9N6g+6g7LD
b7tZV3MZh3ifoo4eD+DoEpQ/GpzJnFhqoeib7gmfLKeV37RPYZYY7Nf2K/UC
r0eWnQOpUYxVv+uaiqfe4HV86iWRF+eZp14r689/OQccfyeIGVPp1VGoqewL
XvfWcRXN9wLNX3KKf9z9wMt6IOPlnnAYOLz8ZOaEP5Q6VmqvCUuAW8+s53IV
nAeOdXqn91mnwzS375t5QwJB+fHa51P8c0DROkOYlRcEqD1PoTzjKvAJmew/
KhIC162EihizG3Dkxr5blc2hgPM4mhX7bgLP1ppRebtwqOr6ze/iVQT8N/9d
+H5hBOgWdC2uFbsLf8YlPhuvjoJPDi0HFiffB+tbenZOCTHgsKzuXNDCEojz
rawItY0HDrf2vb+MS6Gn4pXk1QdJoG1kZpeW9Qh0istLfhilQujaprO638vg
aKmi4+IX6VA/zeDyuMYTmJLbLmD+NAuUOaqz8z2egvLye3udz+WCTcuOB4ZP
n4HEvoSFe7WvwfWy8ioB0ecgvnpfKausEIbSN7QV6b+Amk+letp9RYB+D4ct
EipAOVe1pr/0AZy3WjlF6stL6ClV3l0SVQZVWjdnPlKrhHSHkoFU4RcgN2/h
CnunV6Ci2HRTv+kNmApd2T71/mu4sB7fCF1vhNrfEtctvavg9StGfeGJb+Bi
tevemn/eQPrp/llxziOgVBf0ROrFG/CSiXa+UTEFS7UqXnUerQbLm4tl2xYL
o0Ux//tH4jVQeHbnhQO+Iigwb3NrzK0a2GCm+m7GfgnMjz3XY7+/FubKNo1d
+TAGukKlg1v+1IKUDutJCWcX/HId45yW8hZS1qg9T5v5ESK6Vov83vgOdt/J
WxWwtQZWGrnI/Pv1HRTteHbMleMlNP17Wzn9Yh0k8UbvS5zxBLzW9qu6LqoH
84NlbRMeDMwqWKyxu6Yeog8Np19NugvPpx2Huc7vQft7lqVA5G04GpK3dUKh
ASY+dr/4UVkI4hwde96VNMCpWX1Fp0avwy2H2cZXzRth8/Uak5yxa7C/5bCN
L18TPFo46CpYdQ3+7E49cTC3Cezuep9zkrwBKWUf3ZfqfIAJnrb3CiG3YNMy
pQDBnx+gwDbv6OlbD+Fb+oGwT5EfgRV5cO1Py38hSDo6/s6qZqhad9/HsbEZ
FvvVZgZ/aIbeObNSObbVQ+eIQH0hfgKxgSKDn11PYc3NOYeSwj9B0kADn0Tx
fQg+suXzhS+fIHKUxyVpbzF8UrG0PrW8BQKDuCIUyh7A0iafbtPzLWAtpPz9
j005+EakOe5oaIEdvitOK16uh3c7Hg2smP8ZOp9+eZbKaoW5vJ/cVM5+htht
ug0Jc2rB9eE4h1jVZxCMqpFvKCuDf09N9R+Z0QqLlHe0qobcAaWFa4TbnVrB
ZsxtQe9gIRxvNwx987QV8kK3/tidVQilSWdYD2W/wOY/N0o9Pt4GSYOYuBzb
L+CVIGp4t6wULMTuTI+4/wWS7d1YP81eQVH52wxP0TZorlmTuS2tEQS8fs07
YtIGxxrjrdzTa8BwpdS1fTfa4FN2TnjbykrI712ivoG7HQYPq7sYeJbDeI7u
3QV726FG3dHq/Moq0DWzXyef3Q4va9NUHqbWQJp88GOe4XZI7uofmba+EX69
ydfu3fYVCkUWik1bXw1bAl9WNiZ8hbCe/aE/1F5BzIZOvfLvX2Hr1IXLX0Y9
I49vIFSyMam75QV5fIMk+8vzfW/Wk8c32F5lotu1t4U8OiC3Z1avYMhb8ugA
7kIbJXV8SR4dULxT6RPIV5BHJzzYVLP1dHcVeXTCFK0Pmst2N5BHJ+izVnLO
nmghjy7Q+qDewch+Jo+uyfyi4yZRV0UeXZBXiBvm5ZSRR/dkHRdbI3GFIY9u
ODytIU/5O0Me3bD9ifMXqZnPyKMHhJImhkzPVpBHD/yBno9Fgk/Jowfem4uM
DWg9Jo/vcEhG0OLeivvAceV/Ht+h2rL5+S2bu+TxHbYJ7SjyGbwNGX89voOX
kkuCeX4RefyA4SnBZ74V3YBNfz1+wMFFZ3bLzL5BHj+gfE/EjZ+PrsNJD56j
B5R7YeTwnOt18kWQ9P7ywl1be0FDe3ngVyyEZxoqfZtO9MKMqtmRLL2b0BtW
eHN1fC9MfKjkjf5ZDHLf159e/KQXuoOacqV234EN296snN3TC23VtzsXeRaA
XZbpqKJMHwjb9ReqqF+HCK7ehxLQB9X+mXm/txfDA2NPL36bPngoMI1vNLsQ
2u9N2TgW2gegrlBxLCQLpsgm8fbf7QOeRu0UG9FUWOm04Pm3z32gd3noZSV/
Bpi+fhD4UfgnzEnsvlORmAOBajt21qr/hM4goXHu42lQGNAoVnHoJ1QkzWsM
4kiCpla7asb/J0QfK13V45cMPDgScfvaT2DmHhc/aRgHCxMuGOTV/4TX9T8q
9whFw74hOYVUzn6IsOuXinCKBi/9nKYo1X7Y2LXm6N7UCMi5viI5aE8/HCgR
yhQ/FQ7VIuVm59z74Zbr03zZdeEwYrNvlktmP0jWsD4d5YyDWU/b2o+96ofW
HsdFXlejYceMU1cOD/bD7j32jW+qQ8njF5TpSDcGRl0gj1+wyuHzisDtF8jj
F8zf9+HDFa4g8vgF4Q1LmpmHAeTxCwSfil3aPhBAHr9gdrzPxcScAPL4DT0i
gw/CL/iRx2942LqkWHqWD3n8hiu3g4xuOXuTx2+wq4/bIWXjRR6/Qdav1K7G
wYc8fgPzOH/2+ghf8hgA9Q/FIbcb/chjAMr3D3dPvXCOPAZgp2+NpVeLJ3kM
wC79Z57KFt7kMQBrr4us4JDzJY8BKPbJt7wa7kMeg/C9Jr4g/r4HeQxC4bbq
hAoDV/IYhLPNSoN6Ph7kMQjrpHk1lqd4kccgPJBMkDus5kMeg+DGcQt3fvAn
j0F4dHW8iG+eD3kMwaulXnfUTL3JYwg2zTLznvrckzyGwPejetqMQDfyGILF
M1yMRm65kccQNDYk7ecpdyOPIfjNve5Wrp0LeQyD6gavr8H+zuQxDGnfnmQ/
O3+GPIZh+kgb5u45Qx7DsG7wYJZJiAt5DMN9x51nl6s4k8fw5P13815+6EQe
I3D++PBnI6mT5DECE22KP0ueOJHHCKjyZ1/tOO1EHiMw+1xX9Vc3R/IYgaBQ
5a7PFfbkMQIrBV3EZXfbkccoRCTZ1pzPsiaPURBoNjf84WBFHqNwbYGhY9U0
G/IYhb5avn8uBtqSxyhoLE54WfmPFXmMQvL61w9tmizIYxRc9W2njR63Io8/
sCTMbZYsWpPHH9irtHLbqhXW5PEHbq320+/fb0Uef+Br5dT8f7wtyeMPnLww
kF0oaU0ef8Cqb/mfua+syWMMZt83FfeotiaPMWgVcXlgHmVNHmOgVvdh15Iq
W/IYA3sXDeP1r4+QxxhsNDBubmy2I48x0Pw22OQfe5Q8xsHY8toOnwv25DEO
5g/kO+wij5PHOCw8ryeftPYIeYyDrNGikwW8R8hjHASrb+5csfkIeYyD2tlc
nYUstscEpLqZJx8YPUoeE/Dxx6OYm1vsyWMCXKsuGDaJOZDHBEyUlodU/HQg
jwkIkUK5AT0n8piAVS4ci+senyCPCTiyPCww+YAj3P9f+yHOgRbT3zw94nEU
Xndvjc6exYF12zlL1KptoDUuzGXmKg6cpea/c9zQFoa03x9I3MmBDckW91IG
joDIoLKmnDkHTnN9vrSp6RjMyLRRunyaAys0F26IDnUAjT3Xx0QvcuBjqXy+
tDBH2MY59PF8Mgd63/19OqLLHoyvQSn3LQ780rTZNFfkKDgdCkg9+5wDmc/O
rl/FbCFA+PW54SYO/LxEL0nigRUk3JWxONnHgYs428/fLLKC69bGm3/wcmLl
u9v5W7pt4Ckra7adAidGVpl6ciyyg/ePe/jbFnJiryDDEbXfGr47anSYbORE
u6cfQ9ebWgCXskdFgwEnKuwtWtj50QxkXz3J23uUE9+2CzdovTcDNXeRS1Ve
nOgdf2FmlbAFoKr+8e2RnPjz9ye/MhVL0K+P3/XsCieeNMrMabc8DLb+rYvX
l3Bi0NLVOHrfDDzU1SQfVHOikX70nzXbTCH884n+5V858Xp/w7S5C0wgK/Re
7Y1RTox9H/3yJ5iRBxfmbKn9XWVpQR5c2BduFX1fyIo8uPCZcI/PtXQL8uBC
KaXrO3kPWZAHF463FvneKzEjDy48dU23yaLbhDy48Mcn1k3Va6bkwYW/Vca4
e6LMyYMLv2WZL9cLsSYPLqz99qhQh/sIeXCh7NTIGOM1x8iDC18LHfwyX9OB
PLjxZn7leabwBHlw49iHufPdDzqQBzeeX8g68eWcHXlwo5NT8CezSmvy4MbN
fKeP6BnbkQc3Pj3A251daUse3LihOP3tzwZL8pg8/85Jb4kD24MbJdJdEgVG
LMmDG3/+SCwQ3WxNHtzoMTtDrUP/MHlw41qenE7DcjPy4Mb9B9PX16SakwcP
3rDymunDsiYPHqy25xO8f+w4efBg+8XkPapzHMmDB3lDN60RlLAnDx7c7NLm
Zi7iQB486FuWV1PraEcePNime3jFnVAr8uDB3a3aDbtMbMiDB8e7sp6ot9qS
Bw+mXvF+N1RpRx48+MLXrfpCznHy4MFw/v7G10XHyYMXX6/75n6s9Ch58GLs
s/DHpsVHyYMXb+94n5W705E8eLH2xEGusl2O5MGLB+4vuLrN6zh58GKTiVnZ
BQ4H8uBF8ZnWrLAdDuTBiyYuOnNGcx3JgxePNw5LnNE6RR68aKjqGdhi5Uwe
vLjg4y21y/ddyIMXI0J5QGLOWfLgxdFKc6VHIu7kwYcHB5+vVTN3IQ8+3PNN
UlfLw408+PDKctuqZaOe5MGH89VF1Jet9SIPPlzSofztRZQnefCh1h+xEMVs
D/Lgwy8HrnY94PMkDz78+kx6DovnHHnwYR3jq9u3wos8+PBF09LsOD4v8uDD
FXZPxJONPMiDD8OuuEnMr3IlD35cLaLZc+qrM3nw4z3P+aOKp1zJgx89Tm0p
XV7sRh78mD42w9fI9wx58GP90QVqXn+cyYMfL6ztcj2Zepo8+FFlIy//ptwT
AH89+NHq2tbwq5kOsPevBz8u0O1blLH/OHnwo7tT+BWtBFvy4MfKHXG8g+5W
EPbXgx/5p5vFm5dbQvZfD36cWm2qeHqDJXkIoM7A20cTr8zIQwCN+EM/Pfxk
Sh4C2HSsS6Yx2gwG/3oIIGt3ombQagsQ/eshgGOH391uXW1JHgLIr/uL/+D9
w+QhgCXHXHUvPbaArX89BLB3THNCL8QOTP56COCMWOtxhQh78hDABW6/bKc1
niAPAdwrGRmhN/0ExP/1EMC4qOt9Ayb2cOOvhyB2Bms6NK13IA9BrFxnEnfW
5hh5CKL742+GRdfsoOevhyAOC3dMMRmxAe6/HoI4PnViqnT7MfIQxDEHntVV
LEfymByvINOsan6KPARxl+Jnnvp0J/IQxGfj9TMeL3AgD0G04Kg9dcXSiTwm
j4+8jVBbeJI8BLHIpFZQ/fZx8hDEOsn24hjxY+QhhEZMgFH15+PkIYSmX0Le
42R985+HELYnZLs9/mELw389hPDOtRX+4pPx/+chhJpVhv2r1jqShxC2DAe3
Xn15nDyE8JPP+hirsGPkIYRVEwf1p/ccIw8h3PdshmSB0XHyEELp730lRxqP
kYcQrglLOcDtf5Q8hFBWvXmWQf4R8hBG4Y/ntsW625OHMD4/cfDSnFF78hBG
+6CLGy8ZOpGHMOZutA8VznYiD2G8Kj9dVbPQgTyEsUW5waQd2flKGM2UdTKE
jNgewmjBv8AiJsSZPIRRX5krzGjaSfIQxt6lEsYn49kewtggtS16VbYjeQjj
wsf+8z2fOJCHMOb/epFnauxEHiL4M+fC2x7Pk+QhgqcFzvwSnnOSPEQwU7y5
ZSLlJHmI4L1YywHPNc7kIYJPvUSCshM9yEMEOx5pmzyvdycPEVTVFnhfMO5O
HiI4XPdP1LQgZ/IQwZjf7t8MipzIQwTtar9vVed0Ig8RtO2Qa/vaf5I8RFD9
9ZNAFSVn8hDFnatM1pokuJCHKOo96dJwWupCHqJofdNbe3TChTxEMeCg1ecv
21zIQxTPPx4eSGS5k4conoxNH3ZrdiUPUVzvbDkPJvul/zxE8a2i3x3DqW7k
IYqzy/Z5XN7vSR6i6DDyuGmPpid5iKL6J4X7sYPu5CGKJ0I7ZSsaz5KHKBYd
zeW7nXaWPKbgWd1LS3xVzpLHFJSbOKGYVuRBHlOwSH2T7/v53uQxBf94Nwfu
9Aggjymo0jbQkS0dTB5T0O7RsSKpolDymIJ7T24Y4JrwJ48pWPk5ZsHHAE/y
mILvnbs7fiScJY8puKK/zeGn8VnymIKL44ZM3yxwJY8p2H/nlY9Xjxt5iOF4
Rfiow+Tz/echhrXDR+oXJZ8jDzH88+R5324RH/IQw+kj2sW3Er3JQwyzQypl
fht4kIcYxmttXiGi4kEeYvhzucrZ/hFv8hDDl+X/XFTa5UMeYtgpunpd0T++
5CGG73slJXInfMhDDO/fXBBVq+BHHmL4cO7gqyWj3uQhhtqamR/tfnuD8XTO
gzIC4uhwunKFSoAX2Pzv84ekOJpzSW1/tNMdTvzv84eSOCZsPvkqeKcruGd0
57+aLY4RDY7GWmJu4O8WOlVkiThyBZ7lFJT0glA99eCtmuIo5ZrDJNj6Qdy8
+nH/zeIYMhYR6q4eBBkc7vZPdoljk6zJDUfxcLheN/0Tp6E4+nAIbhXfFQP3
Ch7rgoU4DtRoiLtkRMITP+tH7scnx7fN7X/cHgGvjISX3nMRRzOHtP2z7C9D
/bJraYPnJuMtWbR5X3I4fBbaI6VxSRxZpw0U9gsGQ3fLgM+JaHHU/OdFFsdP
fxgojvt1LVUcn8/qVlXk8AGu0HWWPXmT8X+4XbAqxAdErD+/VS0Sx81T3S6P
a58HmXX+W2xKxVHoZVnH48fBoMxSvZNZIY5WBnzx+7aHg2p35ZzWWnFcdPnJ
zmSJEFB/7Bij3Dw5fodDdrx3MKyLYwkad4hjjmkTd9blcNB2vHsmvl8cBfQb
zrjqRYC+9qHO+jFxFNVZWchsjSIPCVQIvrpguWcseUig2o6AgVONceQhgdHP
eHm36KaShwQGl53KC1ROIQ8JbGvK1Pn1JYE8JFBk4yFb6Ycx5CGB/XoyKkHN
seQhgXkiyYmeB+LIQwK3ztSdo3Yrnjwk8PCrTvnIyDjykMADy6S26e9JIA8J
3DFqveWqbDp5SGDREQyeGZ1CHhIo7zJNo8wwkTwkcOoD9/L9fAnkIYE8ARe/
b4pIIA8J9J5xMjbNMZ48JFCm/d92/uBE8pDAn6sbdsXPTyUPCWwudDrg/jOF
PCRQpUZ7vH1bKnlIYLtmxPi04gzykMBHzitKGl+lkcfk+/Zpd3+vlEQeEjga
FHeQ90IseUgiw7GWW7MjhjwkEe7tHU2bFUsekjgkVmI3RzqGPCRx/lU4t+xS
FHlI4gvvdX9qkmPIQxKnirt7XbSOJ4/JY+ysmzHE9pBEMam6XJfb8eQhiT5q
/PtiB+PIQxIvyd8O+yodTR6SyDmg6fNNLZI8JNGAyVtT5htFHpKYZ5gkUFcc
RR6SuOHKo/BZR6PIQxJLpPdIafpEkYckVti1Pmu7EEkekrisM2g7pkaThyQe
Ln6xtyU/ljwkEbnv226cHk0eknjhGdfhVR3R5CGJCzZe2GnVHE8eklj4Jq+z
rS2aPCafd8+X4Ss9MeQhifcKfL4+upFCHpK47XVfoHtuBnlIoWZ/jSKHXhZ5
SKFWmpxRiPwV8pDCnbKN4ynzCshDCrOyjb9n3CkgDynkq093SUnOIw8pbNx5
43z33CzykMJrGp7eXD4Z5CGFPwfPu0d7ZJOHFF6OTBXTeplJHlJoq5j3buWC
NPKQQo+zwXXZdinkIYWzpy3d9GBGPHlIoVskj70lK5Y8pPBm0oFFfFfjyUMK
NRLeDIYZJJGH1ORkGoi0NUwhj8nra87rN1yUTB5SOLNMvrj7n3jykMJLM7Ei
+T7bQwp1Fh+yW/2a7SGFaxYsnWZ6JYY8pDCQtb1iiiLbQ2qy3zvHOhgbTx5S
2Of74Yd+SCp5SOED3tW3ns9MJQ9ptPtH0NeyLok8pFGSr7VKOSeBPKQxaiBX
b+e+BPKQxuRw4+LY+gTykMZ567Ku3zvGzlfSeGNXSv3mikTykEbfjv22v6ek
QNZfD2kUtTefx4Qlk4c0Vt49F9kyme/+85DGOpZh4R2zBPKQxm0zS/2M5ieS
hzS+2nLXN/1qInlIY6tX55U1dfHkIY0B3tmmmrax5DF5/S2FD846svOVNBqb
1O0pNUgmD2kUHzTLGTFMIg9pxFz18zpMHHlI49483ZMWO+PJQxqlXduWLnBL
Ig9pFHgTtaDZiZ2vpPGm7udmMaE08pBG00a+dwbaqeQhjTVO8yvsstge0nhQ
8c/XNVeSyIOFj24ErcqWiCcPFg4/mz+qP5Odr1jIGWFxuXksljxY2LtN2XZe
QSJ5sNDU4U7mSrNk8mBh4vND/BaHU8mDhU+hSvIUTwZ5sLD2dkhT89M08mBh
fmZv7TmbVPJg4Yq5u17MS04nDxbadUovXjGYQR4sjH1ha2B/KZU8WHiZI+CL
Xl4yebDwnLRqjElfCnmwsOGhzha3K6nkwcJ70a2vz7DSyIOFi4dYiVZHMsmD
hSzpPUcX2+aQBwtPbnFhXLyyyYOFjS1lp9K35pIHC/cnq01t1LhKHpPnG0YD
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
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw11Hk01WkYwHFk3wnRIFKWVEg1N6pXRsNRQkmS7CISsk6LIXRLpZI2ydJI
FOIWInpkK2O7iBC613WtF6+tkJjfOOf3nPOc53z+/p7zqLr6Hfbg4eLicif2
//tCYJDtuIRh1SkuwzBejCJfHlM73YahKG/bzjjCdpafnAOzMfjn9nSkE9aZ
piRfisIgVFKvVUqY/0HWV6o9BrOpDbqfCfcYrFWI18MQ2es9zSH8pjfWNkkQ
Q1r41Qv8fBjJ8f3QsIAJ6G5qpasQrj7Y8dTFdwI06LKLhoQDE4qVQn6bgMci
8fx2hFW7Ex/G1o6DbLn4QhDhJrWLq1NCxyEuvYcRT/iSz8m41xvHQdiNXZ1P
WPv1XqFPrWOQ0vbyTTPhzoV10d2RY0CTdymeIkw15l7GOmNAvTLKkOHHaEds
3198vRzwoM1QKIRZzZUzCjc4MH/hR5MD4XiFZ35bDTjgYGtZcJmwkcuVEeOh
UdBjms1nER7P9PQ4dn8U8mb1c1oIJ2Ezho/JKPhbhLIWCZtTNp2ImBqBGc6z
V5oCGM39LdKekDoC6pH31W0JZ3zkWGUdGgHb/ouOMYRtJBrryhaHoZCP36+Q
MM+xV3+2vBiGu8EhAcOE85JvfxiwG4ZMRl2EsiBGjgMBu3/yDwNqZBYfJSy6
9UiRRMEQUJcfGd4iXBK8fdsGtyF42SWoUUfYq0w2hyI1BMg+I0VIiOwxCOFC
0XXmhKtWegyCR+bV1jjC51Z6DAJLg8ZqI6yy0mMAumoctVWEyR4DsGZHco+v
MNljAKwrruuBMNmDDd7VNFcZEbIHG3oSwvN9RcgebKA8KXKrEyF79MNJJ4nq
LaIY9a/06AeWZ5nGPVGyRz8MpOuwucXIHizo6aM7BomRPVgQlDu0xBEje7Ag
w/3hrjPiZI8+WM2YvzklTvbog9A5d2qEBNmjD/i/M9/LSZI9mGDyO727QJLs
wQTVlNpERymyBxOoXA3VUtJkDyaoFLwzokuTPRggMEMReLya7MEAy7OLuoEy
ZA8GvLDJmT0ui9Fm4XHLxPBv8NTZKd9KDqPYR3n7K7t6QYSvedhuDUYDmoGG
nJ29oEy/bRMkj5Hx2x16snd7oCeH0puugFGy6Zz63olumEyco3HWYrTQXqLo
eaAbvim9NTukiJHtqUvSt59/BREPDZ96JYxos0iweNVXaHDQMfdeh5F4DM8S
06kLargtrmurYuQtUz0tXNoJWuXXHGXUMKr5hzqsL98JkjD9QGsjRuv1zb85
BHVAPbW40V8Do/AK0bYY+hfYr+QahbUw6rJu+jd38xdwUxWzzNuMEYV5p/zL
1XZo3LJPuVgHowR/m0Iudhtcnko9L6uPEV6Wy9ba1wZdEtxDzTsxOnirM+3w
k88w0jJi/8sAo0zlpAcX5luhan8DPQthxJvreDP9aCts0jOWHTPByHmPalRD
fgvk3DlSxTTHqLSeFfZdrAX6Yw6kZlpjJO+QcXaddzPMcp0+4X0co6BRL3ez
Gjq0pKbw2rtiRD+vbR+wng4fmvaefHuG+H8y3SnbfzVCIh87oiMMI0l9l+tX
Chrgh+dYpDoVo3rrgZAO33o4UOM1r/sQo2h/H9dN6nWQie9tLMrGaPctbHGx
txb0g5f3vq/GaCYneFfj/U8wVGZzg9aPUXb9wgYVy49gs4tve5LIJHIf/Vvy
nEANsMLagkP2TCJFYb7FSqgCWyGD09Xhk+izZuygbFgl/NEdvvC0fRLdMJVo
9dStgGtWaW9KraaQyamE98VD5TDiXCttzz2N5oT0bdYYA4R6qLA1xWeQl+ke
7Xe0Ujhb5ff8XOUsYkSb8jiplUBlFG/Az4Y5ZFVh3cmTUARbndOKFWeWUPny
ibwM3gKgvZrPsZrkN8q5W1gRI/UauFZGxug/MYNV/g==
           "]], 
          LineBox[CompressedData["
1:eJxF2Xc8le//B3DOsOfhOEtS2kopSkrXOxKVooQWGmRmNpSSFu1U4lsalIYy
msoqSmhIaX+SqJTtPvaIfnd4n58/jsfrcd/3dZ/rfp73Nc4ZttZ/iTtDSkrq
Pf3y7z/zt433yY1Jj6T6/zRBqk5e4Hv08qMtR3xylZploMJdp/COf/yjCEe3
Lw7tfSQ8z722PSHmUVTf73M9rztJuN+QI0rP9j+awr8/zbywjUh55nBTTNY8
qpi9MquU00rCM2cx0seHk+mLK5rrZFpIuEd74gv7E2RBzt90K6dmkhtYbD3z
+FnyIPTj8JnlYiI1a8lmR49L5MFSR5+ISDHRfWJWpBJxjcw9qHI/zEpMwHqs
sDAxhciaKutweGJyc71C+qM1t8i+6M+LnoopAmOlvonEd8j8Dob+tXcUeV3X
JhsSnk4uZ+dW5uZQxC61btI71Qxy9m1U470bFKkIqFw+6UIWGeZpxYk7R5GA
KR93HzZ4SK4Nz6ZKT1BEKvSXQ6tLLnFRm/Gj9yBFrFet8b54JY+MaywKat5H
kSizsjC7xsfEUCsh7uEeinzScTrZZ5xPgjhbL9/ZSxFdqdKryTuekj/+WS67
D1DEs9Ime8XTAhIiV7Rv00mK3Hxc+FpOuYg8XrD0SW0iRTovmVelL31GysuK
+lY8pvuzL6fL7exzMl22Pa2klSL715uoaPx8QawKTn7fZCcmr63uDM/TLyYp
F3wOc+WbCX+swTT/4Ffk/OfbBe0PW8hqhaQFQ7JKiLx9kMzi/E7yrk39pvuu
12TmrJyT2RXSELLeNnPmyDckuaxpzoFfPUT74+F8jWdvSLGJV/WRnFaSa/X8
Va1vKYlfkWT3dF0zcXsg+zlP7S2xDk1KiNskJnJjLX/87+5bsk+5dXo3S0yS
T+9u8F/2jrh0HjQtfk4/b4Xcjrl/3hEzTRPtulSKtG7rldaJf086yllFu5Mp
El1nqtRm8YGcHrFp/cO3FDFZFaL18vcHckVmf3VhoJiUvbyne+nQR3KsNiX+
h0MzCTdrGbdt4ieivnfh3skgJiNSJxkvfvuJ1MddbzC+Q5EiHT8yZstnEiPy
fdNJe/keuzHvr/A/suBwh6j7EEXUpGrsPzz8j1wOnhd6JIsidwNGuaSs/UJO
HPo+9JCnmCyrXOe5V6aM5AZFNesbNJM/ixOCVl4vIyYmR9Uyh4lJ/OPy7ZMX
fSVBM7551N2lyJwp2pHyzV+JM7mk/CibItWXlh+vOFVOlvl8znVQE5PDmrFx
96d/I+zcvgnidopM2vfu8tGv38hd1uNzcW5iUtst9+k2VBAlK5ldy6+Lycw7
o53Pn6ggm8287li9ochRn7nfD/ysIPxl17N3hNOfVz13j01TK8mzlVNa5bwo
MrlsT/3q/ZWEk/rL940HRfZGXwy0+a+S3CzsqzmzhSIfbPLap43/ThqCjVed
vkSRMeyKUL2w7+SkT+vJNKGYbMvpk1J9/Z1YbDzau+SJmLzcNCSie9gP8jsz
8EuIXjPRNpip+Cv4B1k6irlWm7QSv18rot48/UGMyk/I3aXaSO75rdwc3k+i
VmrnlqvSQjhO/ztzzesnSR13eOpo2s9N9f7Q6KyfRCs5Xi78D0XSC98n7lSu
IkU1xqul2igiF9461se1itxva2u+950iK0w00hxvVZHVZdrfV+VSJJkyNDJn
/iJ+kX/3K3RQpO+aXcYEh1+k5vXsor7TYmK3xn+W4OovMsI6+MWWb2JyUXD0
CavrF/FI2+Wmv7SZtL5Jtqbm/yZPA9PcGzqb6XHkRfGXs7+JdtPHs3K1zeR/
5rVLCht/k9Xrmkv87ZsHPaqJZV5fZpJ6y6BHNUlXiXyqHdU86FFN7GfOcC9N
FA961JC4LvFBo0b0qCG2yWMmW2SgRw25vMFLfU8JetSSbYEnXZMq0aOW9MQu
bjlXSg161BKFI/diVLTRo47sSU5PuJ0jHvSoI9q5p4P/x2we9Kgjt+ctnZU8
XDzoUU9ejvBeNZmuvwGPemJ/OppXQo8vAx715MDpnhMpZejRQHwXfCowVRIP
ejQQRnfgMIGceNCjgTR3m7CMZokHPRqJapcOJ8+VHq+T/nk0krgT7EZFP/Ro
JHm50UcbP4pJYr9HI/mmqG4zlf58DHg0ka5mj3ud3GYyp9+jiZQNDaxdOlI8
6NFENk5tsVrbQJGNO1i+y3Up8nx54O0LzRQ9rp00sJ1HkSkP4j0MXlCkwFhP
PCeIIg8e2780peufOn77jmkcRYymX7mj8oEi/MbZmyflU2SYpeWUedZiYj7/
jckout3iqYr6B+jPj/eV1T0iLTFRvj1feih9PJpB5agTMRE/umpzmO5/tsvO
cFl6XPC0sCfPDMTkV6aKRW+UmPAPVsbZOIiJCu88uyVDTGYlRtcQLzExCZ5Q
VP1dTNZ/P9hkdFtMVpdkHyxXbCaxpz6L0un57aC+zcJ3Rs3kvq9nlGKdmNyO
/KL63LmZXDAMEEwMaSZlP7xLH0U0k6DlI7+deicmLOiOvpfWTJoydi1qnC0m
BmcPON341EyqpdtfZhmLiWMnX5gg3ULGjrTudJogJuFLr5XFjGsh8szrf2aZ
i8m1m9MuHLZvIZsjo9dY+4tJqVLhmt3bW0i372XBEHkx6fZ0HBFyuYWEudfo
nfqPIiOeVv3a8KqFHPfXvjCXnj9thm1KWtfRQnr282Oyn6JHK2nnt/3Jz0GP
VtL90/F+/E30aCVL7LgjD91Cj1Zy41rM/hmP0KOVXB1rFaJKz38DHq1EetHW
0PM7qUGPNmK9d1ZwDT2/Dni0kehJfn8X0OP3gEcbecA2mpdMj+8DHm0Ezqw4
bHSYGvRoI7zuxGiLYGrQo40Mtxx2pNqdGvRoJ19zHOXb6fFzwKOdlLZbnuvZ
TA16tJMHTvOXH3GmBj3aybf4VQ6+ttSgRztJ2mv6bZcVNejRTv4Xue6EyIIa
9OggK7aduOg8hxr06CBVO3nnz82mBj06yL3spK8l9PUDHh2kbpdPRRd9vwGP
DkKNj/PWmIMeHeTPAteir4bo0UGcDE68zjdAj07y5oBrU/kY9Ogki+ftnd89
Ej06yfOES31zh6NHJ2k/VH/eTA89OknSRHPuNT306CTlKaWNUTro0UVEQTbD
HojQo4u8YD9qX6ONHl3Em9ljbSdCjy6Sz38wZqMQPbrI/AuZo3yE6NFFOlpD
vK7poEc3GSZdGLl4KHp0kwe/465uFqBHN+l0EO3bpYUe3UThm/d5Sy56dJOO
6i1PX6ujRzfx4d79SqmhRw+J7vSecEwNPXpIwrIZRsXq6NFD7C5rs9dx0KOH
vN/6p/mEGnr0kP+2/zzOVEWPHvLI/2qdpyp69BArlSFmh1XQ4w95ctS6o1YJ
Pf6Q3KM5ARZK6PGHBFnMnFGsiB5/CPNlbGSrInr8IUbu0l7uSujxhwT0Xb8a
poQeveRyrkVehyJ69JKqyUEh8kro0UuGLnVp8FREj16SsWmkyWcF9OglM2e2
fctTQI9ewthXvV1FAT36SMOEjM5oBfToI7crzHqLldCjj3wMT9kZr4IefUTx
T9ZQljJ69BH3GVZP3iiiRx+ZN/J1CF8JPf4SQcb4Tw5K6PGXFHq2uOxQRI+/
pHMtMyxJET3+kvkWqcWKCujxl6y9nHJ/nRx6/CU2tsYm5nLo8ZcEpqjlDJGn
SNa/7YeaFPAs/CJ06VxSPy/26ggpMDwvVzqDzj/OHA8ZPl0KrNbsqTxC507r
z8vPLZQCm+0h07bS7Sl16M7gr5UC/cW3o+/L0vPIZU/tk5ulQOaJ7K5pdDa2
v9mrfEgK4j2eHLOh83zpzvL9F6TA7oO0gTWdXdJILvOuFCjMc56cJUORYOfI
hLAiKVghH/hyJZ0jFUt2d5VJQXhpyPv3bIqczdBy2yiWggMBWb8P0vmmh4tl
E1saTh3Z6X2Czk+5V0Z5C6VBQXjK04TOn580yFYZSAMvQ6Q5lc6NgcY1rhbS
4B/jGuVNZ4bujuf/OUmDwDZX5S2LIrxX+TccfKWhL/lH1jY6629XOvI6XBpc
VwpHj6EzjFvqt+CUNHC0R9e0MSmy9FOcbUGSNNgoHBC10tkr4sek2Q+lYf1p
B69V9Pk7jPQ52aXScDf61w0/Op/4HtQy9bc0FOwOqammz78SlfnuVo80JOvK
dl5gogcDDj48te0GEz0Y8GWMVOY9Jnow4HDMCp9DTPRgwETdzaKdTPRggDTj
6+qNTPRgAGPqu/OxTPRggEyPXsq/9gY8GPD96/6ak0z0YIDSvNkCYKIHA3bG
P3ASMtGDAdR1s5rRTPRggI1b8RcZJnowYUzCrLLfDPRgAtdUv4fFRA8mjC2W
KWhmoAcTnock+n9loAcTrs95P+QtAz2YkOZ9Nq2IgR5MUPxwdNt5Bnowwa6z
8tgJBnowYdH5LKtDDPRgwkPHy39DGejBBI/P0YdiGOjBBLVzemuuMtCDCfZ9
T53/5QEPFngV+oadYqAHCx7nK9UdYKAHC6SzxnSnM9CDBTukmlenMtCDBclR
plXxDPRgATRRd5MY6MGC89tDP/zrz4AHC6yUtktHMdCDBRart+huZ6AHC7gx
+vNjGehBv58q49JEBnqwIG4Ee2IcAz3YMMt63js3iQcbhuQsapjPQA82/Ig/
Guko8WDD8+MBjT4SDzYcKTtmu1XiwQbZ+UOCEiUebEj7+GzDS4kHG1x+fh39
QOLBhjvlSW53JR5sYEN6UobEgw2dgfWHLko82PDOM9nymsSDDVKbW8xLJR4y
cNFTOSVT4iEDbqPnye2UeMhAnaA+wE/iIQMy35PfBkk8ZIBpP1z+rMRDBjJW
v4RMiYcMPLBP1UyReMiAKENBECrxkIF8xfyIPRIPGVCosh9zSeIhA+E1uQU5
Eg8ZiFJxFdZKPGThyJ7UnD6Jhyxs0x8V9P/1IQuZmbZlekz0kAWlzaPrRUz0
kAX/3SF7hjPRQxbMvvz1s2eihyz0Bv+oKqQz6feQBYdIvScf6OzQ7yELMak3
Jyiy0EMWvoy4JdKQjFeyYJ7wYnwXff7xfg9ZCD2hceff+Ha130MW1O4HbmCx
0EMOEmeS7ueS8UoODjZPlsuUjFdyYNuQAbL0+R39HnKQHVDOPUZn5X4POfj9
zeRrLQs95OCj7fBjXSz0kAMd/i4qmc7z+j3kwMp2WdsTOrv2e8gBP9tUtJmF
HnLAHrvycbVkvJKDFl4Cy4bOcf0echB8aogfk863+j3k4WS09XZZJnrIg7mg
xfmZpD7k4e3pcUuz6NzQ7yEPf03Vyq/QmdnvIQ9hDiWaVyT1IQ/XRztczJLU
hzx4t2bO/8JAD3loJGlfZ0s85KFbTi80TzJ/yMOfE3FR/7wGPORBgfMxhs1C
D3mQC1+TuYyFHvKwdWFUhafEQwFme2ZX/Zt/BjwU4OaMhdP1WeihAIq5T96f
onNXv4cC9FruC/gi8VCA8ZXy49dKPBTgUipP2lzioQBPnYXpQyQeCuB60Orb
OSZ6KMDXPad/P5DMHwog6lS0WsBCDwXI9fPp+dfegIcCnPXJVB3BQg9FOB6c
Sq6y0EMRGGJTjx4WeiiCUWfDiOcs9FCEtu8L3tqx0UMR3l6riabY6KEIWw2f
nvl3fMBDEUzN7Kd6sdBDES7uEdwVsdBDEb4cHp59T1IfinB6Y9tdBhs9FKH8
tlNdmsRDEXqdHKjdEg9FWMgo6Lsk8VAC+SqzGRslHkrwwleV/ULioQT7LQ8E
OLHRQwl4Y9WVmiUeSrBr3KIqNhs9lGBtSPiHOomHEviP4l8KZqMHfdzTY2wi
Gz2UQEPHMDVAsr5SAqsDRmusZNFDCXqPnq76KIMeSpCqq1f4iY0eyrB/4iU7
U8n6ShmqpT4SscRDGRR00z88lHgowxabScs5Eg9lUJX6EKAj8VCGWZNuyHAl
HsrAKXeaH8tGD2VQ2bSI/+95DHgow5LEDGEDGz2UQafVC/6tFwc8lCGvwdnE
XxY9lOGNv8MYO1n0UIZDakufzpZFDxWw2ilMdZJDDxUYOlLq2hwF9FCBprhZ
LfVy6KECBh9KJvjJoocKjOsofGokWe/S7cUM/7pTDj1UIIJN9oxSQA8VYI28
+/o/efRQga5oduy/9fSAhwpUdNu6P5RDDxWYtqrkTaIseqjAsrrMI86y6KEK
h+tjBHtk0UMVOAVvy6bJoYcqLI8Qr78ghx6qwIrdVeQrjx6qsH3a2yo/BfRQ
BUaPSvtJBfRQhfmpP8LTlNBDFQJP6N7mqqCHKvTN27rVQRU9VIFXOZJpp4Ee
qmDxLUHeV4QeqnD940XXC7rooQqqAesPJtLHXYZKr9SSU4N7a9boT+BTxPPf
zx8cNSjL63ptSO+Hg/79/KGtBnEfiwxX0Pvp7Yn1ya9GqUEyo/KqKt1eRGjU
ECVDNRi7InQJbzRFopYYHZ03Qw1GX16qmDCeImfGfuqLsFSDrDM5Vql0TpTa
7p9vqwbuBWlc1Un0fPxxaIX0CjUY88h/m+ZEimSmPrEjbmpg8uGo8quxFMnf
55G33Y9uz0bv6Av6fq9WKU7ODFEDO7uvNwmPIp+mpF3s2K0GHglpW6rp/fZ3
BXsN4yNqEBhVGNpA78frK9v3BMWqwX7llvoX9PNpf3CmNS1BDVRjI8hhOjOi
Zrk33FCDMBFzZgp9vZLH9/fj0tVg8V5D2TBNimjNipjrmasGkUZ3Plyk29Pl
jrt/+bkacOVmKO/Roci4+uLRP96pwewymcr3oyhi9CTwf7rf6P4WBd5bok+R
WWe48i419PPts7SZRvffOjBja1yLGiz9MGKYwxR6fWbtXPupVw32jXKbWjsJ
PdRhT1/bcq1J6KEOzzP1Hq4cjx7qcDXblKc5Dj3UYVGrc+XsKeihDgmRrr2z
J6KHOvCOvNaS0kMPdRgV3vdjmR56qEOEfey9nePRQx1CIxyawgzQQx1qbzjJ
KRqghzrYt8nfqRmJHupQ+FzLtnYkeqjDglXk5h199FCH+Bma4S8mowf9ftZ/
lDOfjB7qAIlvO3xM0UMdLhQ2vKcs0EMdJujl62+wRQ91qJ9pszpxDXqow5hd
Q4btWoce6qCuYHz15CL0oJ/XsCGlLxahhzrUrX2pnWuNHupQfOv1cVdL9KDb
q3qQ99QaPTggS5qKOp3QgwOqEcWGTWHowQHz4hO7ZlxHDw5MXv/NfxpDPOjB
gcjCmFslpuJBDw680w+tWlWNHhyoeH1+6Ib/oQd9fZJV/fg96MGBUQvvXSwO
Rw8OqK//Vbc6HD044BVdN/XGLvTgQKqjwaj2EPTgQOt/Uo9Gr0EPur2olrbj
NujBgancGg1LU/TgQCfvvYm6EXpwYNPW23vOG6IHB2R+emySnYIeHNDIGhWQ
aYIeHPCs7Sxvn40eHAh6FbklYw56cODjgwWJsyzQgwPHT8m/KrFBDw4s73w+
KnsZenCAd2/Ksp1r0EMDCv6Wds8PRg8NyNj3qrFsK3poQHHO6N2v16OHBpwO
/+Yj7YL1oQHVQbMfbnTA+tCAqUs4kzgO6KEBrKTW1rB16KEBz9acfvw9AD00
YFWAXtwEd/TQgMtNw2uaHdFDA85o3gqTskQPDTB9+LLQHNBDA64eUak5Z4ke
GqBwxIc5az56aIB9z9knQavRQwNu/CzNkQ1ADw3QN1sweqI7emjAAuOqlCUr
0EMDfJYHMs0WoIcGvO+Rn3uLoIcGTJoTy9YA9NCAVP7rMbVz0EMD3PI1E19J
6oO+fvURxX8+Ax4aEO7uGNm7AD00ocLmrsjZCj00ITVH0HVrPnpowsQOnaJ2
W/TQBJN4t5fy89FDE5xdzoTZWaKHJmwde4SlZo0emqCS9cx0Bl2/V/o9NGHP
hEplzhL00ISmlFeJts7ooQlT92X/nLoWPTThUbnOi/We6KEJjrWGFwM3oocm
GIf15Q/djB6aYOm+bX3AFvTQhNaSZ6pvvNBDE9xL9DYqu6GHJnzLMZ6g44Me
mtA4O7/EZCN6aMKFqR+tOnzRQxO0YirmhPqjhyaw3wS0LgxAD024u9V72NgN
6KEJ3gXzQgsC0EMTwtImq09ahx6aoGFxZegISX1wgS1qdGW5ogcXmtufTRK4
oQcX1HaslRKsQQ8uBO2uiWhajR5cGK8DWfz16MGFNRp5xzz90IMLnfH6eRPD
0IMLvYdN41Ni0YMLMiebb669gR5c8H3FKEi4gx5ccBBcTTXKRg/6/PHXwuwK
0IMLk+ud2OdeogcXjFSjLfe/QQ8u2DP3HhzxCz248D0pS0+6Cz24kJPTN/OA
GD244HL01kezX+jBBdfKveUJYvTggsoHfeNDVehBt5+Z5/VfJXpw4YtAafem
YvTggqOT/hP1PPSgs2dBblYmenBBFFiyiX8DPbSg5Nr+jLXx6KEFpaelpYfG
oocWJMfGNq45jB5adD1Kmf/cgx5aMD1u5rJ3h9BDC2L3LVaaFooeWqDEH/Wb
WoceWnDNq/D6STf00IIwx8eUhy96aMH1lCMXYwPRQws0DZdPNA5GDy04cPGy
s9Ym9NCCdP+wJv+t6KEFwt6Jaed3oYcW9JbFbK+PRA8tqHnRfdEwGj20YNqQ
yVujo9BDC4xt4pKdD6CHFsCZIWRXGHpogV7g65gTQeihBZE7Tt+ZI6kPLXgS
v7L59yb00ILgZ3NfRPqihxaszbzQdNsNPbSg+UXNnBB39OCBrdwV80h39OAB
zFKRsvdEDx6ceXfdsU9SHzy4+WfO27eu6MEDbuMyOytf9OCBs7dD6tDd6MGD
dztOJBd7oQcPdi62U/VYgR50+8zrPvLL0IMHDa92slRd0IMHMmbZ1pZr0YMH
bpsVRvZtQA8e3P5f6q3zXujBg6yvh47yV6AHD5y8x/bddEQP+v4bKmTmLUIP
HizyNLu5ZC568GBoVGPYloXowYNTOkrb0+zQgwdX8lzyNlqiBw+sx1278Xk6
evBAjkRNdJiOHjzQ1leK3G+OHjwI7WuOfGWHHjw4Nm3olLlO6MEHo6Wc9j/2
6MGHJotpzles0YMPPZH7K5dYoQef3v+3dUx3QA8+pO8g3vNWoQcfer9vOrRs
GXrw4eTBS3PjlqEHH0ZUtK7a54IefHC8NWfakPXowQezKiXd+o3owYfZ3aam
HtHowYcDDRd9j11ADz5Ml479IBOJHnyIjcgfvz8APfhADG5FXHJGDz5oEqiI
d0EPPjDvnlI5vw49+ADBryeCL3rw4epXkxSTbejBhwzDOe5XA9CDD7Vh6ccd
A9GDD0W6k37aBaAHHxaPjLoVK5k/+BDz4ebmah/04IOq8wy/jyHoIQADYeof
/TD0EMDkG2e8BJL1lQAUYgtS54aihwB2PVxx+20Iegig/OXX5FMh6CGA4e+H
J1RvQQ8BHFiSX7ckCD0E0GTq3pTmjx4CsFAOvvAlBD0E8Omyrq/OQfQQgHDH
wlN++9FDAO9u+/3wjUIPAeTrFU1/cw89BFDk+uy23nf0EMCzMdIlzkXoIYDW
Y5mv/B+hhwASGxdvnfgOPQQQbKk9dXoBegjAsHRZAqSjhwDapid/jkpHD7o/
SzMX6pxHDwH8SnS/enQXegjAO8XO/8Bm9BDA8V7Dtdt80UMAOT+FzyetRA8h
fD515ljdYvQQwp5nAY9YkvWVEDacHJF2bxF6COGBxUqe6WL0EEKX43jXFBv0
EMLeqNHbNi1ADyGcDp7ppLAYPYSQbVbpssUaPYSQ0ztFysccPYTQe6/0zBRr
9BDCD4dpQsN56CGEBWVmckwb9BCC24elRiGz0UMIttMNkj4ao4cQVNRyzrYY
oocQ3nvYGV+bgh5CUA6u3hw2HT2EMCTxt/SF2ehB9y9j+aY6yXpXCG+Xu3av
WIAeQqjdaDa+zBo9hGA/t+1w9BL0EMJwQ3bM2WXoIYSANvcrZcvRQwivauUP
xEjmDxHov5y6bdM69BDB3b1fOg86oYcIfOMy3MIl+w8ReC6N37t4BXqIoO5h
5ItbkvWuCKZNSCu/NwM9RKBscuyT7lT0EMHbFVtmzzRBDxGYux7d8MIUPURQ
neSUWD8VPURwaPajSQkm6CGCzD2HitON0EMEY4J3ezWORw8RrC4Iqlo8Dj1E
cP5l3aSi0eghAmpc3POjY9FDBBk22TKaY9FDBMLtG3J8J6KHCLw9/BS7DNBD
BG6ss/Wjx6GHCHaf1T26cTx6iIBpd1Z0fQJFoN9DBBpVtQ7FIygyv99DBF8M
+rTej0APEdy+F3mSOwo9tKFHZtmUBbrooQ3mDjEWuSPRQxumX9xlZzYcPbTh
Wr7S08si9NCGwNPiFX7aFDnR76ENJT6er0bQ15/t99AGbvnSrnmj0UMbZG18
My0M0EMbvgQ9//Hv+60BD23YFPQg5rwOemhDjV+6hbQAPbTB3m7ajxs66KEN
o4fYXnw+Dj20wdfgMqdjCEUa+z20wflAz9MIDYp09ntow1SNrueLJN9facNy
4+619zXRQxsyU7fp5ku+v9KGM+tNP+WoUeT/AAmCH4k=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1: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
hRaXtK4J8JtdI08JNyed0zPnksTcpkD9D0mH0Io=
           "]], 
          LineBox[CompressedData["
1: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
x8lh
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{-1.0621022205891486`, 7.187897779410852}, {-0.5, 5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.810737579668878*^9, 3.810737617141231*^9, {3.81073771200395*^9, 
   3.810737749638423*^9}, 3.810737822438634*^9, 3.8107869686222754`*^9, {
   3.810787178185123*^9, 3.810787206663575*^9}, {3.810787268593895*^9, 
   3.810787274630879*^9}, 3.810787310558387*^9, 3.811514422312181*^9, 
   3.8115144690660048`*^9, {3.8115189258145437`*^9, 3.8115189259539213`*^9}, {
   3.811518974340164*^9, 3.811518982915454*^9}, {3.8115243052362633`*^9, 
   3.811524322563871*^9}, 3.811524358997212*^9, {3.811524391268684*^9, 
   3.811524420600075*^9}, {3.8115247483558807`*^9, 3.811524802481557*^9}, 
   3.8115249427550364`*^9, 3.811525036407385*^9, 3.811525178073024*^9, 
   3.811525233150872*^9, {3.811525530596843*^9, 3.811525559637821*^9}, 
   3.811525830287315*^9, 3.811582815702244*^9, 3.811582940476378*^9, 
   3.81158304474916*^9, 3.811586628843245*^9, 3.811586768128537*^9},
 CellLabel->
  "Out[802]//TableForm=",ExpressionUUID->"24382366-c551-4810-b65e-\
18b6c8542b9a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Finite", " ", "Size", " ", "Scaling"}], " ", "-", " ", "BEGIN"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"whichFiles", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Pick", "[", 
         RowBox[{"files", ",", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"files", ",", "\"\<*_J=1.0_m=0.0*\>\""}], "]"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Pick", "[", 
         RowBox[{"files", ",", 
          RowBox[{"StringMatchQ", "[", 
           RowBox[{"files", ",", "\"\<*_J=1.0_m=1.0*\>\""}], "]"}]}], "]"}]}],
        "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"filename", "=", "matchingFile"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"{", 
         RowBox[{"momentum", ",", "energy", ",", "weight"}], "}"}], "=", 
        RowBox[{"ReadData", "[", "filename", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"z", ",", 
         RowBox[{"weight", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ";"}], 
      "\[IndentingNewLine]", ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"matchingFile", ",", "whichFiles"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Finite", " ", "Size", " ", "Scaling"}], " ", "-", " ", "END"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.810843012699081*^9, 3.810843057240631*^9}, {
   3.810843134928989*^9, 3.810843145902152*^9}, {3.810843261416233*^9, 
   3.8108432618681593`*^9}, 3.810845174692906*^9, 3.8108452392902813`*^9, {
   3.8108452996539173`*^9, 3.8108453289196157`*^9}, {3.810877107793363*^9, 
   3.810877122830359*^9}, {3.810877394666518*^9, 3.8108774869090023`*^9}, {
   3.810877521151349*^9, 3.810877551922575*^9}, {3.811610356412396*^9, 
   3.8116103768494453`*^9}},ExpressionUUID->"40ae93ce-925e-4d83-8046-\
2e3fbd0e0ed1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "it"}], " ", "+", "4"}], ")"}]}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", "it", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", "1", ",", "6"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "*", "it"}], " ", "+", "4"}], ")"}]}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"6", "+", "it"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Beta] = 0\>\"", ",", "16"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Beta] = 1\>\"", ",", "16"}], "]"}]}], "}"}], "]"}]}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.016", "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<1/N\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<k = 0\>\"", ",", " ", "18"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8108433054965887`*^9, 3.810843535941441*^9}, {
  3.810843575303762*^9, 3.810843587887917*^9}, {3.810843668751523*^9, 
  3.81084387970683*^9}, {3.8108439132568483`*^9, 3.810844080511478*^9}, {
  3.810844186351078*^9, 3.81084429593294*^9}, {3.8108775968407087`*^9, 
  3.810877619061245*^9}, {3.81087935274958*^9, 3.8108793576499968`*^9}, {
  3.81087942676156*^9, 3.810879479213715*^9}, {3.8115179747578793`*^9, 
  3.811517977077791*^9}},ExpressionUUID->"3c9acdfb-a9df-4bbe-9781-\
91bea8a9aa1d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[0.016]], 
         PointBox[{{0.16666666666666666`, 0.13515092789117947`}, {0.125, 
          0.1638176973713557}, {0.1, 0.18626433061875372`}, {
          0.08333333333333333, 0.20023197192459138`}, {0.07142857142857142, 
          0.20805544157995645`}, {0.0625, 0.21255741741658069`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          PointSize[0.016]], 
         PointBox[{{0.16666666666666666`, 0.13672183115440933`}, {0.125, 
          0.0661816712146462}, {0.1, 0.04865348267414041}, {
          0.08333333333333333, 0.04078812890874241}, {0.07142857142857142, 
          0.03510149128226873}, {0.0625, 
          0.03071718428399148}}]}, {}}}, {}, {}, {}, {}}, {{}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.4}, {0, 0.3}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"z\"", TraditionalForm], None}, {
        FormBox["\"1/N\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> Directive[
       GrayLevel[0], 16], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"k = 0\"", 18, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 0.4}, {0, 0.3}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"\[Beta] = 0\"", 16, StripOnInput -> False], 
       StyleBox["\"\[Beta] = 1\"", 16, StripOnInput -> False]}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5760000000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5760000000000001]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], 16], FontFamily -> "Arial"}, Background -> Automatic,
          StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.016`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.016`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8108776132852*^9, 3.810877619410508*^9}, {
  3.8108793536884527`*^9, 3.81087935808403*^9}, {3.810879447758932*^9, 
  3.810879454772129*^9}},
 CellLabel->
  "Out[220]=",ExpressionUUID->"157e06a6-180b-498c-869c-f8ead9dc4508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"line", " ", "=", " ", 
  RowBox[{"Fit", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", "it", "]"}], "]"}], ",", 
        RowBox[{"z", "[", 
         RowBox[{"[", 
          RowBox[{"8", "+", "it"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"it", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x", ",", 
      RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.810879362811426*^9, 3.810879373014073*^9}, {
  3.8108794046905117`*^9, 3.8108794105484743`*^9}, {3.810879515784029*^9, 
  3.8108795172394238`*^9}, {3.810879558900799*^9, 3.8108795702576447`*^9}, {
  3.8108796692666693`*^9, 3.8108796965610237`*^9}, {3.810879752536487*^9, 
  3.8108797557561197`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"dac4164b-6dfa-407c-b3f0-767fa3d57c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "0.00129330166018597442638942990998578709`14.234618416574595"}], "+", 
  RowBox[{
  "0.53376827874673802471237353266305205723`15.471541774619936", " ", "x"}], 
  "-", 
  RowBox[{
  "0.34334905115977347508899299889456227731`14.471823423743805", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.810879411311194*^9, {3.810879560414872*^9, 3.810879570696697*^9}, 
   3.810879697584867*^9, 3.8108797666015053`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"0c02e1d5-a04e-47b2-9788-f0bac58c63d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"line", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.4"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.810879485223675*^9, 3.810879485586508*^9}, {
  3.810879704293816*^9, 3.8108797145699263`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"a7db345d-2e93-4b45-905f-e5c050b881c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtin041AcAx6+Vp2c3aemKwi2vxRLXiSbnGxEmlYtNqVhc02EWC22J83bV
lqLnsCxdmiLKnbc75+13Rc7Lyf1+PNOStyd5i1VoPTGtPc++z/N5Pn98vsbH
ori8j2g0mucH/rNXaa7Ry6EQ0P6fmU+z4y1mGOzDE+7K6FvBptOzf2fGY+iF
x7lBw6P4TTOr5WdyHrdErXIh9xS6eZX8ppIsxNDWtd3RFsB6i+8z2e1caBxY
jKxdQryx0k1MMb8OWcpo8omZi3C5TufaXS3Afsuna+ZXZWHnLuZc1nAh2i38
puN5IoztMTXONyjGdt33KU4FuXj9jZeuvVEpij3inveL82CXuYShCCqDlq98
udXjfEzxIiN526TghWx/rj0hBqOau8atohw3Zb0JU4cLELBa0JzrW4kF5RXa
4ORN+LxBL7u7ClNXPcihw4U4+txjxi1OBsPLtgr/8VtwO6/ilurWID026cs5
fhGeSB8zDmUpkK6clfMeFSNjlD2QsLUOzmHp3wr2luB1AVN7rLoene5vc7sk
pYgO57qoAhtBT1efsbK+h5CYxCOJZwgMpA5ozeeXYWTmWjuHo4Rybm1j8I8S
zL0b5Djo3MfHRZK4EZYU/W4RQwc095GwPLQi+4kUrDH27bzLD9AsLw04nlQO
Xd0NJ5nBTXBe0cOIZVWg46xfRJNxM6JezSx82lMBRvTd8MKZZkRqs6fzUivx
sMH1olT5EMfsjaosbKrgu3fD4KCgBWGryF+vdVSBH2ri4M1VYYOL9SvxqWoE
1kc09jJaUT0v6FSukkEWNXMik2rFn/EDvu7FMtwoytdPK2iDbaNo06y3HCFm
WW/zQtrR+ZNqnDksR4XFnb4puw4cNC+3NE+pQV84/fWxtx0wKAud69VTIIp+
23KpXI1NLfoiRpECl23CeP3CTqRPJ5u0udbiQs5Jss/rEZbYaHR+0dSC/uCR
8Sc6XZiNbpXF8euwbDQ1nHOqC8IDR650LNaBv7nfR9DThamm0fEMYT30qrzK
hzkadPvb7dBb3wDboINl/tc1WOYal+Z8owGL24Sc/kUNmoL8F1lmjVi9v8Un
9TiJkpWOGy9IGiH6ueTNjhYS3C2Tk3/pE0g6mkJNqkg8uXrzmc56AnxWoCSv
jcQhokZtbUDA+Q86f15Nwsn+/ffhRgTGTPhPFd0kMtTT8yPGBBwVm5q+GCZx
/E6waa8Vgf6xwkyHf0hMGF6SS5wIqGoTvhtdJOFatFin5hAoz/D3zqFRuPSi
XTrhTEBop6X191IKK8SJEWYuBGyTQuOr6RRyy70tctwJJOuZBm3TpzCcFlty
ei+BiIl3O0bWURCLlVWifQS+qif1RQYU/H/gS6T7CXwekkzOMikU7O6JHecS
6L435F5pTkGVvdIz4GsCDYIak9CNFBxPe/bEBBAo9st8v9ryw58xwL10kMDZ
dztrYjZTCIg1/+xhIIEwtX626ZYP3akncugwAa74ZTRlQ2Gkdrh04QgBpxjV
vhQWBcNZnz69IAIbd4s3s9kU9oysXdgaTOBf1Cs2Gg==
       "]]},
     Annotation[#, "Charting`Private`Tag$81322#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.299999993877551}, {0, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.810879482426626*^9, 3.8108794861890507`*^9}, {
   3.810879562259225*^9, 3.810879572602316*^9}, {3.8108796999403276`*^9, 
   3.810879716385621*^9}, 3.810879773808611*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"0960ae81-4d72-4b44-813a-54add481d0da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "[", 
  RowBox[{"[", 
   RowBox[{"9", ";;"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.810879577157847*^9, 3.810879582319284*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"6b49bb85-b431-453d-bd18-a7a71f12f79b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.04865348267414040806`18.687113933032464", ",", 
   "0.0407881289087424076`18.610533783197788", ",", 
   "0.03510149128226872778`18.54532556780207", ",", 
   "0.03071718428399148118`18.487381403222425"}], "}"}]], "Output",
 CellChangeTimes->{{3.8108795801090717`*^9, 3.810879582789331*^9}},
 CellLabel->
  "Out[228]=",ExpressionUUID->"168c093c-6f56-4299-b1f7-d8afb2d61bf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "x"}], "+", "8"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.810879616700219*^9, 3.810879640774032*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"56d240a4-8fc9-47cb-ad89-a445fe6bd7b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "10"], ",", 
   FractionBox["1", "12"], ",", 
   FractionBox["1", "14"], ",", 
   FractionBox["1", "16"]}], "}"}]], "Output",
 CellChangeTimes->{3.810879642033024*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"36ba14dd-bea7-4444-bf29-17fcb53e27e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Factorial", "[", "18", "]"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Factorial", "[", "9", "]"}], "*", 
    RowBox[{"Factorial", "[", "9", "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.810880383509282*^9, 3.8108804893260727`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"4ef820ff-1bd8-4c8b-aa47-d16952524b17"],

Cell[BoxData["48620"], "Output",
 CellChangeTimes->{{3.810880452037512*^9, 3.81088048997442*^9}},
 CellLabel->
  "Out[241]=",ExpressionUUID->"32d76863-9b99-4940-9216-b6ce9ab5f6dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"scbaDirs", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/\>\"", ",", 
     "\[IndentingNewLine]", 
     "\"\<./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices\>\""}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.811517074535521*^9, 3.8115170837714033`*^9}, {
  3.811517190726296*^9, 3.811517316342366*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a4f367db-9c07-4199-a584-76e7477cdf17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<spec_*B.txt\>\"", ",", "scbaDirs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
     "files"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8115173779556704`*^9, 3.8115173999365788`*^9}, {
   3.811517482073748*^9, 3.8115175344439793`*^9}, {3.81152308745578*^9, 
   3.811523087845584*^9}, {3.8115813149167967`*^9, 3.811581316053978*^9}, {
   3.8115813943128653`*^9, 3.811581394691502*^9}, 3.8115870327540617`*^9, {
   3.811587361934606*^9, 3.8115873625320177`*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"ef12ce80-2573-4e66-8e96-aee19ff9df88"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_0B.txt\"\>"},
    {"2", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_hpB.txt\"\>"},\

    {"3", \
"\<\"./scba/SCBA_J=0.4t_16sites_with_without_2_sublattices/spec_pB.txt\"\>"},
    {"4", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_0B.txt\"\>"},
    {"5", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_hpB.txt\"\>"},\

    {"6", \
"\<\"./scba/SCBA_J=1.0t_16sites_with_without_2_sublattices/spec_pB.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.811517502954227*^9, 3.811517535270637*^9}, 
   3.81151931889071*^9, 3.811523088374425*^9, 3.8115812197355022`*^9, 
   3.81158131645927*^9, 3.811581395081089*^9, 3.811584902210022*^9, 
   3.811587033091401*^9, {3.81158735461864*^9, 3.811587362899259*^9}},
 CellLabel->
  "Out[828]//TableForm=",ExpressionUUID->"0367cdcb-828a-47b0-a678-\
b28492518823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"specA", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"f", ",", "\"\<Table\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "files"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811517592475273*^9, 3.81151762104492*^9}, {
  3.8115177023178596`*^9, 3.811517815954619*^9}},
 CellLabel->
  "In[829]:=",ExpressionUUID->"514c9ef8-85cd-4cf6-8794-d382b6cf7d95"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.48125`"}], ",", "0.0025043215275468013`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.4625`"}], ",", "0.0025318288108728366`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.44375`"}], ",", "0.002559796827311633`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.425`"}], ",", "0.002638929550020799`"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.40625`"}], ",", "0.0026689224772616614`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.3875`"}], ",", "0.0027678123159690705`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.36875`"}], ",", "0.002800454194110284`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.35`"}], ",", "0.002833566040053764`"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3.33125`"}], ",", "0.002867875838345834`"}], 
              "}"}], ",", 
             TemplateBox[{"702"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"9.85`", ",", "0.00033263243259051535`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.86875`", ",", "0.00033132264290695`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.8875`", ",", "0.00033002065222284896`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.90625`", ",", "0.000328726398076502`"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"9.925`", ",", "0.000327439818637398`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.94375`", ",", "0.0003261608526985196`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"9.9625`", ",", "0.0003248894396687024`"}], "}"}], ",", 
             
             RowBox[{"{", 
              RowBox[{"9.98125`", ",", "0.0003236255195651472`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10.`", ",", "0.0003223690330059939`"}], "}"}]}], "}"}],
            ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 829, 29684707051748738101, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29684707051748738101 === $SessionID, 
   Out[829], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.81151777973911*^9, 3.811517821698127*^9, 3.811519320634116*^9, 
   3.8115230912389593`*^9, 3.811581222035466*^9, 3.811581322336815*^9, 
   3.811581397281972*^9, 3.811584904597309*^9, 3.8115870361626863`*^9, {
   3.8115873575067472`*^9, 3.811587365363015*^9}},
 CellLabel->
  "Out[829]=",ExpressionUUID->"ade531fd-8ea6-4353-a52d-9cc6f0b92f47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pltSCBA", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"specA", "[", 
        RowBox[{"[", "ik", "]"}], "]"}], "+", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"8", 
            RowBox[{"(", 
             RowBox[{"ik", "-", "1"}], ")"}]}]}], "}"}], ",", 
         RowBox[{"Length", "[", 
          RowBox[{"specA", "[", 
           RowBox[{"[", "ik", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ik", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "4"}], ",", "40"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "0.75", "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Pi", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0", ",", "Pi", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<SCBA: B, J = 0.4t\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8115178269097013`*^9, 3.8115178427847433`*^9}, {
   3.811517885323152*^9, 3.81151796139762*^9}, 3.811517998691931*^9, {
   3.811518049488576*^9, 3.81151808596148*^9}, {3.811518184484426*^9, 
   3.811518290772787*^9}, {3.8115183831148157`*^9, 3.8115184329185753`*^9}, {
   3.811518535470648*^9, 3.8115185439158792`*^9}, {3.811519322819046*^9, 
   3.8115193244159737`*^9}, {3.8115194955509367`*^9, 3.811519495871478*^9}, {
   3.811521676966671*^9, 3.81152171453854*^9}, {3.8115231054838953`*^9, 
   3.811523493995249*^9}, 3.81152378166276*^9, {3.811523820654086*^9, 
   3.8115238803435297`*^9}, {3.8115239486300383`*^9, 
   3.8115241021892014`*^9}, {3.811524167399619*^9, 3.811524234796139*^9}, {
   3.811524348169194*^9, 3.8115243789040318`*^9}, {3.811525306017968*^9, 
   3.8115253204575357`*^9}, {3.8115254047173367`*^9, 3.811525413603704*^9}, {
   3.8115254706014442`*^9, 3.811525517306014*^9}, {3.81152557778585*^9, 
   3.8115255905065737`*^9}, {3.811525754732668*^9, 3.811525809413684*^9}, {
   3.811581211057076*^9, 3.811581232786867*^9}, {3.8115813332004757`*^9, 
   3.8115813399709387`*^9}, {3.8115814007245693`*^9, 3.811581434474861*^9}, {
   3.811581643787278*^9, 3.811581647563939*^9}, {3.811581879744314*^9, 
   3.811581882599401*^9}, {3.8115820060427856`*^9, 3.8115820166219883`*^9}, {
   3.811582048100915*^9, 3.811582048623547*^9}, {3.8115821524925623`*^9, 
   3.81158215272195*^9}, {3.8115826953205853`*^9, 3.811582695458333*^9}, {
   3.811584949470475*^9, 3.811584949685066*^9}, {3.811585223488202*^9, 
   3.8115852682040453`*^9}, {3.811585332401003*^9, 3.811585333626493*^9}, {
   3.811585390209573*^9, 3.8115854028845053`*^9}, {3.811585445250011*^9, 
   3.811585473605734*^9}, {3.8115857495228577`*^9, 3.8115857663256083`*^9}, {
   3.811586209395442*^9, 3.8115862208036337`*^9}, {3.811586303958202*^9, 
   3.811586318668688*^9}, 3.811586863797008*^9, {3.811587039064695*^9, 
   3.811587059742651*^9}, {3.8115873708798027`*^9, 3.811587373922447*^9}, {
   3.811587422645377*^9, 3.811587423210788*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"75fc45d1-7b8d-4e47-be47-961b966ba28e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1: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
/H+xhE5X
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1:eJw9mnk8VPsbx8cMM/bsjHUWIklEQnSeytJCKaVIe2nfuEKrS2nTrqJVKkk7
Kkqd0yql0qqJQraUsq+Fn1/3PN/5497XeZl5z+d85n2e71kSz1s1eSGXw+EU
9v3n//8/mtT3kqkw2uPkX4rlRODw/1emCiNJuP/KvG/7RUHfK16F6Swu/mzZ
tx3y96XCbByyc9i8vm3O/1+gwpjuH5sa0rf9lydUYQymvw9KQV6zMmNHn3FP
Q16BMiM8uWHUFeSlKjPrOImtWciLVmY+ftateY28QGUm6GPNQhnyHJSZybIJ
+8uQp6rMXNy6oroJedVKTK6yWWYX8hglJn9ikpE8l+UlKTGrddPHaXFZXpgS
I9yy5Ichl+X5KDHO2yact+CyvP5KzNuD4vYhXJbHUWK2jby33Q15MkXG/to9
pbHIy1Rk7uqtGhGAvHhFJkfxZOMc5IUoMjfUh25ZhTxQZJQXxQo2Ik+oyNzx
y+fvQl6zgOE6Tr2eiLwCAcPJfy0+j7xUAdOz3zMgC3nRAsby4MWCB8gLFDB5
Vd+kb5DnIGDWy7ja5chTFTAdt7dmNyCvms90pfRoyfGwPz4zNv7fXZo87I/P
rNypTEt42B+faRmcd96Rh/3xGW7Lo1ovHvbHZyYM28wNQh6Hz0yX2n1agTyZ
AuMTVQIxyMtUYH5sqzlwBHnxCkwi9/DVy8gLUWCiY1WPPEIeKDDlUTVrSpAn
VGDOJg4e24q8ZnnmB001qstjf/KM2lqrrAHy2J88s+7q5e2e8tifPNPtHrFu
njz2J8/oTd9+L1oe+5NnypRGBScjT1We2beUnnEfedU85nSwQ1UF8hgeIzg/
Qk1RAfvjMTptRt8HKWB/PCZ74sizUxWwPx6jeOzBtM0K2B+PKZYfaHFRAfvj
MZbjFYbLkCfjMm75PowSH/vr225IKHPjY39cRvB98LtQPvbHZQLC972+yMf+
uMxL+2itb3zsj8ukWD8utxRgf3JM4cijccsE2J8co509aEqmAPuTY+wutF7s
FWB/ckzJh55WP0XsT465Lbx1/rwi9ifHXNBTGiOvhP3JMeesKpYsUsL+OMyQ
Wt/M10rYH4fRPltcMVoZ++Mwze+M3txTxv44jKNPR+hoFeyPw5j8CCt/o4L9
cZiqkurZK1WxPw6zgmc3X19NBI5/++qlj3pYn3ylhv300j4j7ZSS1LGPXnr8
Wf+W8H4i+Lv7BT30+RnxRks0cH976GdLe2+Ha7I8hx5657rD109p4f5009ys
dWk/tDF/Nz0/P8Nzti7L8+mm/+ltCJPTx3zd9N6otcwnA8z3h54Znl/Uaoj5
/tDrXuc6zTHBfH9o3h1HyUAR5vtNP6K8BCukmO83LdxitXW0Jeb7TXuOk236
MBDzddE6jttkwfaYr4teGBwrNXfGfF30I4O8RScA83XRX413Pgsbj/k6aZvb
901vBWK+TjpR3ufrkBWYr5P2++Z41HEH5uugFzgXZRzLwnwdtGzL6LP3OGI2
XwfdFaXQm5QuZvO105MXnXh3eLg5m6+dvjQr3Ka00orN106bLBp5wt6vP5uv
nU5xj2+YvcSezddGp/HdAtS13dl8bfRB/sIBnits2HxtdPNJtxcru4aw+Vpp
7mSZXFqGK5uvlTa/ZD43NGEAm6+VXrm7rbnzgDmbr4VObD2/bXsV5muhZc52
Y434tmy+Flo0zm4jE27J5muh460djC68tmXzNdMeeQ5bSlsGsPmaadGh8PLv
iyzYfM100KFlikuE/dl8TXTNbPuX17dasfmaaK+lSTv221mx+ZpojaKak6rB
Fmy+RnrEiagv7V+s2HyNdMuDfW7uffz/8jXStoq6Bc/fStl8jbT/0wnKOo3m
bL4G+s8BXasNrpZsvgbaz8fc022RJZuvgW4tnfvBLbg/JP7l19NdPJ5XsJY5
y6unhx9wd07sksLiv5//Re8J39uz9h9zKPwb4Ce9Zud6/+xpFmD3N/9PuuPc
vBuX/SxYXh1t66M7bE8b8urolePWLKDGW7C8H3QaLN5heEPK8r7TjqoZMZNs
pCzvOy1qve88IAB5tXT9GPOzYGLB8mppsanug+W7Md83erP5w8Oly5FXQxtL
L8vUJiOvhn75oyrD7LqU5VXTlaXNGbc1kde3felc07FQ5FXRHuvyg86kSVhe
JW3vc2vks7cSlldJP3mreipYw5zlVdD7fn+oyDHD/a2gNyV3r3f7I2F5X+lf
zw65Gp5BXjkdEaXyokqGvHLa+Gpr42MPzFdG7wu4++bbXPx9y2ingTP3r2Rw
/77QB6w75wuEUkj++/7PNC9mw11KWwpz/n5fCZ1pY/P27jbc/2K69+Fy+wHJ
yPtEC0tiYyLTkPeR3qD+7lNxHvKK6MqoWytmX0XeBzros1dCdhHy3tMvX619
3voIee9ozagcX9ET5L2h1/ENf/bUI+81fXJ4vwH5l5FXSK9M++Brlo7bL2lb
7xuntkQir4B2PVa8at9J/Hw+HRM53H/JVin8t4Dk0eWjVi53CJMC8/f7HtFB
G24MdPdG3gN6ctri56fckcfQt02i+kW64efv0HvWhbYfsZZC9N/336T5HZtz
eV0SiP77fdfpAoXZSdOqcPsCPVnRJqL0k4TlJdNrpOZjat73bf89oHbQWQGb
yqwe9m3//QGjqPcPIxYFnsC/J1GZb53f3N4sYb8vlfpgfl55zmbkXaPqLALW
qURI2P3JouQHHTVtD8Xvz6EcKs5xxs3Az9+jNI6NMPviL2H7uU8tmXd7knAC
8h5RU3fpjDzc9/f/+nhClUYULlYPQv5TKmnoi7GSvr//18dzyuam02VREPJe
UPTjytr7IcgrpPISC2/mhKOvr6nuO59Kdm1G/hsqZqv/oZ278fNvKeWcmZpe
Sej7O0ovPS3ofhryPlA+lszapizkFVErEu727spG3kfqz+mUL3G3kSejmg7V
lb7NQt4nSjF+2fxDGcgroXyCIwsPXkbeZ+rfgzmFfqeR94VK2RnqFJiAvFKq
kpE9N4vB47OM2r3v3MP2COSVU7dSor5qrJCwx2M59fPbj+rd85H/lZqy46bL
uSDM85Va1axruNQPeRXU4NXGnABf5FVS0TmW2f/4IK+SGhhbMeaIL/KqKL+h
97eemYS8KkrbZdWZG/7Iq6b+qL8Wq0xDXg2l75wbbx2MvBrq5godl89zkfeN
atp6Ijp7MfK+UQ5ZpnGSlcirpQbf39TzZA3yvlMnJYqaeWuR952q27CuesJ6
5P2gJkz+NOtzNPJ+UHN2dbdI45BXR+2NHxKduxN5P6kSa6e1xXuR95Oafswt
9tNB5P2itDonSTcmIu8XVdi0uH7MSeTVU1PfK130Pou8Bmr//sM2p9Il7PrX
QHUMemm2/iryG6gp3hFvZ2Wxn69uoJTaV8jq+/z5b31tpFT3lBoNfsDyohup
i2mH7Ubls7yCRqru+oS0C69YnrCJ+jBvQsCP95iniZr8zmXAts8sL7OJCvzu
flGzGvM1U3LGm/NCf2G+Zkq9eW2vXDvma6bU+EU5l3sxXzN1u3KSz2glKZuv
hbp5/OQ2OR12XkW3UGvPns55YCpl87VQ5eKpwY7W7PogbKWOXJszX2Uorlet
VOSdEwcuAcvLbKUOlQzSpHxx/rVRhQYZlceCWJ5P3/YcQX/VxbjetFFmamVC
y3CWV91Gre5VMFWMwXzt1JYiq/YvezFfOzXz+BBe1EnM1061d3lO3ncZ83VQ
z6a8OmWdi/k6qPgjIRdCnmG+DirBMjIGZJivkxq0Osmx9hvm66QgYnxRYwfm
66Rau/OWtSqas/k6Ke4B558ZBuz5jkMXJRe6gaM/gF1/o7sop8vNt8Su5my+
LkptaN3H5PHsei38TdlYTG53mMnyQn5TStx6+zsr8fzpN+V3x2HK92hcz/9Q
0Zx/SzYfZHk+f6jvCQ3HH6Xi+v+HslMP7hLcxnx/KMPSrYMnvsB83dSY/j2m
t8owXzflcbXf5gstmK+bCjXWcW5UZM93hD1U5LjkelcTPF/qoTyaF19Ssbdg
8/VQAWohrdc88Pyll0qdWxG5ejqeH/ZSMZ+W+zYvw/OnXiroa8D7wk0sr7qX
WlTOGZi+D89XOSBY77207DTLAw48S/GaNiyDPR8N4cCIvd8+rbjP8uM5sPHP
oxEqrzAPB16+vav77BPLk3HgdlWw3atKzCcHmjMVZz2uY3n95eBTYcSTMU2Y
Vw5yTu5S/NHC8sLkoCfVQhzRwvKS5ODhIofo7AaWx8iBMn3AfFUtni/LgXWi
S5z0C8tT5UKCd8qcUy9ZngMXFK1pr1u3WV4gF/z4mYazUlheNBc61owZuX4r
y0vlgmspN01hAcsr4MI535TmoSNYXjMX9n9qc/LWwf548M6vJjS9mv19gQcW
KTubH9xgrzdCeDCLzrE1iWF/73gexPBLJ0/0Qd94sEjVctIfHfZ6RMYDF48a
3VcleHzIQ8Umqwa/s1K2P3koHhS3x2Q5Hi/yEJPptT3bkT2+wuTB9ZRW3NEe
CdufPPxesHWU6Bk7rxh5uOIWKj50RML2Jw//tlYvdlnEzi9VBTAvlqxydcH5
qQBRQV9WXVNjeYEKUPRx7brzlWK2PwW4ZDxgo/k99vovVQFGN8zvFh0Vs/0p
wK6RtPLeSPZ6sVkBvhZrpk0LFLP98aGqqe7pAjeWB3xYKtNZcUzM8kL4cMjI
zLxUkeXF88FebrKVZhNez/LhnEXYZ63PeH+FDzd2v/iYl4/XvwIIcF+ZopmN
9xcEsMBgwp135/F6WQC/BLUnWxJZXpgA/JY5lE/bhdfXAvCkDOurNuH9DQG8
Dt9gsS0Mr8cFELPh8zmLJSxPVRH49w83XpqN1++KMEfQJVCeJvrveAxUhOLq
saYDJ+L1tCKUZFcW9nqL/js+UxXBePGkxsiReP2tCDpKQ2K3D2d5zYrwZLbL
brETyxMqgTLP2t/ZHu8PKcG5awu+3rdheSFKMD7NZ3SWFcuLV4Kh80c58S2w
v773p4bNuipmeTIlmB7+XCvNFPtThq5DNgNqjVhef2X4RD0avlyI/SlDe7e3
90B97E8ZeOHpHSJdlpekDHovdo4fo439KcPW8NibxzVZXrUyLBlaZGCogf2p
wNXaDxdy1bE/FVCzdGiPVsP+VMDj2dcP8/H+ULQKnKi3WDZPBftTgdqNy3XW
KWN/KvBe0Wx1mhL2pwIvj6hM+KGI/anC3dVemaCI/amCUsWlV6kC7E8Vzrks
6TUSYH+qMNan4f5JPvanCgulC3IH8bE/Vej/4ndGHrn/pwbOTdrblylgf2pw
7cJYVwMF7E8N8uLavxTIY39q8Do0+tx2eexPDY5FxLwaR+5PqkGSVXymljz2
pwaKdWHZpTzsTx3q1wdMvc7D/tThd/2Mftt42J86pAzaHjkH78dGq8OHQxtt
3XnYnzpse+YjM0ZegToI5Zdb93KxP3VotjxRXMHF/vqBs/qUK8/I/fF+4L4x
ZWkmF/vrB0NT8r6c4GJ//cD7o8uXHcjL7AeGAWtGRiBP1g/OtWlVLST37zVg
X+jVC1Px/doaoFflFOZF7vdrQHLQGStnvH/uogGDxt3JtMbv89GAlqwDHFPk
zdGAS2UbujWRF6YBvivOHOUjL04D3vg05P/G5xlJGrB72NNNjXIs75IG7FpS
e7mGPK/QAMO0kb5f5FjeWw0YNu6l/3vyfEMDutw25BQgr7Mvn0At4hHyVDVh
ijknLhd5Ik34PWBDWRbyHDRBMHrEv5eR56UJBrvj5qeS5y2a4BevGnsKecs1
QVNYX5xIns9owsULF5ceQN5BTUg4qmkTT57naEJ2tqtJHPJyNMEpN2Z4NPIK
NIGXvnnLOuSVacLVrD+t/yCvWRMeD2jevQp5fC0I/xE3bil5vqQFrb851guR
Z6MFaeMKrOeQ51Fa0FK8ZvwM5PlrwVu5wzsDyPMrLaiLaq2ehLwoLfCXzp/t
i7x4LfB987hpDPKStaB4jV6yB/IytcA6aFYIIO+JFpx9fMPDDXkyLRixf5Sr
M/LqtEC/08nLEXkcbbh1qnCRHfK0tUFx27STNsjrrw1HfUxqrZDnog39Zmzw
tkCejzZ8HVWULUbeHG3gmyW6mSIvTBu28+zeGCIvThtCtulF6RP/tEFtXL6d
DvFPG1YeeN6hQfzThud15wrViH/aEPux6pYy8U8bgiJNrgiIf9pQ7VORIU/8
04H8pteP5Yh/OlBYs626h4P+6UCX/3mdPxz0Twf0it5P7OSgfzqwPij3SBsH
/dOBjCp+XTMH/dMB+YgFPo3IO6gDjZ/jsn8hL1UHHJIkdnXIy9EBm5u/MmqR
V6ADAzLPQg3yynRAOJ8jq0Resw4Me0uv/4o8vi4EDzljVYY8oS4cyFle+hl5
Nrow9nDZqWLkgS7EvX+0RIY8f11Y4VfuVoS8EF24mdRr8B55UbrgXPe9+w3y
4nXBw3D1j0LkJetC48aZ5S+Rl6kLku8xpQXIe6ILvsevVz1DnkwXmmxzm58i
r04XsuPXKuUhj6MH/Stv9H+MPG09qD7mN/4h8vrrQaK3acR95LnogfhE+wUa
eT56ELH0ZsVd5M3RA9muoea5yAvTg8ivfstuIy9OD+LGV2VnIy9JD5KPFKre
Qt4lPTgR0xhyA3mMHly4aJmXiby3enBnt/+gDORV64F/ZEDSNeR16sH27Voq
V5Gnqg9BKUtjLiNPpA+jlo7qvUj80wc1atO/6cQ/ffjlwFO6QPzThzzlW4fO
E//04apttGUq8U8fLl7xvHeW+KcPJ5zrA88Q//QhWGdh12ninz70mO47lUz8
04epTwLHniL+6cN2+UvtJ4h/+lA1Y036ceKfAeS/SZh7jPhnALn1ciZHiX8G
cP7G2ZJE4p8BDE5eknyE+GcAQ5LdFx8m/hnAPAN1x0PEPwPolj3lJRD/DCBV
HFx0gPhnAP4JN6/sJ/4ZQJBb3o59xD8DOBq3cfFe4p8B3KTyx+0h/hnA8v1H
7XYT/4TA5XwVxhP/hJC3aB9/F/FPCOldh9t2EP+EUOteU7ud+CeE54Kwsm3E
PyGEbbT5FEf8E8JDDX7RVuKfEKZsavqwhfgnhH+eV8piiX9CAI/C0hjinxCe
RaV9+5f4JwRvmNsSTfwTwtTLv7jRxD8hjNHz1NlM/DOEHeqBVpuIf4bQs9CM
2kj8M4TNlrunbyD+GULQkSP/rCf+GUK5vePBdcQ/Q+i9MD0rivhnCKU1XUWR
xD9DOCzQ7Ikg/hnCl2n7+0cQ/wzh/fTQSWuJf4aQfzt9UzjxzxCUZtpf+Yf4
ZwhPfLpLw4h/RtD4UEEnjPhnBLZWo8aFEv+M4LFSeswa4p8RnJYMvbua+GcE
E6cWd64i/hlBv0sJzquIf0ZQNi0waiXxzwiOXhXnriD+GYH64GrOCuKfEQxc
e8p7OfHPCPqP8dq3jPhnBFd2vv20lPhnBGaeYLmU+GcMD05tDV9C/DMGlYrj
jxcT/4yhbO1m/cXEP2OoKu+/bBHxzxgKnsYzIcQ/Y0j7ma4fQvwzhrGD169e
SPwzhqTt7c8WEP+M4Xc/Q8sFxD9jyGor2TKf+GcM07a7Vs4j/hnDIOtBnvOI
f8ZwMejq+bnEP2OouXZHZS7xzwQ0SnzWzCH+mcD3lJkfZxP/TGBCxTeYTfwz
gav7a9NnEf9M4ER2kN4s4p8J+EYOi51J/DOBgfz1jcHEPxOYf0k0N5j4ZwJr
86VvZhD/TODFq80eM4h/JjDR0y47iPhnAr0P7AYFEf9M4GDLhjOBxD9T0EvU
MAok/pnCto01B6cT/0xhY1y32nTinym8ODdhxzTinynYlX5QmEb8M4V6rwOx
AcQ/U9glt5EbQPwzhVWjD8ZMJf6ZwnG/17ypxD9TmL3BIW4K8c8Ueq1uKk0h
/pnCP3lT9/gT/0xBUqSu40/8M4OdVZ+PTib+mYHKHloymfhnBseirl2cRPwz
g9hZl4dOIv6ZgRknk/Ej/plBiu09Hz/inxkUPnkum0j8M4On1z8umkj8M4PH
leVtE4h/ZlAzpzJuAvHPDNqGfNafQPwzA5uw/Au+xD8z4HimuvkS/8yg6cPq
Qh/ye4lg8rz+C32Q13cdrjHwUdd48vuJYPdm7/3/3/6ro1QEC7MvW/1/+++/
37ARgYdzCzMOeU4iyFxmEDSO/L4iqH+q3zIWeWNFkPOqfs9Y5PmLwEbppPVY
5AWLYL9AlDeG/P4iGBYStmAM8laLwDv/EHcM8UEEyZ+3nPZGXqwILk4fMdIb
efEiGN5Bl3sh77AIZscIYr2IL335H2tZeCHvggjUj5TmeSIvUwQ33i9b5om8
XBF8DbnRz5P4JILCYbezPJBXKAIL98ggD+KXCN6H/uR4IK9CBPwS/bTRyKsT
QU1M68TRyGsTwbHILR2jiH9i0H3/4PQo5CmJofvmlfGjkKcthoTRXm0jkWfc
t5267fRI4qcYDLXW+I5Enp0YttzjdAHxVQwzvzueB+SNFgP1SWUqIM9HDLc/
xvIAeQFicHM6lkERn8XQMcZvHoW8JWIoWH5ai0JemBhseLsfjkDeBjGohGmG
jyC+i+GB1SDLEcjbJ4bOQ19k7sR/MRy2N9/tjrwzYjgT8QfckXdJDC61C1vd
kHdTDKtUZ6e7keNDDKOXV892Q15+3/4ndum6Ie+tGB5bHC0YjrwSMYy6/DB2
ODl+xPCuIHz4cOQ1iEHW/2qzKzmexGA1b+UlV+TxJNAxIGOhK/JUJfBuUJSZ
K/L0JLBD/EDmQua9BHTu7kpwQd4ACezNfTfRBXkOErAqO6bigjw3CSjXleY5
k/VAApPSTm1xRp6fBLrKZCOdyfrQ9/0Ld/cOQ958CaxUzrk7DHnLJaCROmPD
MOStlUCq9j/Dh5H1QwIZ9nK/nZC3QwKeX+XuOCHvoAS+KYevd0LecQkkJgS6
OZH1RQLXl13pHoq8axKo3hxKDyXrjQQcHp39dyjyHkrgja2Hx1DkFUjAJmei
YCjyPkjg1ewnzxzJeiSBeZLzexyRVyuBo7zGyY7Ia5bAQKUz+o7I+yOBx8Nz
SxzI/JNCb+rwFAcy/6TgHyha7EDmnxS0FyyxdSDzTwozinVbh5D5JwXlD+a5
Q8j8k8KtFYdih5D5J4Vz90LGDyHzTwp3a45oDyHzTwqxylYl9mT+SUF1vN45
ezL/pNDyau5KezL/pBDwQMnZnsw/KTzyVePak/knBffkZQV2ZP5JweK79Igd
mX9ScJ01dJ4dmX9S2Gd/apAdmX9S2HpsTudgMv+kcOd95OPBZP5JQcO4Zv9g
Mv+kkHApfdZgMv+ksCXvwcDBZP5JYdRV205bMv+kMD7t5xNbMv+kMKSzJ8GW
zD8pHP0+d74tmX/mYJ2nO+T/2/8DCOBfoA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Opacity[0.75]], 
        LineBox[CompressedData["
1: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
0HSqmv+wDvK41MH2nH5oKFOH+B+0XxGh
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{-2, 4}, {-4, 40}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SCBA: B, J = 0.4t\"", TraditionalForm], 
     PlotRange -> {{-2, 4}, {-4, 40}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\[Pi]", 
       FractionBox["\[Pi]", "2"], "0", "\[Pi]", 
       FractionBox["\[Pi]", "2"], "0"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8115853960417137`*^9, 3.811585403302354*^9}, {
   3.811585449220873*^9, 3.811585474048873*^9}, 3.811585766994076*^9, 
   3.811586221627654*^9, {3.811586304921339*^9, 3.811586320404952*^9}, 
   3.811586864407593*^9, {3.811587039974629*^9, 3.8115870603267384`*^9}, {
   3.811587367978191*^9, 3.811587374250636*^9}, 3.811587423634571*^9},
 CellLabel->
  "Out[838]=",ExpressionUUID->"19ca7336-dee6-4ab8-a3c6-bb2884499d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pltSCBAvsED", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"sliceA", "[", 
           RowBox[{"[", 
            RowBox[{"it", ",", "ik"}], "]"}], "]"}], "+", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"ik", "-", "1"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"sliceA", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "ik"}], "]"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"ik", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "5.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<ED, L = 16, J = 0.4t\>\""}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"it", ",", 
       RowBox[{"Length", "[", "whichFiles", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"pltSCBAvsED", ",", "pltSCBA"}], "]"}], "//", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.811581449845387*^9, 3.811581471017989*^9}, {
  3.811581535015008*^9, 3.811581630435894*^9}, {3.8115817962831182`*^9, 
  3.811581859959257*^9}, {3.811581961652769*^9, 3.811581965312661*^9}, {
  3.811582027555839*^9, 3.811582033625993*^9}, {3.8115821393123417`*^9, 
  3.811582168809359*^9}, {3.81158249175467*^9, 3.81158251330171*^9}, {
  3.811582580870253*^9, 3.811582651184676*^9}, {3.811582687935507*^9, 
  3.811582688117284*^9}, {3.811584940298668*^9, 3.811584942386088*^9}, {
  3.811585293848329*^9, 3.811585329622467*^9}, {3.811586833246352*^9, 
  3.811586884956345*^9}, {3.811586958213578*^9, 3.8115869587043877`*^9}, {
  3.811587385005937*^9, 3.811587389014368*^9}},
 CellLabel->
  "In[839]:=",ExpressionUUID->"8bca75e9-0b29-475a-ad07-301ff2c5609c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1: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
zW7q1P8A5KLl3w==
           "]], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw11Hk01WkYwPG3y7UlKvvSUBGpSEoS9SqTRhmUbImS5arsS5GtiM6dZjJR
qYOmTWXJlkL0GEulbNm3LBf3Xtt1kzG2at5xzu895znP+Zznz+8571pX3yPu
NISQO5n/d4YwZ9j5Ox+W6UWvMaIhfCnTbr1XKx+O2ysomRHbW74/GZjFB4N2
n3NHiHW+GqRFxPCBfoIt7UwsdPtZd7wjH9RCV8ufIf5sqKhwQ5cP2LcwNIT4
RS/TNkWED1Z7q4xjiGXp/2pYwCTwOF6MBOLqwx0PTnlPghRX7HsqcWBS8ZoQ
pUmoo/8ikEW8tuduMrOGB8tPCkeUEDesD5e6d54HZk0+fjXEEWdP/FGgzoMr
eVOsDuJNBXtE3zdPQMPosS4ucee8SmzPpQlwuJbrNEccv2/ZD77OBJhWBvuJ
CSC8g8kKpfeOg55DmLIy8eCnymmFa+OwWLbgqU18Q+Gxr7bhOGhnPnE0Ican
4kb3cccg2e/Rog0x76mnu92tMeiYv2PrRZzCP9h/1nQMitJf+0cSmxtoHY+e
GoWwmSa7JOLZqOVtSX+NQiI+JJVJnP5u3OrZr6OwKWBPTgWxjWT9x7LFEeim
xezsJqbZ5RxoyhiBGsPXRdPEuWkJf7PtR8CG744lBRF2ZvsbLQiNgCqH36NF
LK599JVkIRcqf9SmmhGXBG/fpnaaC7besYnuxIwymWyDVVxQ3dLcECtI9eAA
CFa4PyauWurBAT2bKq93xAFLPTgwJdX5ZZRYdakHG7xP58ispFM92HBNsYGn
T6d6sGHjQHWyC53qMQyFrg66TDrVYxh8zaHjJZ3qMQwp9d15w3SqxxDk5MSz
ZIUQHlrqMQRTBb2J5kJUjyEIbLo9FS1E9RgEH3+GTokQ1WMQDO2ComaEqB6D
cHRbrbK+MNWDBWL8xQOhwlQPFuwOz99fLkz1YIHAgp/LchGqxwA8UGLwHEWo
HgOQ0OBmkSNC9RgA02g2S0SU6kHuXSdUGaJUj34QDEuJqROlevSDxs7I5F1i
VI9+OJbRNp9FvFmMZ3k3sg+sc3PsNZcjzLyT+3NlVy/EXeYGZRGzNQN3j+v3
giTjoJahOML7inboyiR+Bp6tsm8TcZrZ7IY9kz0QahHuELIC4fm2EmXPQz0w
KeGkpiGBsK1HxOqEJ90Ql5+4g02c/89ekWKBbvB8LqdeKImwxBXa9wGXLhiM
Tq++uRLhM9LVX8VKO0G631SHuQrhtw/jR/TkO+Fq39zHpNUIr9Mz73MK6gB2
pZNnkRTCkRXirVca2+GhRJ7JrDTCXdYNH55vboe8hDgNe1mEDQb+LG+/2gac
W6rXe+QQTvKzeYmGW8Ek1KqMqYAw/4ds1kaTVpiIR9MMJYQPX++8fyS1BYK9
grMj1yD89KeU2xfnmoH1wIPbooKw4HPn3x8da4ab8veZIesQPmm8NqYurwna
3m9k+akjXFo7eGFmRRNMVahbtWgiLO+U7qNy5hNcjH6xpXAzwkFjDLeDbxvB
q9GStkUX4cawTY7+6xphwPOetpM++f+ke+5t/1YPdZcD8DkjhFfqnfotrrAO
FgpmcOJ+hGut2SEd3rWgfvpFuPxhhGP9zrpqbfgINrMfbhy3RdjoOt8ivLcG
7pREqfS5IjydHbyr/tZ7mHbWOuAQgHBW7byaquU7yEihKdZfQdhtLGplgPBb
CCgdNXydhrCyGH2xEqogUzD1hSsg3KLJ5MhcqIS1PnsjrMcQvmYm2ey5tQJM
n1o5Omsuw6YeSW+KueUQnOsmmh29DM+K6tnI7QMo3ZYQIC1Mwwwz402v80th
J+vV0eIBGu6PNaO5rC8Blsnlom8egtiqwrqTlvQK5HIbnSTChHH5j+O56YKF
kJ8zl231RQJvNfaINw/Oh84mznnPTEX8xlReXO9+LqClp4b/A+4d8XM=
           "]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          Opacity[0.75], LineBox[CompressedData["
1:eJw92Xc8V//3AHB7y3zbldKnQTtaqnOatCQpJVnZDaQiI2SVZGXvTUilkpYr
DaWPEopQkiirSJnh59vnvH9/vR/3cR+ve8+9z/frvM553Rnm9nqWXBwcHKu5
OTj+95vL/7XNeLyXue59gduiYAN45xmo2L7tZRTiSi+X9G6A/buemzrl9zI1
ARqGfuobYVH/yiQPn16mOMNpoOzMRuCLvtIYYNjLcMRVHj1XuhE+rFaQD18y
OX7sm+prgU1w62PgvgSBXub5jwCR23qbQIZ3cM5O5gdzKzLCFJM2wdMd9Wlm
x34wDqdPfPfo2gROEXennlb8wdjOjxt1Xb0ZZjTFxQS++M7ckfDdvfniZnit
4i6V7Pydmd/XvrHrw2bwOHIo+OY/35nR6bp33JZuAbWb6wSf1/QwC58rzOW7
sAXej0z3bfLuYYTj/r0R17IFAjZwTvQu6mHMQj7KbFujBRqBn8/wfuxmKrqH
nv8TqwWtbx7/kg/qZqyX5/bBkBaEy2faL1zdzSRYpLrlHdAGNPPv3PCti+HX
Pqnk/lAbvudYWxpEdTEPH44aP1PZCgm92p+ObOpiCqR1C5KDtsK2laoHvX52
MiF1DmbThrbCkKfwu4iUTmaxZEb5AattkFXerXtFp5MZmRGnYVe3DfTFXr18
+KeD0VpsIWW7fTtwGVzbUp3bwfQk7OhyKNsO15NCH7Xv72AMPqeeSVyzA4zb
HdeM8nUwKh/8Hgrf2wEiC/fcEbv9jdnRWivUsHon3DulvnTW4W+M1cNVU+cy
O8HmIevqSolvzA1zv/myWjrk8ZXh33uYq6JaB5789fjKRGb6SVia74ITfz2+
MkvErIKnDOwC5b8e7cyQ/MdNg1t0yaOd2T5o6S8bqUse7YxSd73i2TZd8mhj
eKq7Fm9YuZs82piiDuNp7pd2k0cbE7Y5y31z227y+MK84OtbcRf04Mtfjy/M
np1XM/sT9MjjC1OXeiVeckyPPFqZg/WD5zVM95BHK8OMFYd6PNtDHq3Mvsax
LNHF+uTxmZEQ6L4mlKhPHp+Z+qNGqfGie8njMzMndUF2h/de8mhhdHMDtymP
7CWPFsbF/1jCsdP7yKOFuZuUf5hrcB95tDCOHzp1JN0NyOMT8+LdS9Va3v3k
8YmRNahXOhexnzw+Mf59F1sPzD0A84W+74o728xsmZBQSnx0AAJjr29+3PCR
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
/PtiB+PIQxIvyd8O+yodTR6SyDmg6fNNLZI8JNGAyVtT5htFHpKYZ5gkUFcc
RR6SuOHKo/BZR6PIQxJLpPdIafpEkYckVti1Pmu7EEkekrisM2g7pkaThyQe
Ln6xtyU/ljwkEbnv226cHk0eknjhGdfhVR3R5CGJCzZe2GnVHE8eklj4Jq+z
rS2aPCafd8+X4Ss9MeQhifcKfL4+upFCHpK47XVfoHtuBnlIoWZ/jSKHXhZ5
SKFWmpxRiPwV8pDCnbKN4ynzCshDCrOyjb9n3CkgDynkq093SUnOIw8pbNx5
43z33CzykMJrGp7eXD4Z5CGFPwfPu0d7ZJOHFF6OTBXTeplJHlJoq5j3buWC
NPKQQo+zwXXZdinkIYWzpy3d9GBGPHlIoVskj70lK5Y8pPBm0oFFfFfjyUMK
NRLeDIYZJJGH1ORkGoi0NUwhj8nra87rN1yUTB5SOLNMvrj7n3jykMJLM7Ei
+T7bQwp1Fh+yW/2a7SGFaxYsnWZ6JYY8pDCQtb1iiiLbQ2qy3zvHOhgbTx5S
2Of74Yd+SCp5SOED3tW3ns9MJQ9ptPtH0NeyLok8pFGSr7VKOSeBPKQxaiBX
b+e+BPKQxuRw4+LY+gTykMZ567Ku3zvGzlfSeGNXSv3mikTykEbfjv22v6ek
QNZfD2kUtTefx4Qlk4c0Vt49F9kyme/+85DGOpZh4R2zBPKQxm0zS/2M5ieS
hzS+2nLXN/1qInlIY6tX55U1dfHkIY0B3tmmmrax5DF5/S2FD846svOVNBqb
1O0pNUgmD2kUHzTLGTFMIg9pxFz18zpMHHlI49483ZMWO+PJQxqlXduWLnBL
Ig9pFHgTtaDZiZ2vpPGm7udmMaE08pBG00a+dwbaqeQhjTVO8yvsstge0nhQ
8c/XNVeSyIOFj24ErcqWiCcPFg4/mz+qP5Odr1jIGWFxuXksljxY2LtN2XZe
QSJ5sNDU4U7mSrNk8mBh4vND/BaHU8mDhU+hSvIUTwZ5sLD2dkhT89M08mBh
fmZv7TmbVPJg4Yq5u17MS04nDxbadUovXjGYQR4sjH1ha2B/KZU8WHiZI+CL
Xl4yebDwnLRqjElfCnmwsOGhzha3K6nkwcJ70a2vz7DSyIOFi4dYiVZHMsmD
hSzpPUcX2+aQBwtPbnFhXLyyyYOFjS1lp9K35pIHC/cnq01t1LhKHpPnG0YD
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
           "]]}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"ED, L = 16, J = 0.4t\"", TraditionalForm],
       PlotRange->{{-0.5, 5.5}, {-1, 10}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{Automatic, Automatic}]},
     {
      TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1: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
/H+xhE5X
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1:eJw9mnk8VPsbx8cMM/bsjHUWIklEQnSeytJCKaVIe2nfuEKrS2nTrqJVKkk7
Kkqd0yql0qqJQraUsq+Fn1/3PN/5497XeZl5z+d85n2e71kSz1s1eSGXw+EU
9v3n//8/mtT3kqkw2uPkX4rlRODw/1emCiNJuP/KvG/7RUHfK16F6Swu/mzZ
tx3y96XCbByyc9i8vm3O/1+gwpjuH5sa0rf9lydUYQymvw9KQV6zMmNHn3FP
Q16BMiM8uWHUFeSlKjPrOImtWciLVmY+ftateY28QGUm6GPNQhnyHJSZybIJ
+8uQp6rMXNy6oroJedVKTK6yWWYX8hglJn9ikpE8l+UlKTGrddPHaXFZXpgS
I9yy5Ichl+X5KDHO2yact+CyvP5KzNuD4vYhXJbHUWK2jby33Q15MkXG/to9
pbHIy1Rk7uqtGhGAvHhFJkfxZOMc5IUoMjfUh25ZhTxQZJQXxQo2Ik+oyNzx
y+fvQl6zgOE6Tr2eiLwCAcPJfy0+j7xUAdOz3zMgC3nRAsby4MWCB8gLFDB5
Vd+kb5DnIGDWy7ja5chTFTAdt7dmNyCvms90pfRoyfGwPz4zNv7fXZo87I/P
rNypTEt42B+faRmcd96Rh/3xGW7Lo1ovHvbHZyYM28wNQh6Hz0yX2n1agTyZ
AuMTVQIxyMtUYH5sqzlwBHnxCkwi9/DVy8gLUWCiY1WPPEIeKDDlUTVrSpAn
VGDOJg4e24q8ZnnmB001qstjf/KM2lqrrAHy2J88s+7q5e2e8tifPNPtHrFu
njz2J8/oTd9+L1oe+5NnypRGBScjT1We2beUnnEfedU85nSwQ1UF8hgeIzg/
Qk1RAfvjMTptRt8HKWB/PCZ74sizUxWwPx6jeOzBtM0K2B+PKZYfaHFRAfvj
MZbjFYbLkCfjMm75PowSH/vr225IKHPjY39cRvB98LtQPvbHZQLC972+yMf+
uMxL+2itb3zsj8ukWD8utxRgf3JM4cijccsE2J8co509aEqmAPuTY+wutF7s
FWB/ckzJh55WP0XsT465Lbx1/rwi9ifHXNBTGiOvhP3JMeesKpYsUsL+OMyQ
Wt/M10rYH4fRPltcMVoZ++Mwze+M3txTxv44jKNPR+hoFeyPw5j8CCt/o4L9
cZiqkurZK1WxPw6zgmc3X19NBI5/++qlj3pYn3ylhv300j4j7ZSS1LGPXnr8
Wf+W8H4i+Lv7BT30+RnxRks0cH976GdLe2+Ha7I8hx5657rD109p4f5009ys
dWk/tDF/Nz0/P8Nzti7L8+mm/+ltCJPTx3zd9N6otcwnA8z3h54Znl/Uaoj5
/tDrXuc6zTHBfH9o3h1HyUAR5vtNP6K8BCukmO83LdxitXW0Jeb7TXuOk236
MBDzddE6jttkwfaYr4teGBwrNXfGfF30I4O8RScA83XRX413Pgsbj/k6aZvb
901vBWK+TjpR3ufrkBWYr5P2++Z41HEH5uugFzgXZRzLwnwdtGzL6LP3OGI2
XwfdFaXQm5QuZvO105MXnXh3eLg5m6+dvjQr3Ka00orN106bLBp5wt6vP5uv
nU5xj2+YvcSezddGp/HdAtS13dl8bfRB/sIBnits2HxtdPNJtxcru4aw+Vpp
7mSZXFqGK5uvlTa/ZD43NGEAm6+VXrm7rbnzgDmbr4VObD2/bXsV5muhZc52
Y434tmy+Flo0zm4jE27J5muh460djC68tmXzNdMeeQ5bSlsGsPmaadGh8PLv
iyzYfM100KFlikuE/dl8TXTNbPuX17dasfmaaK+lSTv221mx+ZpojaKak6rB
Fmy+RnrEiagv7V+s2HyNdMuDfW7uffz/8jXStoq6Bc/fStl8jbT/0wnKOo3m
bL4G+s8BXasNrpZsvgbaz8fc022RJZuvgW4tnfvBLbg/JP7l19NdPJ5XsJY5
y6unhx9wd07sksLiv5//Re8J39uz9h9zKPwb4Ce9Zud6/+xpFmD3N/9PuuPc
vBuX/SxYXh1t66M7bE8b8urolePWLKDGW7C8H3QaLN5heEPK8r7TjqoZMZNs
pCzvOy1qve88IAB5tXT9GPOzYGLB8mppsanug+W7Md83erP5w8Oly5FXQxtL
L8vUJiOvhn75oyrD7LqU5VXTlaXNGbc1kde3felc07FQ5FXRHuvyg86kSVhe
JW3vc2vks7cSlldJP3mreipYw5zlVdD7fn+oyDHD/a2gNyV3r3f7I2F5X+lf
zw65Gp5BXjkdEaXyokqGvHLa+Gpr42MPzFdG7wu4++bbXPx9y2ingTP3r2Rw
/77QB6w75wuEUkj++/7PNC9mw11KWwpz/n5fCZ1pY/P27jbc/2K69+Fy+wHJ
yPtEC0tiYyLTkPeR3qD+7lNxHvKK6MqoWytmX0XeBzros1dCdhHy3tMvX619
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
zD8pHP0+d74tmX/mYJ2nO+T/2/8DCOBfoA==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Opacity[0.75]], 
             LineBox[CompressedData["
1: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
0HSqmv+wDvK41MH2nH5oKFOH+B+0XxGh
              "]]}}}, {}, {}, {}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          AxesOrigin -> {0, 0}, PlotRange -> {{-2, 4}, {-4, 40}}, 
          PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"SCBA: B, J = 0.4t\"", TraditionalForm], 
          PlotRange -> {{-2, 4}, {-4, 40}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, Automatic}}],FormBox[
         FormBox[
          TemplateBox[{"\[Pi]", 
            FractionBox["\[Pi]", "2"], "0", "\[Pi]", 
            FractionBox["\[Pi]", "2"], "0"}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[3, 20], 0.15]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.75]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.75`", "]"}]}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                  RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                  "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                ",", 
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
                
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.811581966781907*^9, 3.811582034157148*^9, {3.811582140887178*^9, 
   3.811582170095728*^9}, {3.811582584003449*^9, 3.8115826534621983`*^9}, 
   3.811582698817922*^9, {3.8115849157678747`*^9, 3.811584952770604*^9}, 
   3.811585301729046*^9, 3.811585336875073*^9, {3.811586311733189*^9, 
   3.811586323212194*^9}, {3.811586825400141*^9, 3.8115868853090677`*^9}, 
   3.811586959645132*^9, {3.811587378004459*^9, 3.8115873893819027`*^9}, 
   3.8115874261635227`*^9},
 CellLabel->
  "Out[840]//TableForm=",ExpressionUUID->"cf8b60e1-df2a-4b79-a7ee-\
941c251740f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"plotsDir", ",", "\"\<SCBAvsED_noMag.png\>\""}], "]"}], ",", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "pltSCBAvsED", "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.811581979745751*^9, 3.8115819905569363`*^9}, {
  3.811582271128366*^9, 3.8115822962534037`*^9}, {3.81158233032334*^9, 
  3.811582341196815*^9}, {3.8115863396262817`*^9, 3.8115863517839603`*^9}},
 CellLabel->
  "In[841]:=",ExpressionUUID->"c4821e70-1c56-4d10-a227-394b8674ddfb"],

Cell[BoxData["\<\"./plots/SCBAvsED_noMag.png\"\>"], "Output",
 CellChangeTimes->{{3.811581985644721*^9, 3.811581991080741*^9}, 
   3.811582173814547*^9, 3.8115823469509497`*^9, 3.811582733557932*^9, 
   3.8115827958139553`*^9, 3.81158537561412*^9, 3.811586345423649*^9, 
   3.811587436532517*^9},
 CellLabel->
  "Out[841]=",ExpressionUUID->"d8b81607-82c7-4df5-bdb0-16736fc1012f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"plotsDir", ",", "\"\<SCBA-B-QP.png\>\""}], "]"}], ",", 
   "pltSCBA"}], "]"}]], "Input",
 CellChangeTimes->{{3.8115862369016*^9, 3.811586270004862*^9}},
 CellLabel->
  "In[786]:=",ExpressionUUID->"c2cecbb5-b9e1-4e05-beb9-711d76b54935"],

Cell[BoxData["\<\"./plots/SCBA-B-QP.png\"\>"], "Output",
 CellChangeTimes->{3.811586292536133*^9},
 CellLabel->
  "Out[786]=",ExpressionUUID->"ea923687-4a16-48c0-bd28-6eb2d4276607"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnDir", "=", "\"\<./pn/\>\""}]], "Input",
 CellChangeTimes->{{3.8116077384222193`*^9, 3.8116077619316874`*^9}},
 CellLabel->
  "In[902]:=",ExpressionUUID->"1cf206f7-3747-4d99-980e-bc96d345a21d"],

Cell[BoxData["\<\"./pn/\"\>"], "Output",
 CellChangeTimes->{{3.811607749911607*^9, 3.8116077768995543`*^9}},
 CellLabel->
  "Out[902]=",ExpressionUUID->"e48b844b-b43b-4944-be5e-8276d3a097f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<Pn_*.txt\>\"", ",", "pnDir"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"n", ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "files", "]"}]}], "}"}]}], "]"}], ",", 
     "files"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.811607785135172*^9, 3.811607804211779*^9}},
 CellLabel->
  "In[926]:=",ExpressionUUID->"36fa3e5c-0772-492f-84a6-77c148dc47c6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "\<\"./pn/Pn_L=14_J=0.4_m=0.0.txt\"\>"},
    {"2", "\<\"./pn/Pn_L=14_J=0.4_m=1.0.txt\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.811607807139481*^9, 3.811608102393777*^9, 
  3.8116081483061028`*^9, 3.811608489925034*^9, 3.8116085301303253`*^9},
 CellLabel->
  "Out[927]//TableForm=",ExpressionUUID->"a0f90809-c0d1-4084-8322-\
8c67cd9b3abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnDataStructure", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"file", ",", "\"\<Table\>\""}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"line", "-", "1"}], ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"line", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"line", ",", 
          RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ")"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"file", ",", "files"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811607854607917*^9, 3.811607931983934*^9}, {
  3.8116079802047358`*^9, 3.811608072626637*^9}, {3.8116081637648077`*^9, 
  3.811608179530223*^9}},
 CellLabel->
  "In[928]:=",ExpressionUUID->"ccf36ba2-7ec1-4cac-aee7-be578433540d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.12378063133184736`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.5410341146869944`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.1612311011650035`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.033325616873703695`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.03641326716212004`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0.01887528487923114`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.045751854524243525`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0.03958812937685654`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.0702891772980629`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.24233751853522748`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.07501246011656078`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.1656056979064671`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.04202189152483789`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0.11925435157667691`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.14221667200395852`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0.14326223103820898`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8116079176022043`*^9, {3.811608150274057*^9, 3.811608180536664*^9}, 
   3.811608532366597*^9},
 CellLabel->
  "Out[928]=",ExpressionUUID->"b52e5671-5570-4935-8a98-8503c52bd652"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pnPlots", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"pnDataStructure", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "12"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"files", ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", "24"}], "}"}]}], "]"}], ",", "Above"}], "]"}]}], 
    ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(n\)]\)\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.811607820649693*^9, 3.811607836933415*^9}, {
  3.811608189811265*^9, 3.811608363476509*^9}, {3.811608557525511*^9, 
  3.811608615078627*^9}, {3.811608648881215*^9, 3.811608720812417*^9}, {
  3.81160875468897*^9, 3.811609019964087*^9}, {3.8116091014148283`*^9, 
  3.811609167243739*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"c3be35f3-90ed-459d-93d5-04da5b2bce18"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.12378063133184736`}, {1., 0.5410341146869944}, {2., 
         0.1612311011650035}, {3., 0.033325616873703695`}, {4., 
         0.03641326716212004}, {5., 0.01887528487923114}, {6., 
         0.045751854524243525`}, {7., 0.03958812937685654}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.0702891772980629}, {1., 0.24233751853522748`}, {2., 
         0.07501246011656078}, {3., 0.1656056979064671}, {4., 
         0.04202189152483789}, {5., 0.11925435157667691`}, {6., 
         0.14221667200395852`}, {7., 0.14326223103820898`}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 12, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., 0.12378063133184736`}}, {{1.,
          0.5410341146869944}}, {{2., 0.1612311011650035}}, {{3., 
         0.033325616873703695`}}, {{4., 0.03641326716212004}}, {{5., 
         0.01887528487923114}}, {{6., 0.045751854524243525`}}, {{7., 
         0.03958812937685654}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 12, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0., 0.0702891772980629}}, {{1., 
         0.24233751853522748`}}, {{2., 0.07501246011656078}}, {{3., 
         0.1656056979064671}}, {{4., 0.04202189152483789}}, {{5., 
         0.11925435157667691`}}, {{6., 0.14221667200395852`}}, {{7., 
         0.14326223103820898`}}}]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 7.}, {0, 1}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(n\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox["\"n\"", TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 18], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 7.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"L=14_J=0.4_m=0.0\"", "\"L=14_J=0.4_m=1.0\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12}, {20, 12}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 12, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 12}, {20, 12}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 12, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "12"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "12"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.811608200298417*^9, 3.8116082139356403`*^9}, {
   3.8116082637263308`*^9, 3.811608275668091*^9}, {3.811608306423244*^9, 
   3.811608331847888*^9}, 3.811608364028751*^9, 3.811608534332448*^9, 
   3.8116085832523613`*^9, 3.8116086168953648`*^9, {3.8116086495980167`*^9, 
   3.811608706571719*^9}, 3.811608757149454*^9, {3.811608789761201*^9, 
   3.811608893216152*^9}, {3.8116089420274*^9, 3.8116090203133287`*^9}, {
   3.811609117841384*^9, 3.8116091678965273`*^9}},
 CellLabel->
  "Out[967]=",ExpressionUUID->"29c72974-5bf9-49cb-a443-eaf45a793ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"pnDir", ",", "\"\<Pn.png\>\""}], "]"}], ",", "pnPlots", ",", 
   RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.811609287633535*^9, 3.81160932705987*^9}, {
  3.8116094122354193`*^9, 3.811609442892769*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"7a41e031-1891-4c01-93d7-fcb681e976f3"],

Cell[BoxData["\<\"./pn/Pn.png\"\>"], "Output",
 CellChangeTimes->{
  3.8116093277724752`*^9, {3.811609424035923*^9, 3.811609444530357*^9}},
 CellLabel->
  "Out[970]=",ExpressionUUID->"ee7a34f9-4f93-48a1-861c-a199917b53dc"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1251, 28, 136, "Input",ExpressionUUID->"f83cadff-8e27-4166-9dac-92335885fc6c"],
Cell[1812, 50, 22869, 554, 1501, "Input",ExpressionUUID->"2c5d6007-3fce-4311-9dde-8f46d72d4221"],
Cell[CellGroupData[{
Cell[24706, 608, 10217, 299, 220, "Input",ExpressionUUID->"d9ed871e-408b-44eb-a809-8c8aa4b97d03"],
Cell[34926, 909, 4348, 73, 764, "Output",ExpressionUUID->"fbf0daea-db58-4f1a-adce-a58fefd5edbd"]
}, Open  ]],
Cell[39289, 985, 12843, 338, 304, "Input",ExpressionUUID->"1ada7f96-63c7-4f2e-8408-26b0161bd61b"],
Cell[CellGroupData[{
Cell[52157, 1327, 15210, 389, 346, "Input",ExpressionUUID->"3ffeba7c-2101-4d6e-bbce-0b9ed19f234c"],
Cell[67370, 1718, 28000, 607, 319, "Output",ExpressionUUID->"149790b0-ce5d-4f10-8c0f-0ce14e8b0d56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95407, 2330, 1628, 36, 52, "Input",ExpressionUUID->"c433c2a1-e7a1-4265-9857-8aa1b75525d9"],
Cell[97038, 2368, 165907, 2840, 450, "Output",ExpressionUUID->"20bf0535-0158-498a-a744-40d9d63e4bd7"]
}, Open  ]],
Cell[262960, 5211, 1420, 35, 94, "Input",ExpressionUUID->"fbb9b51f-0a3d-41e3-ac99-d8d67dcaf8a2"],
Cell[264383, 5248, 1269, 36, 30, "Input",ExpressionUUID->"2430b3d2-eab7-4f46-9f06-bcf0a52859dd"],
Cell[CellGroupData[{
Cell[265677, 5288, 1934, 52, 52, "Input",ExpressionUUID->"2d4596cb-8856-40f8-a905-bfabd257d577"],
Cell[267614, 5342, 41379, 705, 404, "Output",ExpressionUUID->"24382366-c551-4810-b65e-18b6c8542b9a"]
}, Open  ]],
Cell[309008, 6050, 11411, 324, 367, "Input",ExpressionUUID->"40ae93ce-925e-4d83-8046-2e3fbd0e0ed1"],
Cell[CellGroupData[{
Cell[320444, 6378, 2571, 67, 73, "Input",ExpressionUUID->"3c9acdfb-a9df-4bbe-9781-91bea8a9aa1d"],
Cell[323018, 6447, 13894, 275, 408, "Output",ExpressionUUID->"157e06a6-180b-498c-869c-f8ead9dc4508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336949, 6727, 966, 24, 30, "Input",ExpressionUUID->"dac4164b-6dfa-407c-b3f0-767fa3d57c1a"],
Cell[337918, 6753, 559, 14, 34, "Output",ExpressionUUID->"0c02e1d5-a04e-47b2-9788-f0bac58c63d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338514, 6772, 445, 11, 30, "Input",ExpressionUUID->"a7db345d-2e93-4b45-905f-e5c050b881c6"],
Cell[338962, 6785, 3201, 69, 255, "Output",ExpressionUUID->"0960ae81-4d72-4b44-813a-54add481d0da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342200, 6859, 246, 6, 30, "Input",ExpressionUUID->"6b49bb85-b431-453d-bd18-a7a71f12f79b"],
Cell[342449, 6867, 417, 9, 34, "Output",ExpressionUUID->"168c093c-6f56-4299-b1f7-d8afb2d61bf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342903, 6881, 416, 12, 30, "Input",ExpressionUUID->"56d240a4-8fc9-47cb-ad89-a445fe6bd7b6"],
Cell[343322, 6895, 310, 9, 51, "Output",ExpressionUUID->"36ba14dd-bea7-4444-bf29-17fcb53e27e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343669, 6909, 360, 9, 30, "Input",ExpressionUUID->"4ef820ff-1bd8-4c8b-aa47-d16952524b17"],
Cell[344032, 6920, 180, 3, 34, "Output",ExpressionUUID->"32d76863-9b99-4940-9216-b6ce9ab5f6dc"]
}, Open  ]],
Cell[344227, 6926, 541, 11, 94, "Input",ExpressionUUID->"a4f367db-9c07-4199-a584-76e7477cdf17"],
Cell[CellGroupData[{
Cell[344793, 6941, 914, 22, 52, "Input",ExpressionUUID->"ef12ce80-2573-4e66-8e96-aee19ff9df88"],
Cell[345710, 6965, 1421, 35, 134, "Output",ExpressionUUID->"0367cdcb-828a-47b0-a678-b28492518823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347168, 7005, 436, 11, 30, "Input",ExpressionUUID->"514c9ef8-85cd-4cf6-8794-d382b6cf7d95"],
Cell[347607, 7018, 10220, 266, 142, "Output",ExpressionUUID->"ade531fd-8ea6-4353-a52d-9cc6f0b92f47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357864, 7289, 3631, 73, 52, "Input",ExpressionUUID->"75fc45d1-7b8d-4e47-be47-961b966ba28e"],
Cell[361498, 7364, 46528, 844, 401, "Output",ExpressionUUID->"19ca7336-dee6-4ab8-a3c6-bb2884499d36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408063, 8213, 2596, 63, 73, "Input",ExpressionUUID->"8bca75e9-0b29-475a-ad07-301ff2c5609c"],
Cell[410662, 8278, 87443, 1533, 802, "Output",ExpressionUUID->"cf8b60e1-df2a-4b79-a7ee-941c251740f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498142, 9816, 544, 11, 30, "Input",ExpressionUUID->"c4821e70-1c56-4d10-a227-394b8674ddfb"],
Cell[498689, 9829, 379, 6, 34, "Output",ExpressionUUID->"d8b81607-82c7-4df5-bdb0-16736fc1012f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499105, 9840, 329, 8, 30, "Input",ExpressionUUID->"c2cecbb5-b9e1-4e05-beb9-711d76b54935"],
Cell[499437, 9850, 181, 3, 34, "Output",ExpressionUUID->"ea923687-4a16-48c0-bd28-6eb2d4276607"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499655, 9858, 218, 4, 30, "Input",ExpressionUUID->"1cf206f7-3747-4d99-980e-bc96d345a21d"],
Cell[499876, 9864, 191, 3, 34, "Output",ExpressionUUID->"e48b844b-b43b-4944-be5e-8276d3a097f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500104, 9872, 627, 18, 52, "Input",ExpressionUUID->"36fa3e5c-0772-492f-84a6-77c148dc47c6"],
Cell[500734, 9892, 837, 21, 62, "Output",ExpressionUUID->"a0f90809-c0d1-4084-8322-8c67cd9b3abf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501608, 9918, 966, 27, 30, "Input",ExpressionUUID->"ccf36ba2-7ec1-4cac-aee7-be578433540d"],
Cell[502577, 9947, 1646, 44, 56, "Output",ExpressionUUID->"b52e5671-5570-4935-8a98-8503c52bd652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504260, 9996, 1468, 36, 52, "Input",ExpressionUUID->"c3be35f3-90ed-459d-93d5-04da5b2bce18"],
Cell[505731, 10034, 15809, 330, 448, "Output",ExpressionUUID->"29c72974-5bf9-49cb-a443-eaf45a793ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521577, 10369, 423, 9, 30, "Input",ExpressionUUID->"7a41e031-1891-4c01-93d7-fcb681e976f3"],
Cell[522003, 10380, 222, 4, 92, "Output",ExpressionUUID->"ee7a34f9-4f93-48a1-861c-a199917b53dc"]
}, Open  ]]
}
]
*)

