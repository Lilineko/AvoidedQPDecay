(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    680927,      13576]
NotebookOptionsPosition[    679666,      13549]
NotebookOutlinePosition[    680108,      13566]
CellTagsIndexPosition[    680065,      13563]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringTake", "[", 
     RowBox[{"$SystemID", ",", "3"}], "]"}], "\[Equal]", "\"\<Win\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
   "SetDirectory", "[", 
    "\"\<C:\\\\Users\\\\pwrzo\\\\Documents\\\\GitHub\\\\AvoidedQP\\\\\
implementation\\\\\>\"", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "SetDirectory", "[", 
    "\"\<~/Documents/GitHub/AvoidedQP/implementation/\>\"", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8234146627490797`*^9, 3.823414730598213*^9}, {
  3.823436472312943*^9, 3.8234365005325823`*^9}, {3.823436557767311*^9, 
  3.823436569610827*^9}, {3.8234370501225986`*^9, 3.823437074643938*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"baf0a9d9-7bc6-4204-b6f3-ad0f16695c9c"],

Cell[BoxData["\<\"C:\\\\Users\\\\pwrzo\\\\Documents\\\\GitHub\\\\AvoidedQP\\\\\
implementation\"\>"], "Output",
 CellChangeTimes->{{3.823414716034223*^9, 3.8234147311141768`*^9}, 
   3.8234215946881447`*^9, 3.8234326900469513`*^9, 3.823432789770124*^9, 
   3.8234344297898293`*^9, 3.823435663869009*^9, 3.823436573329905*^9, 
   3.823437075405184*^9, {3.823437113079959*^9, 3.8234371163615932`*^9}, 
   3.823439177157658*^9, 3.8234392756632557`*^9, {3.823439311091673*^9, 
   3.823439364073224*^9}, 3.823439456212446*^9, 3.823439570046384*^9, 
   3.823439717880084*^9, 3.8234421851166105`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6c7efe3d-234c-4775-9cf8-fc51a808f38c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPlotData", "[", "qpds_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ks", " ", "=", " ", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"qpds", "[", 
        RowBox[{"Take", ",", "\"\<momentum\>\""}], "]"}], "]"}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"kinds", "=", 
     RowBox[{"PositionIndex", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"qpds", "[", 
        RowBox[{"Take", ",", "\"\<momentum\>\""}], "]"}], "]"}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"qpkds", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"qpds", "[", 
        RowBox[{"kinds", "[", 
         RowBox[{"[", "it", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", 
         RowBox[{"Length", "[", "kinds", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Bs", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"qpds", "[", 
        RowBox[{"Take", ",", "\"\<interaction\>\""}], "]"}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Binds", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PositionIndex", "[", 
        RowBox[{"Normal", "[", 
         RowBox[{
          RowBox[{"qpkds", "[", 
           RowBox[{"[", "it", "]"}], "]"}], "[", 
          RowBox[{"Take", ",", "\"\<interaction\>\""}], "]"}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"it", ",", 
         RowBox[{"Length", "[", "qpkds", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"weightData", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"qpSize", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"qpkds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", 
               RowBox[{"Take", ",", "\"\<size\>\""}], "]"}], "[", 
              RowBox[{
               RowBox[{"Binds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", "B", "]"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"qpWeight", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"qpkds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", 
               RowBox[{"Take", ",", "\"\<weight\>\""}], "]"}], "[", 
              RowBox[{
               RowBox[{"Binds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", "B", "]"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"qpSize", "[", 
                 RowBox[{"[", "it", "]"}], "]"}]}], ",", 
               RowBox[{"qpWeight", "[", 
                RowBox[{"[", "it", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"it", ",", 
               RowBox[{"Length", "[", "qpSize", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"B", ",", "Bs"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"kt", ",", 
         RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"gapData", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"qpSize", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"qpkds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", 
               RowBox[{"Take", ",", "\"\<size\>\""}], "]"}], "[", 
              RowBox[{
               RowBox[{"Binds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", "B", "]"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"qpWeight", "=", 
            RowBox[{"Normal", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"qpkds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", 
               RowBox[{"Take", ",", "\"\<gap\>\""}], "]"}], "[", 
              RowBox[{
               RowBox[{"Binds", "[", 
                RowBox[{"[", "kt", "]"}], "]"}], "[", "B", "]"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"qpSize", "[", 
                 RowBox[{"[", "it", "]"}], "]"}]}], ",", 
               RowBox[{"qpWeight", "[", 
                RowBox[{"[", "it", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"it", ",", 
               RowBox[{"Length", "[", "qpSize", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"B", ",", "Bs"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"kt", ",", 
         RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.8234343969140263`*^9, 3.823434404669615*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"01b2e14f-2311-4aab-94e8-2bfb49913c9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makePlots", "[", "qpds_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getPlotData", "[", "qpds", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"linear", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Fit", "[", 
          RowBox[{
           RowBox[{"weightData", "[", 
            RowBox[{"[", 
             RowBox[{"kt", ",", "it", ",", 
              RowBox[{
               RowBox[{"-", "3"}], ";;", 
               RowBox[{"-", "1"}]}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"it", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"weightData", "[", 
             RowBox[{"[", "kt", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kt", ",", 
         RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"quadratic", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Fit", "[", 
          RowBox[{
           RowBox[{"weightData", "[", 
            RowBox[{"[", 
             RowBox[{"kt", ",", "it", ",", 
              RowBox[{
               RowBox[{"-", "3"}], ";;", 
               RowBox[{"-", "1"}]}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "x", ",", 
             RowBox[{"x", "^", "2"}]}], "}"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"it", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"weightData", "[", 
             RowBox[{"[", "kt", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"kt", ",", 
         RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pltStyle", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", "Blue", "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Darker", "[", "Green", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Directive", "[", "Orange", "]"}], ",", 
       RowBox[{"Directive", "[", "Red", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lineStyle", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", "Blue", "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Lighter", "[", 
         RowBox[{"Darker", "[", "Green", "]"}], "]"}], "]"}], ",", 
       RowBox[{"Directive", "[", "Orange", "]"}], ",", 
       RowBox[{"Directive", "[", "Red", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"parabolaStyle", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Darker", "[", "Green", "]"}], "]"}], ",", "Dashed"}], 
        "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"line", "=", 
         RowBox[{"linear", "[", 
          RowBox[{"[", "kt", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"parabola", "=", 
         RowBox[{"quadratic", "[", 
          RowBox[{"[", "kt", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"weightData", "[", 
               RowBox[{"[", "kt", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"PlotMarkers", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", "8"}], "}"}]}], ",", 
              RowBox[{"Joined", "\[Rule]", "False"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0.1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.01"}], ",", "0.5"}], "}"}]}], "}"}]}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", 
                   "Black", ",", "20", ",", 
                   RowBox[{
                   "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
                  "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<z\>\"", ",", "Black", ",", "20", ",", 
                   RowBox[{
                   "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
                  "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotStyle", "\[Rule]", "pltStyle"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"\"\<k = \>\"", ",", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
                   "\"\<\[Pi]\>\""}], "]"}], ",", "Black", ",", "20", ",", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Plot", "[", 
             RowBox[{"line", ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", 
                RowBox[{"-", "0.1"}], ",", " ", "0.1"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotStyle", "\[Rule]", "lineStyle"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
            RowBox[{"Plot", "[", 
             RowBox[{"parabola", ",", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", " ", 
                RowBox[{"-", "0.1"}], ",", " ", "0.1"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotStyle", "\[Rule]", "parabolaStyle"}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"gapData", "[", 
              RowBox[{"[", "kt", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"Axes", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "8"}], "}"}]}], ",", 
             RowBox[{"Joined", "\[Rule]", "False"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "\[Rule]", "450"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0.1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "0.01"}], ",", "1.0"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SuperscriptBox[\(L\), \(-1\)]\)\>\"", ",", 
                  "Black", ",", "20", ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
                 "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\[CapitalDelta]E\>\"", ",", "Black", ",", "20", ",", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
                 "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "\[Rule]", "pltStyle"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<\[Beta] = \>\"", ",", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"B", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}]}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"B", ",", "Bs"}], "}"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\<k = \>\"", ",", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"ks", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
                  "\"\<\[Pi]\>\""}], "]"}], ",", "Black", ",", "20", ",", 
                RowBox[{
                "FontFamily", "\[Rule]", "\"\<Bookman Old Style\>\""}]}], 
               "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
            "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
       ")"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kt", ",", 
        RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.823434647954205*^9, 3.8234347548536177`*^9}, {
  3.8234348104598494`*^9, 3.823434810792089*^9}, {3.8234348582668324`*^9, 
  3.8234348808994007`*^9}, {3.823439301117141*^9, 3.823439362899699*^9}, {
  3.82343939915483*^9, 3.823439455106695*^9}, {3.8234395044312143`*^9, 
  3.8234395675448704`*^9}, {3.8234397112071753`*^9, 3.8234397147503405`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a018a8ca-be92-4432-bae9-e93d31ba77c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qpData", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data/qp_J=0.4.json\>\"", ",", "\"\<RawJSON\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qpds1", "=", 
  RowBox[{"Dataset", "[", "qpData", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"plots", ",", 
    RowBox[{"makePlots", "[", "qpds1", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qpData", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<data/qp_J=1.0.json\>\"", ",", "\"\<RawJSON\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qpds2", "=", 
  RowBox[{"Dataset", "[", "qpData", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"plots", ",", 
    RowBox[{"makePlots", "[", "qpds2", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"plots", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "2"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"plots", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "2"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8234344469426117`*^9, {3.823434582298311*^9, 3.8234345948996553`*^9}, {
   3.823434728138771*^9, 3.823434729082919*^9}, {3.8234347612050123`*^9, 
   3.823434781080852*^9}, {3.823434861648712*^9, 3.823434904702525*^9}, {
   3.82343494842805*^9, 3.823435011892623*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"87b5179c-9725-4f8f-8a86-1bae24dc938e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "energy" -> -0.8589439831218284, "weight" -> 0.2023379218458303, "gap" -> 
        0.19007508476813006`, "size" -> 8, "momentum" -> 0., "interaction" -> 
        1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8481209234761833, "weight" -> 0.20597542948421968`, 
        "gap" -> 0.18695680888177435`, "size" -> 8, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.74626204513432, "weight" -> 0.20227575086818117`, "gap" -> 
        0.18230604322181843`, "size" -> 8, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5581298543804272, "weight" -> 0.19300586662985955`, 
        "gap" -> 0.1833239601968515, "size" -> 8, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.2795188541180713`, "weight" -> 0.20347399707375247`, 
        "gap" -> 0.6561645039603219, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.2614113164018752`, "weight" -> 0.20565900114693086`, 
        "gap" -> 0.6443596939482674, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.1242205229098623`, "weight" -> 0.20180621404727464`, 
        "gap" -> 0.5999221638870429, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8871804472663452, "weight" -> 0.19803573375407177`, 
        "gap" -> 0.5379997847183466, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8059809990946218, "weight" -> 1.1998404351264915`*^-31, 
        "gap" -> 0.18248754767238617`, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.7916388176008158, "weight" -> 0.0005129587716780485, 
        "gap" -> 0.16770122257679487`, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6761692082546857, "weight" -> 0.00993309723158567, 
        "gap" -> 0.12389136333406614`, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.47155266441335364`, "weight" -> 0.019201814929390843`, 
        "gap" -> 0.0713038736962881, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9191439290772556, "weight" -> 0.13774876787181095`, 
        "gap" -> 0.23489733008942038`, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.913895979851004, "weight" -> 0.13744077531147222`, 
        "gap" -> 0.22417782015715382`, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.7732134313693593, "weight" -> 0.1199327509332679, "gap" -> 
        0.19917219525774144`, "size" -> 10, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.4920488780730987, "weight" -> 0.11491186425147144`, 
        "gap" -> 0.18543953370872446`, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.7870466202617825, "weight" -> 9.510366358725088*^-33, 
        "gap" -> 0.1414329571723334, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.7749582431760746, "weight" -> 0.0007746332987548553, 
        "gap" -> 0.12967194723101816`, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6151985814834207, "weight" -> 0.02066517661408274, 
        "gap" -> 0.09915498677196766, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.3245657713385868, "weight" -> 0.09609110237214522, 
        "gap" -> 0.05610348775293317, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9018315685050862, "weight" -> 0.16374509362324857`, 
        "gap" -> 0.14054582659318937`, "size" -> 12, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9004155338373194, "weight" -> 0.16377617631378918`, 
        "gap" -> 0.13729992808217117`, "size" -> 12, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.7098418044014556, "weight" -> 0.13498465303045268`, 
        "gap" -> 0.13550468072600763`, "size" -> 12, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.344997950414337, "weight" -> 0.1646909257361331, "gap" -> 
        0.14487152354513855`, "size" -> 12, "momentum" -> 0., "interaction" -> 
        0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.3511456419667498`, "weight" -> 0.1706209670881908, 
        "gap" -> 0.41540676029211276`, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.3399559003460166`, "weight" -> 0.17199154705126132`, 
        "gap" -> 0.418672953536642, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.105176853581884, "weight" -> 0.1515798401950172, "gap" -> 
        0.421654299460847, "size" -> 12, "momentum" -> 0.5, "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6880409217173042, "weight" -> 0.17700626332671687`, 
        "gap" -> 0.3795439617748908, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8269410275884073, "weight" -> 1.8969882710509812`*^-31, 
        "gap" -> 0.11629407141732262`, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8219476828037013, "weight" -> 0.0005669794767436684, 
        "gap" -> 0.106375292035505, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6197138680392462, "weight" -> 0.018626154532984072`, 
        "gap" -> 0.07696045132967377, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.2519007883033282, "weight" -> 0.14156664453724688`, 
        "gap" -> 0.04921113944360078, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9144115720388526, "weight" -> 0.14110285676814222`, 
        "gap" -> 0.17999411024862688`, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9193636476187623, "weight" -> 0.13859641170205514`, 
        "gap" -> 0.17353792479711094`, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6798045724846686, "weight" -> 0.10572329521922448`, 
        "gap" -> 0.16642607179743507`, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.2462028344510825, "weight" -> 0.19824935790784873`, 
        "gap" -> 0.15661275768319372`, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8293396230572512, "weight" -> 6.649020636839398*^-31, 
        "gap" -> 0.09727196159921592, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8297429171826294, "weight" -> 0.0006224017319840486, 
        "gap" -> 0.08915223660696325, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5814047528576849, "weight" -> 0.03162515745544666, 
        "gap" -> 0.06868035783405313, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.18728220046260424`, "weight" -> 0.20336014340127356`, 
        "gap" -> 0.1180411762388427, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9108967593528923, "weight" -> 0.15197977106974536`, 
        "gap" -> 0.12015529825568771`, "size" -> 16, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9212935055246545, "weight" -> 0.1490240583348424, "gap" -> 
        0.1172660981238316, "size" -> 16, "momentum" -> 0., "interaction" -> 
        0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.6327788269218857, "weight" -> 0.11002966695576821`, 
        "gap" -> 0.12377176141880675`, "size" -> 16, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.17344969413907796`, "weight" -> 0.2724662612397591, 
        "gap" -> 0.2001759639273919, "size" -> 16, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.3814953976629942`, "weight" -> 0.15023946359181836`, 
        "gap" -> 0.28859539775346343`, "size" -> 16, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.3808857022301826`, "weight" -> 0.1504269191458671, 
        "gap" -> 0.29263924587285883`, "size" -> 16, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.044556368762974, "weight" -> 0.1234125217534297, "gap" -> 
        0.29805795739603136`, "size" -> 16, "momentum" -> 0.5, "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5162169174129732, "weight" -> 0.2162844787863997, "gap" -> 
        0.32156750290816616`, "size" -> 16, "momentum" -> 0.5, "interaction" -> 
        0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8435831268202745, "weight" -> 2.2521376288843553`*^-31, 
        "gap" -> 0.08380821625868506, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8507883676529566, "weight" -> 0.0005000953238605866, 
        "gap" -> 0.07703735893196972, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5574601544682709, "weight" -> 0.03878669454553403, 
        "gap" -> 0.06136245436318344, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.14870572509843072`, "weight" -> 0.24034204065192147`, 
        "gap" -> 0.18345253408141504`, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9141916398996455, "weight" -> 0.14418141885266372`, 
        "gap" -> 0.1368833733902286, "size" -> 18, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9305359247068341, "weight" -> 0.13940354785975761`, 
        "gap" -> 0.13516604042148517`, "size" -> 18, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5950574164161724, "weight" -> 0.1042396037769169, "gap" -> 
        0.14159648765585464`, "size" -> 18, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.13839614684429247`, "weight" -> 0.3133320360433393, 
        "gap" -> 0.24705455419769828`, "size" -> 18, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8487243010946033, "weight" -> 1.696486988042994*^-31, 
        "gap" -> 0.07312576650764457, "size" -> 18, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8618213294334689, "weight" -> 0.00045572793718049045`, 
        "gap" -> 0.06770902915097965, "size" -> 18, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5299370909354342, "weight" -> 0.052497318898454354`, 
        "gap" -> 0.06805582538640786, "size" -> 18, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.12901407007709098`, "weight" -> 0.2652360341684272, 
        "gap" -> 0.26085347384632396`, "size" -> 18, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9137564646907586, "weight" -> 0.14778535937937126`, 
        "gap" -> 0.10994049756724422`, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9352657914122173, "weight" -> 0.14191632263731888`, 
        "gap" -> 0.10751670299329952`, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5579725801826685, "weight" -> 0.1101091496020815, "gap" -> 
        0.1296846105980589, "size" -> 20, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.12743534533999856`, "weight" -> 0.3278150828884008, 
        "gap" -> 0.32347659406032836`, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.3981740734140167`, "weight" -> 0.13587249668180335`, 
        "gap" -> 0.21990663093314033`, "size" -> 20, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -1.407892063908431, "weight" -> 0.13440634594203696`, 
        "gap" -> 0.2239521612833979, "size" -> 20, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.9805061242804642, "weight" -> 0.114005436494633, "gap" -> 
        0.23785733010856402`, "size" -> 20, "momentum" -> 0.5, "interaction" -> 
        0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.4301807162493878, "weight" -> 0.2448493045377435, "gap" -> 
        0.39756163375195985`, "size" -> 20, "momentum" -> 0.5, "interaction" -> 
        0., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.855887024248581, "weight" -> 1.945008987645016*^-31, 
        "gap" -> 0.06485010864241492, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.8747873972572608, "weight" -> 0.0003597009620772658, 
        "gap" -> 0.06054660814090962, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.5082240156261721, "weight" -> 0.06318871583329577, 
        "gap" -> 0.07741015317601985, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 0.4, "hopping" -> 1.], 
       Association[
       "energy" -> -0.12401466220089663`, "weight" -> 0.27866834162705373`, 
        "gap" -> 0.3240067163185838, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 0.4, "hopping" -> 1.]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "energy"} -> 1, {All, "weight"} -> 1, {All, "gap"} -> 
        1, {All, "size"} -> 1, {All, "momentum"} -> 1, {All, "interaction"} -> 
        1, {All, "coupling"} -> 1, {All, "hopping"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "energy" -> TypeSystem`PackageScope`AtomShape[60], "weight" -> 
            TypeSystem`PackageScope`AtomShape[60], "gap" -> 
            TypeSystem`PackageScope`AtomShape[60], "size" -> 
            TypeSystem`PackageScope`AtomShape[34], "momentum" -> 
            TypeSystem`PackageScope`AtomShape[60], "interaction" -> 
            TypeSystem`PackageScope`AtomShape[60], "coupling" -> 
            TypeSystem`PackageScope`AtomShape[60], "hopping" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 8, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "energy", "weight", "gap", "size", "momentum", "interaction", 
         "coupling", "hopping"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 72], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "energy"} -> 1, {All, "weight"} -> 1, {All, "gap"} -> 
        1, {All, "size"} -> 1, {All, "momentum"} -> 1, {All, "interaction"} -> 
        1, {All, "coupling"} -> 1, {All, "hopping"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "energy" -> TypeSystem`PackageScope`AtomShape[60], "weight" -> 
            TypeSystem`PackageScope`AtomShape[60], "gap" -> 
            TypeSystem`PackageScope`AtomShape[60], "size" -> 
            TypeSystem`PackageScope`AtomShape[34], "momentum" -> 
            TypeSystem`PackageScope`AtomShape[60], "interaction" -> 
            TypeSystem`PackageScope`AtomShape[60], "coupling" -> 
            TypeSystem`PackageScope`AtomShape[60], "hopping" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 8, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "energy", "weight", "gap", "size", "momentum", "interaction", 
         "coupling", "hopping"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 72], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 8, "DataRowCount" -> 
     72, "DataColumnCount" -> 8, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy", 
                  Style[
                  "energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "energy"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "energy"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weight", 
                  Style[
                  "weight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weight"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gap", 
                  Style[
                  "gap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "gap"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "gap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["size", 
                  Style[
                  "size", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "size"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "size"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["momentum", 
                  Style[
                  "momentum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "momentum"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "momentum"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["interaction", 
                  Style[
                  "interaction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "interaction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "interaction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["coupling", 
                  Style[
                  "coupling", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "coupling"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "coupling"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hopping", 
                  Style[
                  "hopping", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "hopping"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "hopping"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.858944"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.202338"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.190075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.848121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.205975"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.186957"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.746262"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.202276"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.182306"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.55813"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.193006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.183324"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.27952"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.203474"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.656165"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.26141"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.205659"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.64436"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-1.12422"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.201806"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.599922"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.88718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.198036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.805981"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000119984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.182488"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.791639"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000512959"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.167701"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.676169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0099331"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.123891"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.471553"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0192018"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0713039"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.919144"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.137749"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.234897"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.913896"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.137441"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.224178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.773213"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.119933"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.199172"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.492049"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.114912"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.18544"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.787047"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000000000000000000951037"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.141433"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.774958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000774633"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.129672"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.615199"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0206652"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.099155"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.324566"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0960911"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0561035"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{832., {287.5, 293.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{832., {287.5, 293.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.823434782015081*^9, {3.823434897909191*^9, 3.823434905579576*^9}, 
   3.823435664267488*^9, 3.8234391834636855`*^9, 3.823439275903926*^9, {
   3.82343931134362*^9, 3.8234393642984953`*^9}, {3.823439433383524*^9, 
   3.8234394564281673`*^9}, 3.8234395702863855`*^9, 3.823439718110694*^9, 
   3.823442187648464*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"66677684-b71f-4c4a-826f-1cefe986e858"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "energy" -> 0.41477191697602755`, "weight" -> 0.38145221593096207`, 
        "gap" -> 0.5784507877803295, "size" -> 8, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4165554015218933, "weight" -> 0.4036722501342101, "gap" -> 
        0.6017076222977549, "size" -> 8, "momentum" -> 0., "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4707182443373381, "weight" -> 0.44495106683132596`, 
        "gap" -> 0.7715384258405242, "size" -> 8, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5761590138392338, "weight" -> 0.455508538520357, "gap" -> 
        1.042583698890069, "size" -> 8, "momentum" -> 0., "interaction" -> 0.,
         "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.3055431474923882, "weight" -> 0.23433193732206845`, 
        "gap" -> 1.2317662194723402`, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.27318892669585715`, "weight" -> 0.24386344713823566`, 
        "gap" -> 1.2418218300955575`, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.04782558727351871, "weight" -> 0.2807642869113267, 
        "gap" -> 1.2683901323225308`, "size" -> 8, "momentum" -> 0.5, 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.2640649633884111, "weight" -> 0.3413281977121634, "gap" -> 
        1.3108073992225195`, "size" -> 8, "momentum" -> 0.5, "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.7634454129048742, "weight" -> 9.59614152996557*^-32, 
        "gap" -> 0.5538639746098397, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.8003828671334419, "weight" -> 0.008841029974886998, 
        "gap" -> 0.48964383700750913`, "size" -> 8, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.8532796796552384, "weight" -> 0.202834732579576, "gap" -> 
        0.5003322582703271, "size" -> 8, "momentum" -> 1., "interaction" -> 
        0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.8236432290911955, "weight" -> 0.3603379714662491, "gap" -> 
        0.848691738239757, "size" -> 8, "momentum" -> 1., "interaction" -> 0.,
         "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.40730537098183994`, "weight" -> 0.3721569100429494, 
        "gap" -> 0.559387052228157, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3959176854967863, "weight" -> 0.39824113310542103`, 
        "gap" -> 0.5785249120661158, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4590315477057798, "weight" -> 0.43595788618200865`, 
        "gap" -> 0.7613682970707023, "size" -> 10, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.58046627035373, "weight" -> 0.44420208060239785`, "gap" -> 
        1.1290635368634618`, "size" -> 10, "momentum" -> 0., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.6965033070927973, "weight" -> 8.86983817355311*^-31, 
        "gap" -> 0.4058341529680489, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.7169044181067488, "weight" -> 0.012970376870923655`, 
        "gap" -> 0.37078026451475443`, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.7119874877176038, "weight" -> 0.2606748252432441, "gap" -> 
        0.5658363976656191, "size" -> 10, "momentum" -> 1., "interaction" -> 
        0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.6939518127201842, "weight" -> 0.38323524700057193`, 
        "gap" -> 1.0693380262922307`, "size" -> 10, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4028235212782221, "weight" -> 0.3667150598389113, "gap" -> 
        0.5437780590721166, "size" -> 12, "momentum" -> 0., "interaction" -> 
        1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3739604112312911, "weight" -> 0.39510819768597505`, 
        "gap" -> 0.5683271832897887, "size" -> 12, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4323885323680421, "weight" -> 0.4222145573368862, "gap" -> 
        0.8202983133079345, "size" -> 12, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.545497750991089, "weight" -> 0.4284600617077438, "gap" -> 
        1.325100080238828, "size" -> 12, "momentum" -> 0., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.4370311367081978, "weight" -> 0.19599659798550656`, 
        "gap" -> 0.7943280489286924, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.4275214179325735, "weight" -> 0.20839177039623244`, 
        "gap" -> 0.8108645486490209, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.0882503505310428, "weight" -> 0.26518719991503853`, 
        "gap" -> 0.8933519238858176, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.30133058848492356`, "weight" -> 0.3614054327848939, 
        "gap" -> 1.1908826342873744`, "size" -> 12, "momentum" -> 0.5, 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.6501514852388137, "weight" -> 5.0552688596720414`*^-33, 
        "gap" -> 0.32135295753236637`, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.6492797732517621, "weight" -> 0.017133668220468103`, 
        "gap" -> 0.2977347814019611, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5898676687207947, "weight" -> 0.28740160272630744`, 
        "gap" -> 0.6627648178827465, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5945744685875041, "weight" -> 0.38354396029788845`, 
        "gap" -> 1.2470993303458178`, "size" -> 12, "momentum" -> 1., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.39982655350096774`, "weight" -> 0.3630054097385843, 
        "gap" -> 0.5125333156927505, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.35108218003085856`, "weight" -> 0.39242717022869883`, 
        "gap" -> 0.5287943537523354, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.38689757986895223`, "weight" -> 0.4032893051687083, 
        "gap" -> 0.8731914035482582, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4844771016521001, "weight" -> 0.41072802965050426`, 
        "gap" -> 1.4184061179375655`, "size" -> 14, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.6162103189792028, "weight" -> 2.201060664766986*^-31, 
        "gap" -> 0.26474759084219013`, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5913639028016844, "weight" -> 0.021235802684581626`, 
        "gap" -> 0.25162750000384726`, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4803142404144012, "weight" -> 0.29579327316630055`, 
        "gap" -> 0.7716268527040495, "size" -> 14, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5051632191533675, "weight" -> 0.3755805201353328, "gap" -> 
        1.3672674956844584`, "size" -> 14, "momentum" -> 1., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3976971052374756, "weight" -> 0.36029049520222006`, 
        "gap" -> 0.45133959623335596`, "size" -> 16, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3279365279394497, "weight" -> 0.3895172932560087, "gap" -> 
        0.47674763965586564`, "size" -> 16, "momentum" -> 0., "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3234596803223333, "weight" -> 0.3806688764735836, "gap" -> 
        0.940667487187044, "size" -> 16, "momentum" -> 0., "interaction" -> 
        0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.40894850221036627`, "weight" -> 0.39282798128507684`, 
        "gap" -> 1.4569947181254723`, "size" -> 16, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.497656003846787, "weight" -> 0.1721096623025501, "gap" -> 
        0.5854016413246672, "size" -> 16, "momentum" -> 0.5, "interaction" -> 
        1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.5206347733000598, "weight" -> 0.1858912428887602, "gap" -> 
        0.6030286286158368, "size" -> 16, "momentum" -> 0.5, "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.12413406084696632`, "weight" -> 0.26233654101785525`, 
        "gap" -> 0.8088107609384787, "size" -> 16, "momentum" -> 0.5, 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.22690431597786986`, "weight" -> 0.3524093327231163, 
        "gap" -> 1.3907068092307875`, "size" -> 16, "momentum" -> 0.5, 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5902326250286363, "weight" -> 4.057507517340635*^-30, 
        "gap" -> 0.2243117936500374, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5399022565048375, "weight" -> 0.025063008453441567`, 
        "gap" -> 0.22177723559844065`, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.37698028679562867`, "weight" -> 0.29398527150157233`, 
        "gap" -> 0.8768499396597083, "size" -> 16, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.417578919230162, "weight" -> 0.3645375743568678, "gap" -> 
        1.4368256412822173`, "size" -> 16, "momentum" -> 1., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3961142945719631, "weight" -> 0.358195465144958, "gap" -> 
        0.406323152446034, "size" -> 18, "momentum" -> 0., "interaction" -> 
        1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3051309481506781, "weight" -> 0.3858218072025059, "gap" -> 
        0.43907496593883977`, "size" -> 18, "momentum" -> 0., "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.24586933005565648`, "weight" -> 0.35658357194506946`, 
        "gap" -> 1.0094713029825417`, "size" -> 18, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.32560482148594794`, "weight" -> 0.37551238054013625`, 
        "gap" -> 1.4834614563644468`, "size" -> 18, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5696843611671243, "weight" -> 1.2994670613430545`*^-30, 
        "gap" -> 0.19403511750354951`, "size" -> 18, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.49326987764716, "weight" -> 0.02835837936946065, "gap" -> 
        0.20271272292752318`, "size" -> 18, "momentum" -> 1., "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.2758643994575882, "weight" -> 0.2864836999078148, "gap" -> 
        0.9690074550507175, "size" -> 18, "momentum" -> 1., "interaction" -> 
        0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.32919070784299187`, "weight" -> 0.352318505062457, "gap" -> 
        1.4761908948879965`, "size" -> 18, "momentum" -> 1., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.3948968371390347, "weight" -> 0.35651533704213667`, 
        "gap" -> 0.3705895277487805, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.2831822986502379, "weight" -> 0.38077893224602766`, 
        "gap" -> 0.4102769805238573, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.15829263183780906`, "weight" -> 0.33276303166078114`, 
        "gap" -> 1.0672292000473842`, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.23791877179081133`, "weight" -> 0.35899776849473086`, 
        "gap" -> 1.5026723289538193`, "size" -> 20, "momentum" -> 0., 
        "interaction" -> 0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.5325984191093305, "weight" -> 0.1552778086829933, "gap" -> 
        0.4637303022114274, "size" -> 20, "momentum" -> 0.5, "interaction" -> 
        1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.588289726335125, "weight" -> 0.16849837113140897`, 
        "gap" -> 0.4814647269464274, "size" -> 20, "momentum" -> 0.5, 
        "interaction" -> 0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> -0.2132292879011075, "weight" -> 0.25127686430899054`, 
        "gap" -> 0.8908763014274017, "size" -> 20, "momentum" -> 0.5, 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.09596676503796253, "weight" -> 0.3316256437896955, "gap" -> 
        1.5111725163376226`, "size" -> 20, "momentum" -> 0.5, "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.5530080463214198, "weight" -> 3.6708223724738933`*^-31, 
        "gap" -> 0.17056479433266425`, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 1., "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.4506349919701247, "weight" -> 0.03086863687137668, "gap" -> 
        0.19127841208662755`, "size" -> 20, "momentum" -> 1., "interaction" -> 
        0.9, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.17489118350445398`, "weight" -> 0.27585147023752804`, 
        "gap" -> 1.0412286197896945`, "size" -> 20, "momentum" -> 1., 
        "interaction" -> 0.5, "coupling" -> 1., "hopping" -> 1.], 
       Association[
       "energy" -> 0.2394060833335514, "weight" -> 0.3396884678464918, "gap" -> 
        1.5002187706261392`, "size" -> 20, "momentum" -> 1., "interaction" -> 
        0., "coupling" -> 1., "hopping" -> 1.]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "energy"} -> 1, {All, "weight"} -> 1, {All, "gap"} -> 
        1, {All, "size"} -> 1, {All, "momentum"} -> 1, {All, "interaction"} -> 
        1, {All, "coupling"} -> 1, {All, "hopping"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "energy" -> TypeSystem`PackageScope`AtomShape[60], "weight" -> 
            TypeSystem`PackageScope`AtomShape[60], "gap" -> 
            TypeSystem`PackageScope`AtomShape[60], "size" -> 
            TypeSystem`PackageScope`AtomShape[34], "momentum" -> 
            TypeSystem`PackageScope`AtomShape[60], "interaction" -> 
            TypeSystem`PackageScope`AtomShape[60], "coupling" -> 
            TypeSystem`PackageScope`AtomShape[60], "hopping" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 8, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "energy", "weight", "gap", "size", "momentum", "interaction", 
         "coupling", "hopping"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 72], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "energy"} -> 1, {All, "weight"} -> 1, {All, "gap"} -> 
        1, {All, "size"} -> 1, {All, "momentum"} -> 1, {All, "interaction"} -> 
        1, {All, "coupling"} -> 1, {All, "hopping"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "energy" -> TypeSystem`PackageScope`AtomShape[60], "weight" -> 
            TypeSystem`PackageScope`AtomShape[60], "gap" -> 
            TypeSystem`PackageScope`AtomShape[60], "size" -> 
            TypeSystem`PackageScope`AtomShape[34], "momentum" -> 
            TypeSystem`PackageScope`AtomShape[60], "interaction" -> 
            TypeSystem`PackageScope`AtomShape[60], "coupling" -> 
            TypeSystem`PackageScope`AtomShape[60], "hopping" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 8, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "energy", "weight", "gap", "size", "momentum", "interaction", 
         "coupling", "hopping"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 72], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 8, "DataRowCount" -> 
     72, "DataColumnCount" -> 8, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy", 
                  Style[
                  "energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "energy"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "energy"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["weight", 
                  Style[
                  "weight", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "weight"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "weight"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gap", 
                  Style[
                  "gap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "gap"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "gap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["size", 
                  Style[
                  "size", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "size"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "size"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["momentum", 
                  Style[
                  "momentum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "momentum"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "momentum"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["interaction", 
                  Style[
                  "interaction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "interaction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "interaction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["coupling", 
                  Style[
                  "coupling", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "coupling"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "coupling"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hopping", 
                  Style[
                  "hopping", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "hopping"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "hopping"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.414772"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.381452"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.578451"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.416555"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.403672"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.601708"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.470718"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.444951"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.771538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.576159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.455509"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.04258"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.305543"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.234332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.23177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.273189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.243863"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.24182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0478256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.280764"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.26839"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.264065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.341328"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.763445"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000000000000959614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.553864"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.800383"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00884103"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.489644"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.85328"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.202835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.500332"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.823643"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.360338"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.848692"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.407305"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.372157"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.559387"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.395918"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.398241"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.578525"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.459032"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.435958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.761368"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.580466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.444202"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.12906"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.696503"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000886984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.405834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.716904"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0129704"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.37078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.711987"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.260675"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.565836"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0.693952"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["energy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.383235"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["weight"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.06934"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["gap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["size"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["momentum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["interaction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["coupling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["hopping"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 72, 1], {1, 72 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    72, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 72, 1], {1, 72 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{825., {287.5, 293.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{825., {287.5, 293.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.823434782015081*^9, {3.823434897909191*^9, 3.823434905579576*^9}, 
   3.823435664267488*^9, 3.8234391834636855`*^9, 3.823439275903926*^9, {
   3.82343931134362*^9, 3.8234393642984953`*^9}, {3.823439433383524*^9, 
   3.8234394564281673`*^9}, 3.8234395702863855`*^9, 3.823439718110694*^9, 
   3.823442188630983*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9240ca4e-996c-44f9-9b5c-aa44bf7c5779"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.2023379218458303}}, {{0.1, 0.13774876787181095`}}, {{
           0.08333333333333333, 0.16374509362324857`}}, {{0.07142857142857142,
            0.14110285676814222`}}, {{0.0625, 0.15197977106974536`}}, {{
           0.05555555555555555, 0.14418141885266372`}}, {{0.05, 
           0.14778535937937126`}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.20597542948421968`}}, {{0.1, 0.13744077531147222`}}, {{
           0.08333333333333333, 0.16377617631378918`}}, {{0.07142857142857142,
            0.13859641170205514`}}, {{0.0625, 0.1490240583348424}}, {{
           0.05555555555555555, 0.13940354785975761`}}, {{0.05, 
           0.14191632263731888`}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.20227575086818117`}}, {{0.1, 0.1199327509332679}}, {{
           0.08333333333333333, 0.13498465303045268`}}, {{0.07142857142857142,
            0.10572329521922448`}}, {{0.0625, 0.11002966695576821`}}, {{
           0.05555555555555555, 0.1042396037769169}}, {{0.05, 
           0.1101091496020815}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.19300586662985955`}}, {{0.1, 0.11491186425147144`}}, {{
           0.08333333333333333, 0.1646909257361331}}, {{0.07142857142857142, 
           0.19824935790784873`}}, {{0.0625, 0.2724662612397591}}, {{
           0.05555555555555555, 0.3133320360433393}}, {{0.05, 
           0.3278150828884008}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlHk41HkAxiVrt3JsW3IM0jpSObpQ7PTy4KEkIkealWMkZdGxGy2WIjVE
rpJzNbQetYNxzPyEr5n5ye6TDpSO4RmJDulSO47E2ufZP97nfd5/Pp//3lUh
0V5higoKCu7z+a+Nu5aevXyZIuIAyxNbNwgQkPcqMi+fIm93dc3WbxQgkyXa
nZVNEYZjxBmLzQLIx2IYqecocnwdN9/QRoCbqvd4MXEUMZ1Z0aDKFOCAR+YD
l70UySyZff/UVYCqnsWGci2KsAZvH+IECWD2eGGbV4GQfAqLDJRmCXBiIPpt
eLKAcO6ZKh+TC+C2yWRgMr6JbBjbYrfNV4jsFuvSyoRGwitRYJs2CKHDFO3l
HWwgmTwX9290KFioX+zdeKCeJMYMSRhxFFIeDbss28Unvdkz00aDFHY+OJ+p
bldHZl3vGLs7N6PUMDk3zbaWbKn7OFDFbUZYT7+xwJVH+mILfKcX3cAVhZ3l
vg7XSeqHC6zfIm5Akh8tMneqJosVHHwNO28gQjutr4VRRcZ/ivm21awFhvab
DjpqXSWvMz76cdJbEOLT+zb5FZe4LpHvdx9vwZnu1TqTdDk5ubJ2n6VfK359
uirlFqeMtA63Djs1tuLTjLR1hVURYS9ys/BktCE/kLz3XHOJ6MjWfZV1sg0O
JRzVzzdziNXyjGLJ0zYc9k54YTqeQUxk3NWaLgQVkzZXt46mEJN96vallQRD
NSlH9hyKJc6MhAxV5XZsUUuQD3kEkaTgYjJi1Q696myf7u/3o/Lopcjb7HYo
vgxPLFwWh4RNPVM1l9oRZRIaHFKUgv6uJnezznZ0loprNAPO442GNJk73Y6/
mFVWExM5GF0jtVxrLoLSc+fCj5MXEbUitWIHSwTrus/LkzyLUMGPmgrLEsHe
+uxFvcAyhK5W1GAQEdrlPi8qr5VDJfxIteyNCNJnx9RSe7k46GtgUGYgxpD5
F2FkXyXc9ONYkx5isM/lRBUrVWEwf2ncztNi9Djk/nFftRqzI94s23oxWLky
uwcq16G84ChlMyRGsNxGqmfDg+jWXbmlhgRrpF8SbfRrsTD64bTISQKZZEQj
xboOEyJ92a5YCQzjjj1p2M7HQ5kD83W1BAP9TYMRO+qxrU8tZNUTCXy2J42J
gxrgH88I91Kl4cie2/o7uxHT090b9Zg02tyMGoNDm3DGiR07cZiG3O6uVecJ
AWimdWlXKY2KJ5aTtXFCpKvzOXZ3aBwKiS5cnygEv9rVT/0ujfWjvB9qTwnx
yFlm+Gx+t0yZJ9ekC2EUr9LK6aZxX8tsMa9EiLaXB949vk9Dyc9U95pIiHER
Y0+slAa718C+chEF/+Opeo0vaazdFzRkpEYhUV139OwrGu+HylIqvqNQWc1v
Yo3SiB/X/5vLoDA+KPNQGqORt1TP64o5hXR321Pe72jQHtrsst0U2kzePf/w
Dw3OQ3/llb4URkSp9R1yGp77C6pKAygs+VE36fIEjf4ozTclofP+3O3aDlM0
Pp3X+KX453n+HNftwgyNZg0fLd2TFLSKbLXYX2gkleQ1FyVS2GbdPWwzS0Pl
z2VzhWnz/sjZBNkcjZ7N3uU6GRT4X+fvqFfoQEFLjmPhBQqPrqzTTFvQgUCn
nhHtfAqzTPGzAMUO/P9fMH7sX2uxsAP/AkvVcP0=
            "]]},
          Annotation[#, "Charting`Private`Tag$8776#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwt1Ps/1XcAx3GVdVta1uS4J1LkYCtHsnoTKVGiMKqTWyUzusya0NBByaXc
cglD5Bw5HI7jfI/Dx3F8o3URoiSpsxS6rKmHpNS2x2M/vB7P/+Cl7x/mvn+m
kpLStn/7z+U3VE/n5lLEt3xsyVFvLnwyR0MysyjyUIXt7sTmInWPzC3tPEX2
hnelLA3gYuLFYa34MxTZ4yBW7gzh4qrKbf7hCIp4K+LHV8VwccA1tXezN0V2
6urfGi7noqJ7vsEEgyKbsr3ivd9yYdo/q9k9R0yME9re2KbxcHww7NXB2Aby
0zJlZb2hSjivNhqcjBKR0faEbxsZVTgvZRWWRdeTuXurTlm48KG5XubNDxKS
Ur71vPrcaph9ld3z3YE6IuEo90UG1YBz78nmxdtrie8iPZmhqgAuvSmpX9kI
SH/G2Q0SkQCFBrEZietqyIv83D/M3Gqxv/vB8oYtfLIhzuc1b7IWJUouxZ52
V4jpS6nh7Kw6yLPCZEwHHhlzPfJ8m5kQhzQS+6RaFWTk3D3ngjtCGNiuDrJn
lJMYz8eS62H18PfoeRU7Wko8py7KZzBESOhaoTnZVkw+ZfHYhk0iRD7W51xP
KiIbRd5zjbwa8PbjQNMSy3wiFzY6m39qQBabvN5hfIE8siIF6nli2BUkqXy4
mk5scsPPzLGn8OPO6Gcrx5NJ0Hj0nCcjFC5NWpVbj3GI+e0VmUWnJFBUc47s
Cv6VWCZzJP6rGrF2YfSEwtWX9N2I+0u5oxE6vPMeXcv2wemLHlGGnxQzRw6e
zFscgSmtPnWTuU0INQrw88/nwLHhRGJRaRPaC1ur1X1S0GXRfU7bpRkd6yss
371LB7Mk0jTh72YoP92U92YyG4Y5V/tunSVgCT58E7MjH0yWf0qaRgtsWaez
ddhFyFYIWJcPtqBlwuNZWWUxniaZGFsKWzDw57GF8T2l8CqJGnGcI4OCOS0O
6SuDWpSeeccuGQLPpIdeVK7AeFv+xpsVMnTbZVy+o8KD9u2gQbt3MuzJGLLp
XXAFFnfZMlOHVvhNWA3oWPHhv83saP6FVhgPTJ+00q2BIn47L2K4FUPyYTUO
S4A45pbqAWs5DCKO3Rc61WJ+V/B0XbIcgw9Ejw5trcMj1sPuD/1yeDjFvGj1
FaL3y1Xh7cw22Ad+tv49sB7qpR2FM6Pa0OxsWO8XIMJGVpqqsKMNEzadlu3H
G5Cy1txtVIvGpfvmkzURYhhO6zFSD9EI9g/LszgpBlf/+bWRYBoWY/zva+LE
MHMURdqH0JC+Z8ZWnxVjbZrL0GQojTsM0/n8AjFc9CPKA36moey1UrtSJsax
Td1rrH+jEdiz1LZsHgVZCsftSSYNk92+CsOFFBxrXWchm8ZrRRHn0tcUrvdp
1udeoBE1rnutVItCr56A4ZpHI1NVx72ESWFEMDhEFdFoc9UILHKjsKiPFZrG
o5F094fZep4UMqdmLB2rpLFjX05FoQ8FDb2bXQ5VNB6Eqr8sCKBgEBRgOVVN
422K2i8XwymwptI+BtbTkKh5MLRPUJDq7uYTEY2YgkxJ/kkKtvZGvppiGguq
Fn/OS6SwNVkq75TQ6F6zs1gzmUJnTWK4iZRGjjTdPu8chV297ivim2iwHbqH
NbIo9L/X6R9qpvH/v8DWHU1a10LjH4wybh0=
            "]]},
          Annotation[#, "Charting`Private`Tag$8776#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1GlQk1cUBmBEWqdWsIoIKEEtLuAQl8pSQXq00YoiimhQ2RQEFaRAh4Li
QgHDIpoQQkgxGJAlSgHDjrnfBa8RBSx1SRAUMFXTIohLkdokCJh+nemPM+88
/86cd+YsCo3xDTc2MjLypue/XPLbrMwLFxBxiAv0Y2RT4C98GSXMQ8QHrXRz
o80LVOzMzkEkwWBsu4e29nXs/LSziLSe+2WAT7vN9IEsNhGRoDLtjyZ8Cg7t
4HVv3ocIv5uf+4p2uWq6ndYKEb3r7QdIQIFj79Trvvly0jbB9PITUXBMHfP2
cMo1Enh3ddvyQgq81ixV6081kZb4rqMnpBTkNLsUSk83ktLbF/ylVRTM81Ds
kx1pIKmBgvtHGyhYMVPU9dWheuLYaR9zFVPAefznZvPtdeR+8jthVisF27q5
vJnutUSn/n0qq5OCQruU3Ay3GjI8O1KSoKIgXPVkyTVPGenhLWvZ1EdBidG2
Yr8NVYSrSZ3Gf05Ba16MgrmxgtxRGxc0DlEQYZ3R0zy/nHxc0NiQMEKB3fo1
R1hWl8nHtZ+M1ekoCGV3vU15WUp04ozWLAMF6cpl8/S3ikl86YpHHtMwnHy+
iNOZVUSun4mziDLD8H6iv2WucwExqhzudZ6LIS+YjPg4/ExMKwwdJxgYNkiy
TMfbBMR85LtvApZgOLrr9KD96HlSpK6bmMvEUKZ3vbx2mEPelzQPeDth0FRz
ftgdeZxsrNbvXrgOw9dmp7WaHQdIUK7q7fcsDIyKHLbyy/0wYatUirZiMB46
nCQ2TwThuynuAb4YopceDAkt4ICu4ME98T4M7YU3qy39ubCLqxyKD8HQ4VHu
rNMJwHmpzssxAoPJi03iv/UieCaieoNiMbjUjs9J9imA9O01b5Yfx7DeJVPE
CC6Cf9Qsx7ifMNzQsgellcUwPGeiXpSOof+POLO0rlJ4LHihYPPo/ZmT8qge
KeQMRX/IzsMQdlYQfdGkHFhpDihcgkG1IffKQ9MKuDGWUtJUhiEw96l794wq
UFgYHmoqMYRoXfsZrjJoOS7jVtRjcOifTHK1rYHU+vHYNxSGp60DFhyXWvjW
+WRf500MdolxfQ1b6iA9eAE37VcM6idNzyK21kPe/pBISomBvSX59c0DDSC5
0n03qxcDK8yw9lJYI8S2Dwb0PMNw3WtxY8jBJmjn2a6ZHMSgdb/v3H7sGlhJ
MvjkL7qfvpX6mkQ5OJ3hWU1qMUSGxohXJclh2HI0iqHDsGpYtq4mVQ6XqtgK
D9rNY8yU6nNyMO2xiUyi/dDKcbpMIocX9pXYQNtkj71NpUIO+ffag43H6Pt0
LVwv/QzBhPUU6bRxDMsDDmgWmyGol4WNLaM9oinilM1GEMHq8PakfWrU9k7p
fATdUdnaTNrCWQzfEiYCGWF4Tp/AcGuHdVjRTgQh4W6vZkxiyHq099MFfggs
P0iASdtnf355oT+Cu7wpQm/aT6It30gOInCTd6zj0X7PtUi4GI/A/PM9vJkf
MVAWbCubEwjuFFGalbSTJUKqIAnBT062rj60Z1w1N4gzELwOGnjKp61y2lU8
7zyCklFPp1ra+c0ClpiPYG9GVaaSdvBG1YB1HgIzmy/U72j//7/gdk3c6tkG
DP8CzVOMWA==
            "]]},
          Annotation[#, "Charting`Private`Tag$8776#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Hk41HkABnCVXZvVqESu6aBaeqJ5TKHQi1SUloSVDjlKSSbbprQR7USu
1n2PIbQWK+SYXzN8iRzVbs4it9wNzcpOLNXqefaP93n/ej9/vhtdWDZnlkpI
SBxezJfe/HzVnaQkimS6+2Qx5URwjB33jI2jiExTh4TcahHunqg+8msURa7o
G5ycXimCWHhJ5XYIRfYvl1AooolQt6Kp4JIvRcZzQ4K1pUU4a3W3/cAximhP
pXpoLhEhp0VaXay4uB8Pct7T+w7bOpdV2iTySNayjdfl49/hag9ryj2wnMx2
9ixw56ZwiLmlZ/ZGGdn65EbdHfcpRAl007L9SonZTN92q45JKBtVHys4V0Js
njyb+NtwEtqy8a06Zx8S47wk4XSeEOyOoQNy3xcTNaYITTQhLNsj7soaFJG3
n6SZYT+9RZp6YEzw7kIS0yd1MWtoAmdaujeXmxcQhkvEbJL5BO5JWGbYm+ST
/LmZp5Nl46iJY1VrmeUS2fYNRus1xnFeKfilQCWHnLVpl9CKGIO6MfPcXsX7
hDN04dukhVG42LVOBY5nkkbFMPcBp1EENX+nPFubQboivVyl6kbw88BG9rNQ
LnlO33E/THcEMwtdFQo7U8hDy1u7hcnDiDtFRNaaCeRaZLF83vJhmHBCV8zX
RROmzwXT/Z5DuHDUb1RjOpy0ccdopPkNsmb17u+aYBPb3gNq8SZvMPiA7W3r
cY08rdwebJE9CH2an3jQ6jRZVzKnc1xuEPTcKLtmNSccmwz2P8gewNIxd/9k
OV+ENKSpKIz3w2uLq7NLChuJvITPcOhHfdrjB2sdI6Afp+MR7tOHBqOcnR8+
REPGpHKNrWkvJEf2Jb+fjUe6Au1wh1oPdIvm1wRYp4DOYGnIv+2Cse6dePop
Lhwux0bRGl6jSmw3mp2XAec9prtrcjvR9eYy7XZrJmwPLwliXOnAoNZHnufL
bHwVxHZytH0Ft5Bor1TJHKQvVeo2VHmJFpOY39pW5OLfHO+RLnEbTsT0GbTL
5GPDKxuGbkcrnMV6XXS9AjAs9tEtMlqg2fXRX29dIT4NzSco3mxGX82wPFu3
COW1NaXpZk1Q9738usSiGNccNLY0rP8LPd1l/ecPPsSn60cW6vuewc4iQPj4
dAkcNnMUd7Easdft8650t1Joq3tbq2vUo/LQplJn1zKkM+yl2MJaiA1e7Ky/
Wo6xJycl7QMeI+v19tlCXx7yCyZVM4yq4OHCSmb483CO6bw6hFkFxkSBYeEt
Hjbx2qS8NasgmNMKfBDGQ2o1f9pYvgptitukCzg8qP4uF1XdSSD5g4ZqXjUP
/TOHxoz1CdxaNxhnL6fgFi6Ixz8V2Hr89OAmGoXuuMxA2YEKiAa57KzVFBy4
oZ59zytwY3pdY6YKBfNiB9ObWRWIXUW3uadFQaNjZrLyaAVqrZTcuEcoCNW1
9u0pFiD0lcPX6+0Xfa01DFqaANZOiTlpjou+7rxyb4gA3V5rJzmuFJosGkV+
zgLMRMj7pF6hUMg6k1qxUoBH8naKqtcXfV/L4IgFPgI4sY9S/Cmk32L+eHKM
D5k/5D4nB1OIjFti/pHw0bLjaIZyOAUZ7pjOn3l8JAqi9yZHUmDnvKBzEvg4
ZdYyrBRHYaGo7JuLv/Dx/3/hEp/z3pDFx38c2W7I
            "]]},
          Annotation[#, "Charting`Private`Tag$8776#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$8872#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt2Hs0VPv7B3BJhZCUjnsqhIgkldJ7RIWEhCIct6RyK5ykOCpRIhIluYeY
m3GfKacxYxgxlUK5llxKpChJKr77t9bvr71ea6/1uTyf53k+e+01XkH2x4SF
hIQWLRAS+r+numD51bt3Wexj88p1rSqSJJfUj/6paSx20Mm6t8rykqQbrpyD
STdZbJkdb26dWiFJmv4UrHjlGoutKpnAEhWVJDVKttKDz7HYfqGMWctJCZKv
7Y2Ofc4sdq6tksNIvQSp+KX4umk5Fpu1Ldo79YQESadr4WP7dCY7vCN8qqR6
KelsX9Dn4xdr2Jo6BdwKY3HS/s0afTMXqtlf1PeY8d6Jkm7WGmUXRlaxpXuX
abSnLyEpmHCc6X6V7Kbd78KO7FpM2rjsdpuBbwVb2tV2olRkESmmc2jfCpty
dgLD+OSRRwtJ1h2JN5btKGP7SyvaVl8SJmWvu3grzpjBtnoiRSryW0A69rJX
vcaCzu5Is166zVSIlC9knedkSmUvNWq9fCpwDvVpQRxdczL7VYeC+fazv3FC
Pu5VrWIxe4FvjuLzE7NYR9rsZyZXxBbfpPqhM2UGXo5tny9+vM/u3R2+z7Nk
GrEv1ivM8PLYFkYLxNa/mcL5d2tiWuJz2CtcfenvzL9h6nfPf6u23GOTB8Jc
WFmTSHNnT9hp3WF38wXWOzQmYJoVL/mrMYU9tXqdsrblOE4divyg+TWB/fxx
7qXeqFEUzGwt2j4aw05op0j2iI9goDTmtMPJcHZcYBel9fowtklFTg/YerAN
XFqGz7oPQpl80/HF2r+xXHz15xGPdxAeOR6VseIc7JxHSh9x3yBQw9vT614M
dIp9nU479oCfzS39yyUR3I/Ve5Z9e40mk+ItP36kINSu8vqX7+0Qeb8n49vM
bXS8ORB/J/wljMp+rYy2u4eBaB1KiVwrSEZXbyu756DqeJ8Q2V0A5QY/W+HA
HNxU9f3SaSfA7CFL0Q+ROVjt+OGztJkAlafFIxhZOXDY1KaauV4ATVqCm1lf
DhSr7exWT7ZANMUixXBjLtZODvR1XmnBhOgBZxcaYV2fCrnqZtRNO34opOSh
o7ZrX8umJwgN/Oq9pzIPdWVvd5mpP4HW+xv9Q7V5cEiuGmiQe4KUDn7Xumd5
uCn+Qn9svgk+ldsFeRN5MPvW+L7qWROWnFEuy9qSj9g0Omt/YBNsxoci0tj5
SFYO+BVexYfwsYs/DJvy4WkRnLCXzEdNr3Joe2s+hl3NmlVy+FAVOAWsGMjH
993O1l+u8jFJbvr7psh9OCw0PyntxkeqH9U80fI+vjjISh5awkfPYIjUlbb7
oOx48LnLuxEiYiq05J77iNUSGyp0aYTOxqb9mYP3oZjhqXb+YCMuhCtdq/h2
Hy4Lp6+YohFKkg0LB1YU4NA0VWCi2AhXo1U/dzkUQMT9kN9UewPeXGUOzrQX
4LrhpU5n2wYspntdEukrwGR4pY7tvgZsbJNYIz1cADFSX8sBNCBK2dN9/fcC
HHaSGfPVa8DqcrEuR9lCeN0Xp4lKN8Cjx+VZuWMhdrM3Q7yNhwHdP0z/V4XQ
njueuciDB7vLbWfV3xaC/GppafIRHh53lhi9+VCI/p3HaBoHeci47FRp+7MQ
/uXbAkJ282DfVVpqoFSEWVOvn0nqPHBjvIpmPIvw+yvbrGO8Hvd7+LdixouQ
m1mYmxxbD5lN2fYm00Wo3fBL61x0PaJjQ5dPzxUhwWJxjn9EPVw3rUk6Lv0A
FhtMrEMD67EyLiLeavMDkNJ0KxYfrkeMge5F6XMPsOqXXMVW7Xr4XEsJzBQp
hruUwvnmTi72Jvxjy5Eoxiv/hfs82rnQTHLRf7+yGFKx6enzz7kYS137VU+9
GNUjDQIXPhdncsvD6vcUYyBQ99zlai6ia15eGI0tBjlKbyDrNhdeD6vdliUV
Y/Zqu6gghQvz/zJ2Gd4phpCNetXCJC6W1HsJRT0ohrVoc3ZSHBc3nn29vLyp
GA9NVKvlz3Fxb1jm+jaxEkhT56em3bi4MDJ9ym15CTZ6efzznwsX7mPd1pfk
SyDR5h+ZeJhL1Em+lECrBNNDV5WsDnJR/Nsg5W+rEjCePM3esoeL6hWH7sZe
L0Hy7fiKjo1cpK/aGkG5VYKomaIkQx0uIuQVj7beK4G2bNBkphYXJqsHlRSo
JWBGCe+NV+OCpx2SSxOUoFrGaPNrBS5emt560C5JxtpdrcrGYlzIhQyVtMqS
4SBWcWbHEmJ9BVuoAmUy9rrnfN6ziIvRxZ0Mni4ZKYWpR/9ZwMVCgdLDygNk
pJZMiu2Z5cDqT0Atw5EMiXrVO0kzHCRvZD+mupFh5eu8f3CaA6WbnvUFAWRo
Wn3QLPrGgaFTkSA1kQybuDDm3XEOIuJ+PEtOI0P0y0Sk7icO6pgWLxKyiPH7
w042j3JwQHGsI4ZGxpxHJnP1CAep1js7o6vIGPhiotD5noPuyMTuC/8R6xP9
mH93mAPffr23oU+J9b8+qrVtkAPq8ovvgjuI+RLXrZcd4ODr7peD/n3E/p9O
7f/Vz0FUYeiIzzgZqqMV4oNvOLhzkjXpIElB/N0CV9UeDt7cE5+yk6WgN4uZ
srebA7WnR6etlSmY2fDqS1gXBwy9uVlzXQpih3VXT7zmYNrD9g9pCwVz0n6T
xoR3puTO7zShwLiRMnrjFQdNU7tFthygYNUzW3v7Dg6kNFIXb3KkgKHKqOO0
c+BweFhU140C6T/yTsaEM64aLdU6RsEu70SZ2jYO3rHiJNUDKDA6JD69l7Dm
WOeyNWEUTAiShXpechCopC2jHElBeKuqQTjhygPnV8pfoaDZ7WG8CuHZKMEq
2UQK3oe6iT97wQGJoSy/PI2CRlnxsljCse8CFSWzKAgl1UVZEBbI1CmLFVIw
OvVvyArCMubLVRfRKNDcbJn0oZWDI2FeaxdUUaDzS/Elj3B2UYXan1pi/9Yz
OyiEh16LrP/JoyBd840gg/AGMSet7wIifolPY24RPmP8YMNkOwUakY3eaYSZ
p2Z0x3spUJhuOpFLeC7TUv/jEBH/mfbblYTNn2UYDH+iwOPK6OgLwvHzY4bv
poj43RPznSHcqm+yte83sd8dBqKaxHpXed3Y3iVCBfmYzwsPwq633u7okKDC
ST6Xk094ZMrVPUqWChd7Zu4U4VCn7uj1KlRoKt80P0jES4h5+H6rBhXcc9o0
JuEE+Y6Gc3pUqPnFdGsT8Zc7bz+ydhsVNiPZggeEC3qfiwtIVJBmz13WI86v
NqfZVsWeiti20/ibOG+LBRZn+C5UvMq4Yb6EyId2r4bUYG8qpr6dknpI+JN6
XRc3lIqYo34T6OQgPM7k96lIKmZPxImuIPJN5ONDFdlYKozFjw9PEFamVnkf
v0OFnJDfuIDIV7Lk5ljpXCqqHa/JtfRyYBTEKGYVU6Fqckq0vY8DGwPK+NKH
VFhzgo0WE/nffUtTuopLhZR7aqjeO6J+vhcauLdQkZkQftabqJcoZu5ZRi8V
MjmXWsaGOBBXUMlwHqZC+HKxEomov9vn79UKfybmm7lhkPOBA/qu2wsc56mI
uJtFjSTq9w3v+vWfa2gIZXC6Hk1wcFJDjJ6vTQN97Sc7369EvcTFtu7fTAND
43WC4hRRD/svymab0yA19Nm+6AcHePFPzu7jNOwyVJczmSfy0WCKMxZEA9fQ
ocqE6EdHUk8PpYbTIM03+8tyIRfBh/21PlyjQSTPRyua6Ge5fZ4V16k0nNSm
xQZJc6GDtx2GVTQYs/otG2W4YOa6zvT9R0N7V/uL9bJctHofNtF/ToNP65ze
UqJfCo1a89snafid4qx+iOinntNbe5S30jEVoD31wZgLj0X1qzeDDotni01r
TAivtPGx2EfHBab+lyQSYQOf8TOH6QjXDghy20s4MHmef5aOppir8372RL99
P7LuDJOOThlL993+hL+H+MXV0SG0fI79IIiwyDw1s4mO3+lCl1eFcOG2VtaI
30lH+t7POtIRXLi6m1oo/aRDVc5fOvQqFy6v7vo3bi9Feuqk7FwR4WG1sh7T
UiTo/5vwk0x4qvT7hGUpXJ1cfOboXDjLNEYpuhDv8XOrWg0RT5uvycERpXC4
2hXYT9yXTo1WVQqPSrHz2zpFxTEutHr+RG1VYaB2Y3/A3W31EEQ4l6WvZWAm
WHFQb1c9AhWqBn9qMCAxsNv1hVk9Kp39LWr1GPhk5+SyxbYepM7u5aamDOh7
Jl256FsPp46aAisfBkb2W6Vr3yHu++enm93IDNhZDdLZQjysD3r6+zGdgUq/
grzqJTw0S2npqVYQ81UdTGdK8SBt039r4BEDSn3BN/uUeLgnsHE7/pSB326c
csp2HsqfbJgInmBgQotSdiSMh7f1w7IxRmWoG83L/T7FQ+Xsj85W4zJIGKyT
0PjDQ/wm8UxllBH3e7Ws56IGGOZsXFuzrwzJntILf8g24GrE2Y2jR8oQzL+z
N39rA/Q3ie2zO18GQ4/J4OkLDbiYrROuVFcGtcbn9mnLGrHuXEh3pWU50r23
76c58FEem0CvOVAOa+eDIc3ufJBSCy89PFgOibzszgk/PtxLX2vXOZeDqdHl
4hzJR8bwjvMtJ8rBE39mcreIDxl7EaWBa+Uo2FIT2T7Lh9CGNLdlzeWIXhU3
vI3chL7e6v4TVhVIFlF2ZKk144bwe/N6mwqEiwU4GBg0g6QpW6J0qAL+wtf0
q9GMgpCQ08+PViC3Ve3fNy7N8BfXF94SUIGRvrGwspvN+LW1ZJ1QcgVEamue
eCxogfyte763OyqI77i94sMjLXC0jP7E9ajEBQfSl8udT2HmM78916cKnUuM
B1S+t+LxfrUqT+9qSCy57GNu0obpHc+38M/WQPBX9TM3sVco6NabYZxjQq70
+f7er5046RWUoR/FhP/upsRYoS7oj9J3Mi4x0X7QJsdIqgu1P3Uvll5nQjAk
vKlYqwvtcjri9CwmfHokl73w6ILIYU0lCoeJnUspVdtbu+DTpkoqFGPBNUyY
5lvRDe2jHgNqUiyExpP7mzndmBjIiSmQYSFTsX/QsLUbF76qPLmvyMLK8m9H
FMa7kbpc2T5fl4Xi0to/2ut7wLOV98k5yEL4eMcm78wexL8+sni1EzFevaO7
GqUHdn+nF2e7EJb1dhlj9aA38K/xLG8WqLoanPjXPZhKlP0nM4yFuo02lstW
9OKhrKOcUgQLOsPbv86t6UV0VurDe1EsFPxVcXJKvxcStBXzGXEsMCcONE/Y
9OKl4aE8hQQWjtwJKvvh1ov02hSzjGQWRB+q+IkE9MLd/OWwfBoLvCNHP6+6
0Iv//3+A1BB1c73rvfgfgT4MKA==
            "]]},
          Annotation[#, "Charting`Private`Tag$8872#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
3In/f8+Agozx1WNanfg/rWlbCw==
            "]]},
          Annotation[#, "Charting`Private`Tag$8872#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$8872#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 0.0\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.19007508476813006`}}, {{0.1, 
             0.23489733008942038`}}, {{0.08333333333333333, 
             0.14054582659318937`}}, {{0.07142857142857142, 
             0.17999411024862688`}}, {{0.0625, 0.12015529825568771`}}, {{
             0.05555555555555555, 0.1368833733902286}}, {{0.05, 
             0.10994049756724422`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.18695680888177435`}}, {{0.1, 
             0.22417782015715382`}}, {{0.08333333333333333, 
             0.13729992808217117`}}, {{0.07142857142857142, 
             0.17353792479711094`}}, {{0.0625, 0.1172660981238316}}, {{
             0.05555555555555555, 0.13516604042148517`}}, {{0.05, 
             0.10751670299329952`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.18230604322181843`}}, {{0.1, 
             0.19917219525774144`}}, {{0.08333333333333333, 
             0.13550468072600763`}}, {{0.07142857142857142, 
             0.16642607179743507`}}, {{0.0625, 0.12377176141880675`}}, {{
             0.05555555555555555, 0.14159648765585464`}}, {{0.05, 
             0.1296846105980589}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.1833239601968515}}, {{0.1, 
             0.18543953370872446`}}, {{0.08333333333333333, 
             0.14487152354513855`}}, {{0.07142857142857142, 
             0.15661275768319372`}}, {{0.0625, 0.2001759639273919}}, {{
             0.05555555555555555, 0.24705455419769828`}}, {{0.05, 
             0.32347659406032836`}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 0.0\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.20347399707375247`}}, {{0.08333333333333333, 
           0.1706209670881908}}, {{0.0625, 0.15023946359181836`}}, {{0.05, 
           0.13587249668180335`}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.20565900114693086`}}, {{0.08333333333333333, 
           0.17199154705126132`}}, {{0.0625, 0.1504269191458671}}, {{0.05, 
           0.13440634594203696`}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.20180621404727464`}}, {{0.08333333333333333, 
           0.1515798401950172}}, {{0.0625, 0.1234125217534297}}, {{0.05, 
           0.114005436494633}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.19803573375407177`}}, {{0.08333333333333333, 
           0.17700626332671687`}}, {{0.0625, 0.2162844787863997}}, {{0.05, 
           0.2448493045377435}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1P8303scwHG3q3uvZCUtQ5N8KTp0nVxTVC9FB325VJZvHc23lKvmHkq6
41hnIpmyTV98bQvtoPmysX1q9W42PnOSGHMrk9tSQkly1u6V6957zv3heR7/
wXN9PP1Q0hITE5MD//afLj2WBTdvYsiVyeCcSeWiaN5EKq8UQysjOsOfxHBR
8VHFwSslGJpzJ1i77OMiw/s0u7xLGJI9qy4fdOOiLos+UVoWhgI9lTVe4xx0
PLRYGxSFochRM+mnOA4SapY5GUgYKtpxffhURAlyf/7tw0M3ZOjd54SQHlYx
yhyhTyczpch/D0VJzc5D+7w2jBgZ7agvas8Xkv15VCKnVNVmtyEHmflEknsC
st2hiBKdkKBclbZL1UyDzSuuDWw5LkZ96Rt3Vq7OAtazsSCrn1vRjGCZVFme
B/u17OIVfi3oauuTAv2FYqhyYnLzfZvRO+q8RcoJLiRpdC7SYBESOeoaCRPX
QWCyn39kVyMKHqM3riVXgLKUrvAIrEc8XYZqkXwLTtrkD8nthIj4MYIcFC0A
J3+vEwGkOvQNg7chIK0G4qkD08yJ2+hvz0xborgOLvZvtDWq+KjiYw/j4JQQ
fnu1nvW4sBrVuTKu7F6oh7mvww/WeJejjkv9RWbb70JpLJoJc7uOgpJyffPC
m2BXZaHFfBcH0SUpJ6d6muGXw9njrrNFyPx+b2rIZAvUGH3qtk2y0EjOMTVz
rhX0Taxfw1POIdmRABsXogS2ErIN+lAawqcOdwgc24BcX0LtdzwGwqVVAu2m
dljyLjmnzCoLOF5+59JDpHB6Q0JcfDkLWuyX1k2FywCv6miyjmbDM7Jjd+9Z
DNQ7hN5fvnCgn3/OKZl7D0zf7in7bLwGi/p57fOK+0BpmV+dG1YO3ls12VK5
HPwpBdfIsdUg2KvNpnc/gEcG6nhtAx9evrJs0/U9hOHX6YS8gdvgzOa/kkwj
0HssyFKHauHpX5vFYsYjSLzEOV1hKgRLjJK220IBml3cO4MW9fBBGx61k6eA
o9xRP+3yRtjStuIlj9QBcQafYbKPCBj2GSMOwg5wG17I8bFvBtrb6R9sNyth
VPmGyKK0QPBWq6ZgpASnrPQXkpBWuLl/cKb/gApGdO1/nNwrBhZqiFVrVEAN
yX3fQZPAGbl70Fx8JwQkLm67ldgGJiRVDHuiEx7uc26LS2iHWW+jOfNUFxj8
nnrjmVKYHNFS6r92Qc2LH43NWTJgjHWz/S/gkBJPL/PMkQFJ7Lu8lIWD56Ro
e/MFGYiZDYUTF3GQ/+nBbLosg0l7dj7nMg6DJPdlokoZREWFMcd4OJhGuK5t
UMiA0juUUXAHh8QBB/9aMww+SV/H9PXgsCmGpncmYMC+GP7C+SkOM/pqVs0q
DFypnZFZ/TgwZu27b9thQJutozoO4cCzJB8SeGDQ654SmjGKgyrUJrH6IAaN
/JndpFkcCn+P/G7dEQyC0+IUqXM4hB27IayKxmBspwYUBhx0p60/VCZgYKsT
b0+Zx2GOTTxbcQaDwjWZFLmpGu4RqaS15zFweTMuWfm9GnIreffKczB4JI70
SjJTw/K7Votl+RgYw3w9CQQ1aH46zLctwoC3rkEUv1INN+ScgLKrGHhO23lI
V6khNlDzxqYUg8fyogZzohr+/xckX15wo1mr4R95aXZQ
            "]]},
          Annotation[#, "Charting`Private`Tag$9070#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwtlHk41HkAh0fR8yRHbVpytaVDnqbLFfJ8plBZZChH5SZSHrSKtHhMjVVT
o9z3IEfWMW7m5/qOHPNra58YV4WnVqfKPLZjstvSts+zf7zP+8f7/7s+IML1
5BIGg+H0jf+86f6qK7m5FHmXpEib3y4mxzNmwjIyKSIb/vyTpaCYpHj1uNxI
/dbXv9Wzziwm8neROklXKfKmayhq/+ViMqA6KIyMpcjzT4J1Tr7FJNg5ZfTg
MYo8PmkRE6BZTCqlygZyLYpkXJt01FYvItseLe12zRER9or65f0PCkjMVIQs
hNNGbNtiRtlz2cTBePPUfFwriWR4OyQHppPUTjNBeXwLSbwU9idzgk+0rXuO
CU81k5XefnMUk0u2q2cN7w5uIqzn+slmDtGE+/D5wdWHG0miwmJdercdcRzl
p6hbNRBWknPXtsRICAw46cmW9eS1kUaZ2IyDk9LJTW2HhIRlCbtFGQ+3GI4l
7vtqyM1kTfsPjDT0Zkb0MG2riNdFnT0pUVkIXZs81qlTSRrFiyPvD+TDgGV8
ykargtwP7ZPUSIoQ4DYs48yUkj1NJiY5R2/hl6Et2vN9JaTV9PdTs1QZfv5j
Pfcer4hkz7gfmv1UgY//THR9b5pP9h4cXHQJ+BWZPmSOvTWb2I5Z+vmXV2Nf
IU/1y0AaWamemTOqJcSZI/GvDN9fJ0oVeXnhrHqUzZtXWLzhkt3egd0S3wZM
13HPHj19gdjMlDodyW7EHrV4+bSzH1FU895t0t4EvapUt6ENvpg0sbjrM96M
Ja9DEvJWxyJrJ/9eh0orwjcH+gfkc6HQf8wgnNkGieBOneZxPg5vF7x0DRaB
tq40/fw5DU25Sl6cXAqKL+3yPsxngS58sVlJ1A6zhi8aiex8iKOtvTtkHWCZ
XcnS8ylC6GvVmYGVXRDL3V6VV5fA0Ethiy6zGxPPotSShkvxW1nYYKk/wTRz
QRQ2Vg41m8oQMUuMoKtp4QWKlTDUH9OlJ8WQ7ku/PaJahQI7cdzF8B54pT+x
GlWpgbaso8VloQf+cvMJPXMhlDlRG/fn3MHWiYUEc/16uPq9sp4y7MWT3hdr
uGYNWGGkyU/t74VBbNTjZvtGDJ7zbDnt24epydanoT82YXaF+xWZrA9u9onv
7vg1I46vnnqN1w+boK8WxUEtCDyRZDusM4Buh40t/oGtcKtSGULVAORWD0wl
MW0QPXNO77eVoOzxjvn6WBHOhToz5CMSnA6IyNuZIEJ2dP1o7LgEO98I99Zf
EqH98qrqhUcSdP7F5NRdE4EhGHZTeiLBiNY2ZWGhCHypR7XGjASKHoa61T0i
VFj5uRsvSBA0/AOrfDmFh6pnayI30TA64Te9UY3CF20p5+MWGnPTRdyy7yjo
Gxp7XDCiEfde/26pDoWg/Z8UEnfQyFil53qLSWEuOtbjhgWNPue1QUUuFJSf
cpYInWjwxj2XrXOnwJydHt/FpsH2zakUHKfA/tumtsWVxmS45mxhIIUsjWWe
XR40PvLXRBecp7DBnld7359G+xo3Ld2LFA64v73EDqKRWJjRnp9AITTQ0XMk
mIZK7eqveckU6uLVlk6eoSE1OVKifZ2ClBfx0DecRk5nmk3eTQry7MHaZ5E0
fGylL9ZmUtAq33U5JIrG///C3sY0z7fnafwLhEZsKg==
            "]]},
          Annotation[#, "Charting`Private`Tag$9070#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Ps/03scwHHtOF0cVOS0ltVxSeqkOyp5vHkQR2lJW3J5MEy6yHIqzlZz
6LFkwnEZMTahreWyuW32Zfls+Eqnzukw1EGRTqGLStG6cc55PPrh9Xj+By+r
CKZ/FMHAwGDvf/3vqjuLUwsLMZTC/Fw49lqGgvjjMfw8DLVbUSnXR2UoM0S7
/7dsDBF6KgnHHsrQ9IuTyy/wMMTeFnz8+W0Z6jD5S3aShaHYOU07JyQydHhf
Zq93IIaouQlDb0NkSNptZDNNxJBd46TtbGc1Wvf3Ny3+BSr0+8yY3KK0CiU8
YE5EJzciSZmkh72yAu3ZYvdAf06JJqKvFTI6r6FstZNIzFGg+VPMP005YkRy
1QbKjjQgZf4CszezZWj9wnzd5sP1qCfw6VRA9RXEvf+PtzmlDi2KtO96ub8Y
+fZmZC50qUVLyszzq+iXkcgmOffijhqkt7lQdLo9B0V1D65q/EmG5os2cQJ5
l1CZgW/pQfcqdJ8V5Tm45Txqy2NqHTwr0PD4yTwt6Wd0dNnFPvVyKUpSzIun
zNsJNm5bjngQJYjYS4xI8T4NETTdRPJ4ObLcZVt/fD0XUrpWk/TtpYhhQI43
M8qEs4+suLfTStBHgWGITpgL7z4P3PjesQgVph8KcxAUQF4oeu235jIKdrGz
TnQXgrswzeRTRw5iD0sjN9iVwvEDnFH7yXR0ZiDea6ikHK7qnSXbn3ERQTGH
Z/RKDCNybhz12C/oI6tZ/YUphW2mnOmRfXTEJW/2i+moAHJFNq3LOgxcPwyf
Ii2uBsJYdKLAnAXhmpbUrAw5xNpFhkcUccG4vmpG86oGbopa5UuDMqD4bHat
cFMddLpKHd+/z4Fd9Jx1ghP1YPh0l+CtPh+cGuICqPwGcKr9tCTJrwgGOWPs
SZ0C3JxS88mhJXBH6UqhzChBM00bFVeWgu47+fgtaxUMPD5lekFXDll9jZw1
dAxGHL6oYvrEwF9UovVKbQIGLye22FAKfhryjPetZuh2z73WY1IB1CH2s7lT
agjJHXLpNa4CJumd6AmpBcKnnQfIzjJwu23oKw1EsGbgS6LzihqonmJR+e4a
GGp7YsF1qoU8N9dfO0Y0YMM61d/gUwe8QtPM+claeDCoHD66ux6s1t49fX1J
K9B8kl600huAf2YgQN3QCh6M2e1XGAqo0veZrd/dBi17bBXhkUq4yxuulQ+2
wbTLXcebCY3wR6/j3vKz7XC1f4O+hqUCZiBbM7UQh2MRTMHGRBUoZ1cZpZvh
sPGZbGfNeRV8FncdsLbAQf3BIVl+SQVpk/ajFBIOPcR1RjKhCiSX7plIbXEw
DLC3rNSq4OGNrcFB23Fg6H5wEy/AwNf61VRLBA5rg+kjtqYY5HYKgBaFw+uR
Eu5VMwz6Y714z6NxODe54lb5cgyONAstiSdw4C8m+5c5YMCl+nrEJeDQvm8Z
o2Q/Bs0p17Ns0nFIu3do7sqDGBAcaP1YJg5+YQVSURAGPjoDW79sHAZjl74U
RmLQt/JQ47l8HN5lWMQXn8FgUjX3Ye8VHJosaERLNgY7wupWx5TjkCTkNxUl
YpD0bWgcQYKDcbX5rOAiBqb+CsMNlTh0bz1QSkrHgKanU/BqHArUOR6CLAyK
RcYFwTU4hHp2P1mWh8FjT9WjN3U4fP0XrH0e+WOqAod/AYyZdq0=
            "]]},
          Annotation[#, "Charting`Private`Tag$9070#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Pk/1HkAx3G1dh9dVI51pa2ka5FHyhF6s2ojtSZWkkISOpZam3bWjKPH
MFGpcRshZ/OQMBHzbeVjviNSSjPjyj2qjUp5qMZRtt19PPaH1+P5H7xWBoS5
H52roqKy59/+07h16fmsLIqI5IqmeLYCB1JHT6amUeSVff3YOZYCSQfFey/z
KLJMwNeKjlRA+eaUQVwCRWJYHgFnmQo0qT0pP8WkyE7je7PBZxQIckvq2OlN
kc4IwWaXXxQQyBYYKXUp8lEvrGDhIQVMnn5V754pIhb+n9lX7BQ42x/2Nji2
lvCvZfgYKYfgarGmf4pVQ9QGHn/yrx4Cr84yt5h9m3SXOnWMhA9B317sXR5S
TS5/b9MxbToEs8Xp8k1BVaTYPW3jiaeD4HQ/36n50y2iWkPN+eg6iN0dl5IW
2wqJhrX3j5riAeQaxaZwt1YS62rzJVwM4Kisz7jWuZxYZc5fq1bVjwKV3fn7
HMsII0JfMrKxH5K0MLHp9lKiE14i3V/Rh2N63M46AwGp6bIw7TXqg5GDRYiT
bgkJtZxWq8rvRYCn/G3saCH5+zOxzdHqRbx0rf5UYz6xG57TZ5DYg0jFSs7D
xDySJo6cMz6vBx8+9979dks2aZw3Gd7Jeoo0XzLOWJ9B1HeVntCY6YZjTqLa
p6ZkYv7et9L/ZDdOeLBfrpu4SL7cSQp2UnShaMqqxOYVh4yylIWRfl0YruCc
/vn476S0xM+0SdYJa3W2ctjNn8Q9ULELcuuEYSnPU7rKD4vVDO/yH3dg7khw
FF+TiVO1Wy8ofuhA6JojhwOyOXjtc2WA3dCO5ly6QufAJdiHvIwysWjHfXvB
lsnJZGxLoXhhAjlU/9rBfz+VDm+RZP28tXJYCj9pxTCy4bqjTb2KL4OD5fl0
Q988eLVqMKt0ZGhQer4svpEPjV+lns4ZUvQ+C1ePkxeiKJoX/W6hFMOms6KT
ncVgcBPM3iQ8QWBCcuhVVQEEY197KqfbIHNMud6uVornDSFeZOIxDqYM2nYs
KgNLKt4mHH+Ew0qrXkOrctBCw4bm7las752NslpeCfv4UdcE+UMMSl5ocyyF
CNogOh0megAjZnhPtcstjC1ks6IKWtDfVzN0bFcVriuEPOu8+/B0iXlD+1dj
CXfUQSe+GU6BX2yuBd5G2QrezLXoJtS7rr59+EgNrk+aZXlE3YPStm1L89la
MHLbpBuCG1HUs3GqkimCmc2Q1s0ACY4HhPHNo0TQ+LPy3UpfCcxfldtVnhNB
aRf7IN1bgrpp09iKCyIQh1UxMQwJ2nVNFpTniMBwDnztsU0CVa91y26IRQj3
GhHP6EkQKF/hUDyfgujMeKizlMYGH//h1eoUrk42uNxtpTE+nMcp0qAQw+St
3nSfBmtieUuhAQUX9qYeA0Ijdamhe4EphR7ObzveldFodNMLzNtLYTZlyiD9
PI3Erv3ffLePgkK7RbmAQ4PhlynIPUDhXkaWNDqaRl+ozljOEQpJ2Vu5xyJo
fLikHXH1DIXvClkTdoE07mh76i77g4Kq8Z5HQj8aMTmpd7KjKIyUGArW+NBY
dFPzC59LQVhaf2iJOw3ZZo98/YsU0kwuW8ftoZFZl+zEv0KBWe6nOeNMw3e7
7IVeGoVD5uZvQ7fT+P9fcLyl0vIMNP4B4JB3lw==
            "]]},
          Annotation[#, "Charting`Private`Tag$9070#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlPk71AkcgHXsko02ttw6lNiy9ZBR0X60ckWRmpTKfUSWbBtRhEZE2HFM
jMYkx84zMa4xM9929DEM39rN7jRCOVZNOR/1WNlpNlrbPk8/vM/7vP/AuyE4
1idsqZqa2sGP/O/Nj1ZnlZYSODZWZ0uvl6Jf0WR0UfHHfr9sUIMrxbxTksP5
dAKHdrn0pFZJUTl9zijjOoG11vniuFIpdmnJeOcSCRwxsfnB96oUw73yel1P
EJgnb4+09pUiR65pptQnUKdlSbb5Ygdue7bsvk+JCHn+H/LUvTswYTj2TUSa
EF0Mg+a7nkrQw8Z8WHVZgPnJfbavrrQhXUwpr05uwWj6kPNA2H003Cs5wTvD
x5LKubHP2L/gN6sYPdbhzfgigyFI0CGQ9vSVq+6hJqRYb2XqnRSgZ29u3ir7
RlSoLGz9xM1YbpZWmLmnAR2+ZYX4UxsxTD60WejGw00LMs7BG3V4R82z4ti+
WpThYrVsgIMdxbESq/1cTHL2nY+nVmGkQWaf2IiDvBG+IngFG80cbc446dfg
FDMn4rUdA4OpPW/SJiuxVERO9NVfx2uPtxiqpBWYZD/R/IwZg5debKD9ls3G
GaerX9ytjYO5hcHWtbZlqF0TlNN/MhuK/XHG2/ImTutKZ9q2F8M+VrbWfFcB
Omg7uV6uY8HZI8njFrM3MFd9cUXv5B2oUtnV7J6iYdzpnrNpFTWgqKfFHY26
iJ4ZVc6zdC7s0k5WKrwC0c1U50G2JQ9MuHTq440BMHtxLtaxuwGWTkSkMHUT
YcY04iGD3QQx5iFBwWU0OO/lK/zblQ9keXu9nl8uGI/UUow1BPBgL8f23bsC
UFKnw8z5Qlg+5sx8q2JAzCUfvdZdBFAa579K9S4DrZtL/8yQ3wNHShbDxJ8N
bi/mfMxcxNCmpI5X362AOh0N2U5OKwy+PK+d0VMJ3Zb1Lm+NERRWH0TRfdXg
vvll0wKlDUKvF8TcWs6Ba6X9pt3jbSDfV/jzEy0u6DdJrMMzJXCqcMS+d2Ut
DKSodfJN2yFIaTdoYseDkpgdtStb28Fy8EOKnWkDxHoTW854dMBIx+gaGqUR
ZDhW1T7SAWaJ5wf47k0wb+AwFn1WCsNDgueRB5pBj6UJpyekQHVPnW4P5IP0
dxuPJVGd4BS6uPt2aAsoNxzvzh/uhPsem1qCQgRgcJgjE7h3gdL+D1syQQjr
FuwjDxFdUDWwXdWQKAKVn1WapjEJUcGxzB0pIuB3uuQITUjYMcVzaEgXwV/m
WVah60gQ/2OVVp8jgqlH6XvEG0l4or9Nk8f62DW+8RGWJCz3tTC+KxGBRuGV
C1wKCaE96x2rVxDQ7/GArvAm4euTgYpN2gRwrz2/ne5DwoyCTavSIWBRuN5t
41ESLs+aPqw0IsDiX/2AQF8Silab+NyxIiBLf5LXf5oEqZdBKPswAeEZ6n1N
USRk9x//fN0xAlws2BGe0SR4B5Rwyv0IqJH400e/J2EoRu81K4SA8X5q3do4
EuZy18TfukBAfIGZ+o8JJNxbQ9U3TiLAb/L9Cc1EElJZRffKUghoo7zffzuJ
hJV1uovMTAK+bDn38tdkEuQ7j1QY3iBANTrOCLhCQom4wIn5EwHBWpmKt6kk
+O+XjxoUE3Bg66GuzHQSPv0LBLD3OyMaCf8BDuN+Vg==
            "]]},
          Annotation[#, "Charting`Private`Tag$9119#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt1Pk/1HkcwHEPefBYj7BWyhFpNaUi5RpdjzdLa0loJlrHkqOYakNSWGyj
cTRi3TkaGqFZMcg133mM3ozjg4oyuqhlFd1lscPurG13H4/94fV4/gev9SGR
jKPKSkpKB/7tP2l3tDNKSigMGGSGzyQMoV/B65MFhRSq2C4/qY8ZwuyAroM/
5VIYdMe8J/bkEMrfRRmmXqTQgm38STVwCPs07gmj4ik0X+GuZek4hMc8sx+4
+FIojhguLlQbQsGIuqlcj0ID8TkvScFdNH+y4hajWIQjsR6MqMY7eO5Z5Idw
djvarJlMGCODuN9647OlxDas27I/MU9tAHMlduXVSa04M9GxcOEwQYO9Xb7C
iBZUYdmzzDJ7cZtWkczqWDNOWszpek93I+fxCxcdj5s4ezc+qGWDFN0fZGVr
7W5C7benBRNnOrHclJ2fvqsRe85c3ZEq68CjI09p7d8I0UW6KD2eKcZKJXe+
j2Mdbu32NZzhtmN3YWSXhXMt7ggwDf1a0IIs/fSHEkMBCn2q6KzLTWjqYB3h
pFeDj5/0OFgV1mOIt+wD+/U1VKiYsLSrr2Pa/U0GSz18dM+wmVWe5+MPv67n
3OZWoHa261zlhRJc+Gu8Y7VtGSZxK3T3qGZhYSDOem2+jMKKBhiYj0ZHHldD
0ZeHleutfcO+j4MTzKSXZnOXUMabLzfcmwNVS/SanW84aPaRL9OKKYGpBk70
oeNxOM+k1+kX8cFeM0k+5XkEubpjv8cp1YBRba73/S+DwNKeZr1sVwvKr8KT
S3Xigf2i0eTedSGc2hgaHFLGgXBfRa7UpwlIubRhjV8WfKevreiNaYb+vQLb
xcU8CHH7uLY9thVUZvaVzi8VwTbtE9HUvnawa1KsOu9VBo7rmPSt5hQ42GUU
GQVWQEH/j3bpU2LolHu/rL7Bh+n3UkUKWwLjz2M0U2XX4JEm47C79S2YslgW
nXxYDf6jy1XpIoSwi3mnrqgIwFQj22iwphNGHPOvj2rUQspyhFzu3wUB+RO7
H6ysg7RUq3qaqhSC5fRxI7oQlBn+f7LapLB5fDmZbtwICX9v6jZgdsNE97Qu
x64JDuUpOwYvdINpfMxYi+tNYGSIFau5PfDsadsky60ZdJwtP1fX7AVv1/Pv
pEdawP5Av0drQS84hX3aeTWsFbbOTo5w1fvg1v4NrcGhbRDACzjx89k+kO8e
tiXn2uGVSVqU8HkfVI1ZLjXGi8B9RhZc6UjgeEhk6fZkEVhTisc2TgS2vxHu
aUwRgVt0rLjPmYDkDwt2Q6YIVHIDJa9cCIzqmasLeSKoz1aT0DwIqBw2W3uj
SwSjKS21F/wIhMlMHKo/oyDKI2Hf8GkCW/yPTG3QpGAX+UXV8wyB2akKTtUX
FNjQCq2GYgkkzhkPXDOkoDlnsX8wjkCBthGj0oKCGVr+b5JkAj2e+mEVBykw
caVZpXIJcB99q7rOh4KxVYJiRSYBr6BiQbkfBX29iazoLAJPT615zwulYNMj
Qzf/HAILWbpnr8RSYCzarmZWRECs6623NoECZv1XnSWXCZznFYjLkiloS695
rl5CYGW9zqfSdArU34Wy3pYRGLFh8g0uUbAU23Hbj0egWJLnVJpDgd50RPFA
OYFA55Fp/UIKju48Nky/SuD/f8GL061R1XwC/wDJDneJ
            "]]},
          Annotation[#, "Charting`Private`Tag$9119#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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

            "]]},
          Annotation[#, "Charting`Private`Tag$9119#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlGs01HkAhh20qSW1pSSUSzV1UrowqbVvki5SY4SikmsiYVc3hehM6YLW
NZkYk0tzVJMRmX8rv+U/qGUPxq0MYdySMUfW0XRR256zH97zfHvOeb68Jr5h
LgHqampq+77vPy5vmHftzh2KyDNZp74yFPBMGwlJS6fIaGig19RyBZKOVLFv
JVNk99DkJaWpAlOK8CVXrlNEnQp37TFUoFanSRgeSZHflKPb6bkKHGclte3y
oMjOO+NWaapRCKSzzab0KVKp3HDa88Uo1rzWqHTJFBNFJpd9/sQoznWHKQPj
yskmHolYw32HvRtXdKuinhJWxoe5JW9GkFxhnVMQXUYWdPDDxhgjMLCt8hCe
KCV26Yd3Lwt8i7W6GS0bjj8hzEXuopCyYXBeDeyav7+EMFXtRk6qITi1JSbp
bhWRmYyyUsPtQ8gxi0uN31JM+iMexTlyBxEg7VpevltIzHQ0GhtGBnBPzYnv
bveQyG0Yrk67BkCnh1VZ7Cgih/L1Zk4X9SNocXx7xRIBGQqyUlZq9sNs28YT
9vqFxMXrU2FtiBy+bi3KuJE84ncySXihvg9Xm1caqCR8shAxplzLPlzsM+HU
3+CRg77pKQ55vZj8Inu+0IpLjM3GHY7q9CLdi4w7r7pNogpcz/0yqwd22Td0
PtemkOcu9ldah7tx8kD0MGMigWg6D/SJpF3IVzELbd5xSMSM6eDgdhnkjzm/
ugafJ1UXpWJxfSc2z4mekrO8SV6urM/k9WsYFSW7NZseg7+6bjn7/Suovw2M
yZofCW67rU/ylw6ErvDz8eVyoPuMfTbKuAN1OdWPF3kmorqTZyzc1I4XtgKr
Dx9S4MNPNzdyb4PmkEPWP6oMJMgv7CQJrbAWfV4Q68yFXE0/cTXVgm3W1zKM
vHjo7wlYOeuTFH9OuQ0XPOBD+313UsEOKWT9EXOutORBozLegHO1GXKLaXFI
ewEYtoMpgbIm+F9PCb2rKQD16asuzWiC1C71fqtOEVqaSu7XzG3EkdSerW3a
DxFgabPCW/43fKaYMiOmEO533yztvd+AVbLpGKZxMUTRp2O0btWjhx7U41iL
cCRXNMQJ+QtmkRGdpXtKUFsXOM/x6Et0dz3tDXJ8Au1b6/6oCXkBtz2ximrv
UnRq0HLumTrY+3+zyfUvQ8OTBJaAW4vKveZlPn5PocXT/3G6uQZTWxut6s6V
I8wkMY2nWYP8znWq4kgxXuk57stiSxDsG5ZlGSPG5vjtmRn7JbB8J/y5+LIY
4Q4f21L3SlDx0SLu8U0xfAX8VckOErTqr5ktzBbDW+vN+ts2EmgeZBg+qBJD
ZDmjtslEAv+WZdsKZlEQm+pMf5ygsfqwt9x8DoWvaxt5C8ZpjMt5nPyfKBhe
Y1lZjtGImjB+mbeEQueym5uDh2mkzTNyuWdBIVQxxhuR0ZCwFvvz2BSUoz4T
ejU0bnQc+mGpO4XCGq0qVNNwPpYpyPGkYKU4dTmY0OgKXTSW7ffdtzSiu5qi
MZmod/buGQpbTIImY4Q0num56RteoPDQR92j+AGN2Oy0Z9wYCpNKj2K5gIb2
o/nfsuIpaI/bMx3zaEg3HeAbJFCQ+bUfv5RLI7MixT7rdwqx5iuvl2XT8Noh
HVyc/r1vvXWOIovG//8FdoJGoXkmjX8Bhoh53Q==
            "]]},
          Annotation[#, "Charting`Private`Tag$9119#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 0.5\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.6561645039603219}}, {{
             0.08333333333333333, 0.41540676029211276`}}, {{0.0625, 
             0.28859539775346343`}}, {{0.05, 0.21990663093314033`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.6443596939482674}}, {{
             0.08333333333333333, 0.418672953536642}}, {{0.0625, 
             0.29263924587285883`}}, {{0.05, 0.2239521612833979}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.5999221638870429}}, {{
             0.08333333333333333, 0.421654299460847}}, {{0.0625, 
             0.29805795739603136`}}, {{0.05, 0.23785733010856402`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.5379997847183466}}, {{
             0.08333333333333333, 0.3795439617748908}}, {{0.0625, 
             0.32156750290816616`}}, {{0.05, 
             0.39756163375195985`}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 0.5\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           1.1998404351264915`*^-31}}, {{0.1, 9.510366358725088*^-33}}, {{
           0.08333333333333333, 1.8969882710509812`*^-31}}, {{
           0.07142857142857142, 6.649020636839398*^-31}}, {{0.0625, 
           2.2521376288843553`*^-31}}, {{0.05555555555555555, 
           1.696486988042994*^-31}}, {{0.05, 1.945008987645016*^-31}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.0005129587716780485}}, {{0.1, 0.0007746332987548553}}, {{
           0.08333333333333333, 0.0005669794767436684}}, {{
           0.07142857142857142, 0.0006224017319840486}}, {{0.0625, 
           0.0005000953238605866}}, {{0.05555555555555555, 
           0.00045572793718049045`}}, {{0.05, 0.0003597009620772658}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.00993309723158567}}, {{0.1, 0.02066517661408274}}, {{
           0.08333333333333333, 0.018626154532984072`}}, {{
           0.07142857142857142, 0.03162515745544666}}, {{0.0625, 
           0.03878669454553403}}, {{0.05555555555555555, 
           0.052497318898454354`}}, {{0.05, 0.06318871583329577}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.019201814929390843`}}, {{0.1, 0.09609110237214522}}, {{
           0.08333333333333333, 0.14156664453724688`}}, {{0.07142857142857142,
            0.20336014340127356`}}, {{0.0625, 0.24034204065192147`}}, {{
           0.05555555555555555, 0.2652360341684272}}, {{0.05, 
           0.27866834162705373`}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAJcwRiJmZub8NE5wAzgmSuVqU6WyU
lbm/l29dkWIGkrmOXMFRj5G5vyDMHiL3ApK59uxwG4WJub8zhaFDIPyRucYN
0K5webm/WPemhnLukblmT47VR1m5v6LbsQwX05G5qNIKI/YYub83pMcYYJyR
uSzZA75SmLi/YzXzMPIukbl33W/uZ4G3v9zUpZ+tQZC5SzMm3fh8tr/o0wt2
RMiOuZG8Np6lfbW/WO6avN4VjbkaPcFZrmi0vwwD4X+nPou5Lg+W0zJms78C
A4Kc4oaJuYTY5EcTTrK/Ov3ZNUyqh7lM1Y2ODzuxv7TnAN9m1oW5niOBk4c6
sL9svYLh8yGEuWXS3CW3SK6/aI27YK9IgrmiAEyhVkGsv6JITzndjoC5w5Vv
wS1Eqr836GNDeLt9uWkZh9a8G6i/tzOXDZMPerkjQDNoQximv7FVgIqSona5
YlXT7oHpo781bNcA7+tyuYbRJxr4xKG/dsaYLVuNbrl74SGEy4qfv3hh7r6h
wGe59PzbvRY1m7+O5R9DomBguZVev/BQKZe/PC16Wdj8UrlBnYoN+8aSvxCG
sUmARzC5a1N95yjyjL9k0FNsHydFOaT4N6Y56oS/+Nfos2w9WDnir4RxVGp4
v8v69+XqhmM5OA599uJPYL+h3I8MVnFqOR2qkVXRIl8/u/71eX6ccDkC6Gd+
mhN5P5waNvT0SXQ5biZjYWKbhD8AYMC7hrh3Oceewq8XWo0/27DcibtweznI
Pag19/eSPzUhWziOF385BOZFmvP4lj+K3REavj+BOTax+xSAUJs/NDA/m4YY
gzlANoiWHV6fP6CXEcPc0YQ5wPZV56WroT/KDhXbgYKGOdvjcw6F06M/sIth
dvhXiDniLf24bNalP1gdU7j8DYo5ZImSbpwEqD+8tI190uiLOdJBk6fUDao/
4GBt6TWkjTlck9871QysP8YcfkXoVo85YfY32x03rj8z72sSNpeQOSnb/X43
HrA/ZFpr1T5zkTnfw+UVhDaxP3NID1qwYZI5I3lz2rRJsj9hvstWyUuTOd3c
tuBpSrM/sb7aJikmlDlVSYDswmC0P95BjrjxEpU5Q2T/OaBktT9tT5QdAfCV
Ob5LJLVhY7Y/2uSy+rfIljn2O881x3e3PyX9dZnXs5c5pNov+LB5uD/Qn4sL
Po+YOWpib5owfrg/ZG37tRGTmDkw6q48sIK4P/c6a2Dllpg5vPktga+LuD8e
1kq1jJ6YOdQYLAqunbg/awwKX9utmDkEVygcq8G4PwV5iLJ4zJg5ZNMgQKUJ
uT86UoVZswmZOSpbYOIkDrk/zh/1A4cNmTnw4p+EpBK5P2HtZK5aEZk5fPIe
yaMbuT+HiEQDAhmZOZQRHVKiLbk/1b4DrVAomTnETxlkn1G5P28rggDuRpk5
itdYBh9WuT8C+fGqwUqZOVBfmKieWrk/lsZhVZVOmTncbhftnWO5P7xhQao8
Vpk59I0Vdpx1uT8KmABUi2WZOboVVRgcerk/nWVw/l5pmTmAnZS6m365PzAz
4KgybZk5DK0T/5qHuT9Xzr/92XSZOdI0U6EajLk/6psvqK14mTmYvJJDmpC5
P31pn1KBfJk5XkTS5RmVuT8RNw/9VICZOSXMEYiZmbk/pQR/pyiEmTlNM2nH

            "]]},
          Annotation[#, "Charting`Private`Tag$9270#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwt1Ps31AkYgHEtUTYcDaUYua9kwlqkiXdcIzPj0oxKc+QWEkZrTRQOmohK
uW4REkpoUC7zjfWii5xqNSOyLitkUVilw5TK7p6zPzzn8x882gFcr6PfSUlJ
Mf7tP/WfKZ+7epVA2prXA3UybPTJnQnPzSNwmppMGVzDxkxOh+elLAIzeTop
0qssXJqNUj+bTuDwu6Ad3p9Y+FjhhSAqjsDY/pmElTkWBrtn9u09RKCgelHH
+RULK8XyuktqBGp4y0UM3Wah8R/SbV5XhCip2rlG1p2FJ0e48yHJzWgYpWhP
ytiPbuYGI5L4JnReMbhDEXthVqtlcUVCIyaR3mVNkL1wq03HIUFoA5rtpV3y
9PHEnUr5vT8G30MR7femZ2UeyB94s5fEvIvPqwfnVlvckd53MVOJWo9mC1z/
IismFusm56TtrsPodt529nM6HhUP6ze7CPB6V4lOgqMb3pCil3rb1WCNz+4o
7HPFB3ncDopjFS7IGdfvinTBY1vS+lvVK1FrFnR1pp1Rl2Ye6qB2E3dyHs3o
xzthALt3PnmmDA2lI8auvnfAVNEPWyUPS5Hz8Pgzx0h7PD2mzX+aUYLhysPf
y6+1w49fhn7bZFGIIqMRSeJnW8zzxQWP7b/iuX2TKZrb9qBdUYbCyuNs3DRg
xi2Wtcbj+xOmDD9cQJUCY/sLXyywXGJ10/otH19Ey7cJDMxxvJZ/ghUWi4Et
xtfqSaa4SzFhadzdD4MtgpzFx4yQXJXFFukcgWnOU21ytx5+Nx2SWECKA5N2
3hlPDhkjDQL9Awr5wNefCKYuK2NXcWftZp+LMLDuLKOQt9T2xKbSYnk5G/xs
SvIG1n22lfnLqWBRkg8LyeWnaCJlsKxfUUnyKATjhB7nbhVNoFmeyyf7loBw
Q3MzPtCD9iX2VEV1KUje3/5m62cEQxPRimd7y+DR1/T2RKopjFO+CsP7K0D0
dujg7Y3mEJSeHXlNphJkw2YyFw0sQWyXc+ulQhXEi0ga6+WsgZMzSu3bUAN8
mcuddQNU8F+yGiJbCaChu0s2dsoWtg99TbTSrINcqqLn2jEajD6YVOVb1oP/
4fyIP8PtQTcuerDB9S4s+3XlJ713gJHhptfH9t0DwWDq8XUcJ2C7Js12+jXA
abKektakMzgErVpfD2qE0JfuvmSWC7S56TX6BzYB+YTe/YkWV1ii9lh0nWyG
yf7+N9b2blA+aCKpixNCT93mlhgBHcICuAWmiUIoMzmj/qKBDqZvBXvqUoRw
UjB/2qiFDq2fKMm154WgXfNoz2gXHV6qGcsLioQQcyu6zWWMDjIHDDWqO4Sg
XtzToa7CgKBeLVrFegJCzqc96YhjgNFhv3E9RQJs5BcNNZIYsDBewi/fSIBy
um86L5UB8R80u8vUCWhJtdi3I4cBucpkrxsUApRSJp7m1jDgofuWoBJPAhpj
oSdklAEZrw7KbvMmIH25yqRzkgEeR65UFvsQcIS36bLGLAOGIzfPFQUSIPfL
nIdIwoCPF1V512IIOMwtFO/eyIT7qmw1jVMEmMzLmuepMSGpKPd+YSIBayN+
zvlbkwkb7pBWC9IIqA1zZZXvYIL4p/2lWy8QcGamoeGbGROutGY7FFwm4ECo
luqhXUzwdRRPbskjgDJ1PuaeLRP+/xdIBy/3KTgx4R+9IFrQ
            "]]},
          Annotation[#, "Charting`Private`Tag$9270#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlGs0lAkYgOfIbrYTpahxK1IpG9lcE+clSqoVtVKSNEboQqGLykRnLNWQ
3GIwfCEOMkwzmc/tHZdxiTYzY6Y2pJ0uJKSUpvu25+yP5zw/n3+PCS1yZ4ga
hUL5/Qf/eUWvdnJuLok0DW6ATq8C/DNfHs3MIrG5bbbS6K4CUgNafK5eI5F6
ISjUrEsBM+PHDRIvkdj7XjvKsV0BHZp91cdjSbR7GpMU1KiAQztS5R57SdRo
duRVVSmgXDrHdIZKIje6Y/amFAWs+XtW884cIX55PMQ76aWA00ORk6EJdSjS
Fv+0uUMO26xXDqnO30G1zxS+oYccrjXacUrjBFh8fv/0ibv9oO/csrc6jI8R
/lFr7dz6wXJetmzdodsonBzooIhlwHz4zGOhFw/Nh7/6OzrJYLs8JXXehlr8
FuoS/1YgBY5pQkaSYw16lT2g1DpIIUQ6uKJuSzV2bTRjPK6RwA3KdmK3axU2
Z/bsXrBOAm1ZkS0W7hW46EKaqF3QB+F6SYpGg3K8LtY0e2HZB6Yu1mFu1Jv4
ayJKDGj3geYrm0x4WYzn7Pu9PH3+gj8lZvqqdgJT9c0nozfdg3P/mDB7Lhdi
7uHV7pXbeuHdl4GmRbZ5qIrKzRA59UBWIE55r76OPqO8XCXcBdeCy5qfO9Lx
m65zrtKiG47sihtZ9ZaFx2I0GoaNu6BEZX9z/RgT5RCX8XJFJyi5zBN/HD6D
aW20EIluBzhoxc0odwThZv6bCfFiMRhVXPOVLDsATfKWnLol7aA2GspgL4yF
ZK6ac9L8NohYGXyQlseE7TPj14N1WqGT08pd7J8C9Pce40azWqDLudz2w4d0
YGztEldMIKi/2MSeVmXDcuYuY+uPTWBX+1kn3jsPoi1Fx04/agAXu+Rso8BC
4PMurJIPkyCa8R0prSTgXE6LmcXrOhh4Gq2VKCuG0clneq79AlBafBUeVZSC
59J9sRFDt4F+KT0iX70cvEW8Hr/GWpC6ZpT1a1ZA9qn6RQIGFwIyhjfI51ZB
+lqdpdycSjg4Yz9gZF8Nj7utNE0Cy2D1wFeG/ZIa0KJOy8VHimG47bku064W
jK9OaYg9OWAaG/2I78kDqxj1MyNPs2Bo8M6T8K23Yf7FTodhQxb4esaPtwbx
gbLR9DcOnAI3+vf1RXQBuLTaxije0LB523LBweA78ORkruXoFibObLhv23m6
DlSfWJlNGelY8mitqiZWCFayhAAiio2HaZFsK4YQwhzjoCOLjVZj1U41F4VQ
RJxZ9krIxsaPFgncK0KYfzxy1OY7G/upa+ZUFwhhau7+mK4reajut8qwskUI
5ZsdWK9L8pEuM3Yp/YUE4/rJBucHHDTfF6RcrkXCHpMxDu0TB6eUhcySBSSk
JT9PSDIqxPNvl3QXG5BA8Rv0kAQXYqa20c4bFiQ8me6W0acKsX2HHr3Qh4Te
bOl7MbMILz/Y8/PS3SSEbfUO3ZNdhN4Hcso5/iSof7v3cKysCAcjFk8UBJPg
FNLdMK+nCN+l6J7KP0lClbUoYa82gfW6vlTDsyS4jzhPv1pGYHxBZn0e40eP
3UBn2BA499bC7+wkEqhqdR7FfgRKbXYR+iwS+AIb0jacwJzGdDd2Ggne4Tzz
rrMEBrpLn+tlkTBuaJXvzyLw/38Bq++W5kQBgf8CepN/Bw==
            "]]},
          Annotation[#, "Charting`Private`Tag$9270#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlHk41HkAh2311Cb0SIocuUsP0gq1qo8j6ZhNkcqRc6KkaDuVMxPVUu5E
xt1OagdF5lf4/gZRSWGcIQxm0ilq0KFtn2f/eJ/3j/f/V9M70GH/DCkpqT9+
8p91n8pfuHaNInbZM7TO1ovhkjwSkJxCkUyLz1/ePRTjsht/55UEioy1iwWe
tWJI3gapnL9IEbZs4/lNfDHqZJu4QcEUGT9zdUT+gRi+9pfb7Jx/dieDEg5X
DE6LtLZEiSIS6d2W7SliGHTNrHJI45GCEzfdVzHFONUb+N4vspyIDiunx02K
sM1Er3cy5B5R5Ya9mpcsQkKFGbsgtIxYhz95d26VCEvW8525B0oJ41jfx6y6
YRjNTxX85nuXMIpGfu3zHgarc8hOYfsdYiRXqV4rGQKjLe7yfIsSIjV98k1O
7BDY2pFJMb8Xk3pTvYYc/SHsb+nRLd/MJX/Gs2/aVQ0iV4qRs9vqNllgIpMx
32UQNSmBfMONhSTP19OmaUKIg8ox7RUqHLKoMvS1WZwQ2pYmB2yUbpBw1/h8
oi+Et5PgfeRIHmlQDdj3vnIA0c3LlkzW5pDZgUaNirsGcHZAk9VwKYusmSuy
9/jYj0/fuisXmWYQRp1v8/bofqS4k9Ed+lfJnoae/Z5a/bDKvCT7tS6RXBCZ
j60M6MMhx1Dx8rFYYr03Kjr+6kvkT5rfWPuaRcTOlKVpcy+ERayju/xPE8ec
yEndLz1YIxcqEdp7ksLTq9tdVvVArTDBqVnLAwNHSzUjA7ox45VfWLpCMF4W
1/mPp77AET0fL+8MFurCa7puPu9CPbu6aLFLHI4nO2y6PdGJR+s5phMTifil
gauRrd2JWSLb9PHJVJxN+KzRua8DZiVfF0bsyMD9zGfqbjHtsDS7kKrmnoXh
tYnWOqQNtMRJXHArB6MTWq29X1rRPXhM7rwgD/RXW59B3VYIDb/zAtoLEHLF
UcnQQwDmxcQj12dxMH1g/El1TAtarJL+bpUtREBLaN71qma4JfVZtMncBrWv
bcRvqgleEvNuNXMunhoRw3DtJuh3fw8zVy9GytJlK8vKn6GvZliRZVYCtcOf
vs+c0wjt4GMvSrfcAXPalWPq3oDennv9B7feRVRRGvtD82M4bYl4W+1ZCoO3
U1esdB7BhvljbTazDNzNxo0qSXWo2qZT5uVzD6OvpESdcx9CYvHctP5UOSoW
SqYMPWqQ/2LlZHEwD96etPO8Zj78vQPTjcN4CKp4mqb8hA/j19x1xed4CFPq
6lhWw0fFlGFk0V88pDV9dNpYxkerkoE0N5OHJktth9BrfMzas1z1Fp+HdZrR
Wz948cEUaFgWzKWwSLjNQjBGY4Wrp1BHjoLOhr1nBt7QGBVmsfIXUDBOZ1If
hmiEjKk/zlOhwHAINZfpoJEsr+aQa0jhXDXXxPYBjVp7ZWbWTgqjufIG5VE0
LnXsnb10N4Vv02qHHobQ2OGRxmG7UJB2XVEoOEGj58jid5k+FPQUbJaP+tH4
FKd48voJCm5Rx3X0GTTuKzopqZ6h4N8X4WNuSyMiM/l+RhiF0xZxubYbaMj8
o/AjPYZC4niBhrcxjZbVjjlLYilk29/xCNKnkVaRaJMeT4F7q4odpkXDfWPL
sHIKhYo5Db2xKjT+/xce+XSoZiyk8S/daX4f
            "]]},
          Annotation[#, "Charting`Private`Tag$9270#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt1Ps31GkcwHHS7pYtEUJSCaUNa8ulT8pDaSVEMbXZCTHT1XFtk2Wc0ZlW
VHZdG3eT2yTGnflKHjNmposkBo2GtS4JSRNiNmF3z9kf3uf1H7z1/YJOUFco
KCi4/tt/Gj1Xu5meTuC4hi+S8uwl8EoZD0hJJXCW1DYw9u4SJJB5x39PJHBw
0d58n8QlmJsM1r0RR2ASeEyq3VgC0dqXnOAIAut5Gi7QApbgnFtCt+NpApee
sfr2is0SsDuVDea0CdzYrPPpVe8imPQqNZ1gcnGBqP9DtPYihPcHTZ2PqcdZ
qc8oEtoCOO/Z3i+PqsNhZ55MLK/6DImNVjmFtFp8JX5nG7VQDhsP8E5zLtTg
NpPSZqHZPJitSxPvPleNQy7vSk+VfgKGZMRR/VgV1mIrGvmGz4JL952EdTaV
mGl2oM/EaAZyDGKSY/dV4FdnrnK+zHwEamefUf0RDqaq6LxzqJHBPQUX1kn7
Utyu29tcbPwBWlKDeKYOJdjLUStC8s17uKgT29Ooy8bnSG7j3S8mwMBuz4VD
2kWYXmbVX/xyDPxI4qmY8XwcZ/582qFpFH7r2LFRLmBh59WD5MjnIxA5qM9o
jc/F3iV6+hWqwzD7Rfpog2UmHpg3ni4+PAip3ljmvvMuZn31cO8x8gDYZ8ev
XRAl4YixtjrJhj647EF7azx9G7dSRfQelV4okFsXwQQDOwaYZ+2i9MBQOSPE
89I1rMFo01hVJoa9KrS5ITdfHE4L2XHkWAfolSSSOrb5ICrD2cz4xxewYux8
dIZ6BPLZbKHkOPEUArf7n/XLZCDlN2nDdiYieJzDL9fyuoNE9PpA/jU+PDnA
tpyfT0Kas2ZKHylNsHL0cMaMPA315K9XPf6eC1aVCxp090wUOBpqnFhVDXZW
N9P0vHORl67zi1XTHGieI70tfMBCKbQL55tGikE6HKZyQ5yP2JdzxH05LBgy
XeQG9BQiyf5tBu1bMoASlxSYtZKN6DxXpq9qMnTaJxd3rS1B9Dx2mcQ2AcjJ
Azbda0pRxaOWgwdpt+DsnLVUz5qD8vpk/lWqCbBTuhhtvbkCqeoucEclSTDQ
8kaTYVWJZEpe+ZZd6WAQEfa6xqkKydI9Wj2fsKC/r+6vi0er0dg76mmPrGIg
OdEn+b41iDmqj6+SyuEQZRnyKLWIETY3RJ2qhiZnw9qz/nXIrmNfraiBC3M2
7ZaPw+uRarIvJzevCQpefy+viOAiZv711kF/PlzyC8owj+YiDac9PM9QPphP
cPZXXOeilBWK8210PjT+bRpTfouLsipntomz+dClbaLMyeai0mXLKGMJH1ae
Mt70gMdFCmQzi2XXFqCIt9oVriaQi+YUQbYVwHc/+w4ZqhBobJ999V1XAciG
chkF6wnEuFI5KSELIGp689N8XQIJDMa3BEYKIEVN78Q9UwIdCa2NHeYKQOCm
Q8k9TqCodh75s4UQ4l/99PWWkwQytxw9le4gBHcfJjvHi0BdnB3Jtp5C6AvU
ep/tTyCLPxWfZYYJYfaO5tWsXwgkM1EHVpUQGjRJ2pt+JVDB7q2WoXwh0LNT
GjKjCeTucjTEqVMIa8rUlzNiCdT48NN95WkhdFp4sDbeJlCwWnjRrKIImI1J
hzL+IJBhpObwiJoIvB063+ikEmhE/tJHqi+C//+FmPH3N0l+EME/V5511g==

            "]]},
          Annotation[#, "Charting`Private`Tag$9319#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PUfPDP3//wLwr5l8y+lihv4HbpScaw==
            "]]},
          Annotation[#, "Charting`Private`Tag$9319#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlPk71AkcgEnHkx1ayaIcSadNaysk1UcPHZTkmMLKMYhU1GPFFFPDWLkm
xmAihjkkx7iZbw/zMbEk1xip3WirKWnKlqc0pu3a9nn2h/d5/4L3taDEeIXP
09DQcP/Gf14zoHf56lUCJTYHdQKuyMCfrTzFzifQ3kfMrGDKgBkg9bySS6Cs
9vmbmWwZqKbPrEhNJzBUK8MzNUsGPToy0RkqgaRtr3Jr0mVw3IM5ts+PwNhe
w0XvU2RQKde2VBkRmEUz7jqdIIONf2pJvDhiVLoj/UuwDOIfxryOoLfhVKZV
X+xGGRzYsvahOrEVm1oXrEx+Owy57XalwqQWFKZk55tkDMPynVI/UWQzxrmU
KYKXDcOmJQWjm483IScrUunKGwLGH8/26R9qRLlhpkxn1RAcHMtmLnFswPqG
jtxk7iCUWtLz0rbX42z2dlGBxSCEyyfWtO0X4Wofo60M9gDwNA6WH9ldgzma
BiM5pAHoyo+RWrtU4f5F/eie0g8njNPuta+oxLWcuS8vlHfA0mlLpLNRBVIT
OEGFR+4AhTz6mq7kY1a5Ri25sQ9+G1m3XN1djnJO47k4Uh9ceGLB6M/gYlzp
lBfv9G2Y/TTe8YNtMVYmh/v/1d4L+YE4c3hDIX520hur0O+F3SUZOh97WPid
T/X6uqM9cNI7aWr92yw0s3UbpBb9DgK1fYXDSwZ2lHS/65/sBkUd46xPVAK2
DWmTAky7YZtukkrhEYzhUt+id8e6wLQqlzyyKggCVVoU99JbMO9FBK1InwpN
IREsZZ8UoteGhlCKGeCjdKqnf+2E3tJbdYb+2TCR+SE+27wTbu+stJ2bY8GN
PcWaxjQJzH++p+idugDqdC9WaY22g13Dx2WXDheDVD7iPPrPTXCyu1xgGsgF
vdmwCqYDAZ0q8pSwuhyYydvebKK2wfjTWN3UUT4s63GlS9JbQGH9WXzqnhAa
LU9FWTQ1QVg6K/ra/EqwmjDZe7+6AeS7867f1akCp+IBvjSxDgLyHjmOkWpA
z6G72ExYDSEq+3FTexEMxU/m/Rx5HTaMf6bZm9WDXwCZhhQ+POqaNGDYNQDF
vEeTqSwBS2rsg2bXRngZrf2mTS8fHk60Pj7h1gQz7grbgJB0ILtemr4V3Ay+
GOHi3XwSnMO+OpSFtcCOaLbmdss4lBxY3RIS2goLO03vm6kzUeU4bNsb3wZW
O5d6u+QUouDBT+p6qhh2JWZFLvQswyhKTJENTQwGc0nyqPAytHkp2lGfLIYt
Dmcvyqhl2P7Bml6XKYZD+sd4XF4Z3jXaqC0qEYPazI3kPluG84+uN6mWimEx
m3rmWWE5ho2udBIuJsDuvfX5BY95aPVLsGK1LgGOfr4urFkezii4DMFSAtIZ
DM+Vi/mY+Nasj7+CgE82iq1Om/nI1jP14lkTQH7SaH6FwcduD+MwricBA9wb
qSc2CDDjvu9C8yMEhCbMXNTeJcDDQZzKUn8C9ho5dNR4CXAi2vDvklACntcO
a7y/IPjWlcG5a3EEcGyW1rCHBHjTgGxkcp4AmnOEBJ4K8FIJ+2YxjYBaU4n+
9JwASbX6X4vSCHi67mzafgshyrd6ly/PIuDV0UGh2laInHaWc1EOAeDx46Iq
NyEGusgnjfMJeKCTWR0QJMT//wW9edOs738V4r8oiHRR
            "]]},
          Annotation[#, "Charting`Private`Tag$9319#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
bc6zEd986n/OFt3s
            "]]},
          Annotation[#, "Charting`Private`Tag$9319#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 1.0\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.18248754767238617`}}, {{0.1, 
             0.1414329571723334}}, {{0.08333333333333333, 
             0.11629407141732262`}}, {{0.07142857142857142, 
             0.09727196159921592}}, {{0.0625, 0.08380821625868506}}, {{
             0.05555555555555555, 0.07312576650764457}}, {{0.05, 
             0.06485010864241492}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.16770122257679487`}}, {{0.1, 
             0.12967194723101816`}}, {{0.08333333333333333, 
             0.106375292035505}}, {{0.07142857142857142, 
             0.08915223660696325}}, {{0.0625, 0.07703735893196972}}, {{
             0.05555555555555555, 0.06770902915097965}}, {{0.05, 
             0.06054660814090962}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.12389136333406614`}}, {{0.1, 
             0.09915498677196766}}, {{0.08333333333333333, 
             0.07696045132967377}}, {{0.07142857142857142, 
             0.06868035783405313}}, {{0.0625, 0.06136245436318344}}, {{
             0.05555555555555555, 0.06805582538640786}}, {{0.05, 
             0.07741015317601985}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.0713038736962881}}, {{0.1, 
             0.05610348775293317}}, {{0.08333333333333333, 
             0.04921113944360078}}, {{0.07142857142857142, 
             0.1180411762388427}}, {{0.0625, 0.18345253408141504`}}, {{
             0.05555555555555555, 0.26085347384632396`}}, {{0.05, 
             0.3240067163185838}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 1.0\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.823434782015081*^9, {3.823434897909191*^9, 3.823434905579576*^9}, 
   3.823435664267488*^9, 3.8234391834636855`*^9, 3.823439275903926*^9, {
   3.82343931134362*^9, 3.8234393642984953`*^9}, {3.823439433383524*^9, 
   3.8234394564281673`*^9}, 3.8234395702863855`*^9, 3.823439718110694*^9, 
   3.8234421894160786`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0dcc40c1-1e10-4e15-afbc-783f575f5b5d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.38145221593096207`}}, {{0.1, 0.3721569100429494}}, {{
           0.08333333333333333, 0.3667150598389113}}, {{0.07142857142857142, 
           0.3630054097385843}}, {{0.0625, 0.36029049520222006`}}, {{
           0.05555555555555555, 0.358195465144958}}, {{0.05, 
           0.35651533704213667`}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.4036722501342101}}, {{0.1, 0.39824113310542103`}}, {{
           0.08333333333333333, 0.39510819768597505`}}, {{0.07142857142857142,
            0.39242717022869883`}}, {{0.0625, 0.3895172932560087}}, {{
           0.05555555555555555, 0.3858218072025059}}, {{0.05, 
           0.38077893224602766`}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.44495106683132596`}}, {{0.1, 0.43595788618200865`}}, {{
           0.08333333333333333, 0.4222145573368862}}, {{0.07142857142857142, 
           0.4032893051687083}}, {{0.0625, 0.3806688764735836}}, {{
           0.05555555555555555, 0.35658357194506946`}}, {{0.05, 
           0.33276303166078114`}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.455508538520357}}, {{0.1, 0.44420208060239785`}}, {{
           0.08333333333333333, 0.4284600617077438}}, {{0.07142857142857142, 
           0.41072802965050426`}}, {{0.0625, 0.39282798128507684`}}, {{
           0.05555555555555555, 0.37551238054013625`}}, {{0.05, 
           0.35899776849473086`}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Pk31XkAxnFTZkyiTiNZihgiTW5KKOo8JEtRlqIhW1yihToqIzE0N7Il
W8muiCNJurjfkk8imhPFvd+loiGNEWFaDFpk7pwzPzznfV7/wKPtH+YaOEdG
RmaHdP91Rceis5cuUUSrzf3B1IgEnlnDh7KyKXJ83bMImzcSnPNqdklLp8ij
wr2rMqWeHD2y9EwiRSIi/NJ4oxK0KXZVH4mkyOOVBzwCxyQIcjrH2HlQJDo5
ekz8twQVYnmdSVWK9DiXKldPSLD62dwm1xwRudjzLpD/VYKIF2Hj++MaiF58
p0O4Eg0HY70X06fqSc1w6/tl+jTSG00Ly6LryHDpxt4Acxrqm5s9qoOFxPyf
cfkdTjR4Cy9I1gXdIvFfyacufxqCp3/aKe2sJSP53WumImg4MqnnFlrcJDMZ
fuW3U2gU6sRlJpjXkPlb5verFtMIFPeuaLCvJkbxk95qdTQuyziWuFtVEZff
ZvKFD2m0ZIc1G26tJNpP4zTHemiEqCWwjUsryLz7toPtb2noWBoHW6teJaN8
/cObZRn4u0nG44avkKF8e3M3NQbx3frq060lJH310DZ5HoOol9qCR0lFxPR4
ibqnFYOJLz13l5jkkQ+u+UaO7gyyfchbZ4OLpHK4Vu5ZCAOrgiTFz20Z5KSy
vO73vzI4uCt6aOX7FPIx54/TdCaD0mmzqxtHBCSceXzZopzBwA3B0d0HfiGy
5bNyNo0MNiyInhxw8iPpax15w08YaFSmu3X/6IsOpSUXV71iMOf1/phcpUho
JWvZLJhmEKoXsM8/T4CwO7bClPks2gvv31DxTAUTez34uhaLh5srTKamMvCm
IN33oAkL2b9scj9MX8CX8HSVVnsWpjc/L451zoNuX/di4s3C0vTsBQ2fItjP
5Ul2H2Vxb9JtqOxaCdR/laMTBCx6XoUvOCO5gm/Pa6t7X2IxYDgjOsSW4Y3H
Hu3OKhb8xIzQfNkKvBZ1Hu5rZiG2yiynFSvR3+UblcKw8Mrss2AUqnDWMuwR
+5rFvkmzHg2zatjZEL+WGRYGPTMxZpo1mDP3p4btizj0tQwqC0xvgnbjXI/p
cdCJDH8u3FYLd5lv1lpYcHjRW98fsv0WxAG2Xfk7Obhtix297yfEfq8OYXEA
B2v+7MZifh0mFUM9EcGhyUG3bl9APdarpG6JSuIwafHEpD2iAcl1o2EeRRxK
n6+ZrokUoVch2Edcy+GAf1iuUYwIjrPLXQxucTAaqd5Uc1qEO+8461ipGz8a
xt1IFiGPtTPgCTnQqqvlqwtE8CzWn0is4yC7Z+Wya80iPDUeSrQSceBLtCzL
5lGgPYPqau5yWLXXb0B3AYWtOzQr5Jo4vB0oEpT+QEEINtdH6lPvNX+/spRC
pq5trALhkLVIw/WyIQXX8RUOwfc4tDqp8YtcKHTFDfYvb+GQxP383XJ3CpbH
CiQnpHb2zako9KRQE+TW1il1b6jKWEEAhTSHB9eiWjlMpCqfyD9OYady2Qnu
AYfbym6qy05SaJLzDuG1cYgtyLqdF0OB92mx1xmpFa4rzeYmUFDsE1gZt3MQ
r99Vop5CIbp70/okqXMaM6xzz1MYa5nQeym1z1bxoFo2Be/6KrUNDzn8/1/o
qOArpEn9LxHVe+M=
            "]]},
          Annotation[#, "Charting`Private`Tag$9913#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwt1Ps/1XcAx3GTRYWW68mlJZfwoFpEJXsLrYtMCaMVuZTCqJWkOUYdkUW5
HOHk2nFZ6qBcztfkk4iKHnWuzvniUWkSyVqXkyYzPR774f14PZ7/wNskJMZ7
v7KSkpLn7D7XvHdRWkEBRXjs++1xtwTYnTsalcumyOE2Wm7VLkDmnvad57Mo
snpk7O/+WSvGDxumnKVI09oFy1w6BOjSeMQ7HE+RW/0ep9S6BDjglSnZHEAR
ockD14IeAaqF800VDIoorj3saJEKYCOf0+adzyfoEt+ZHhcgbjBmIjy5mThm
WKe6GgvhYWcxOJnQRB4HzI3y2SZEVqtDcQWzkRzbM/Pp9HEhDJzbA3gHG0jM
ezePnyuFWLEwT7T6wA1ikKt501YkBEv252bt768Tm3tm41VzRNguychc6FRP
rO39u2EnQrFpck7q+joi5y7q4gaJsF84YN68hUcmavRO3T0vQrnS9jK/jVdJ
A78smGoVoYMd027rfoUcmNr6qvuFCIcWp0pbDavJr2JnBzZDDFMXu4NujEqy
5UZz+cpNYoT4iiaSRy+TOEtmb1qsGGcEyw0mO8tIjiiofIYrxi9PTVg96SUk
iHWX4yYQ492n/pt6azgkuyfB+7svJGAHktc7rC6SWEazjd4KCTYWpWtMdWWT
m1MbOrmBEkTuYo5YvjlH3uo8Ud2ZKQF30rFy3RiL0HbzYu63SDBUyzriE3GC
WIwyc5RfSrBWk6kY8tpHTLkn+lUZUhhfyfIVLAuCBvvCQ2t3KZRfhCcWasdj
r9G7JPVjUkRbhAaHcFgI/H3Q949SKbqLb9fq785AZ6/WC0uBFHedq9d8+JAN
hsV+iwalPqg831T4djIPRinOaeq2fXCon9JJ2sFBysngKtO9fXBxSMszDixB
aeyCMdX0PtxS+I5U1JShqlIom9fUh/5nRzVTRJehGz3Muj/chyHbaX6UtAJ2
Tok+/loyhJ3Njr6kUo2m4pCnXFcZhBtzqsQaV/BS9UFWW4wMe3IeO0nUr0K9
ymfiPUeGYIVjv7EjD7kDy9XGe2Sw6p9OdFxSh1795E21kzI87hjWZTnUI2LU
3OUbKzlM44/SDVuv4/3rkeeP/OUYHGh6cmjbDaz6d2W9c4ocvluTxm/va4Cw
rGPtoUY53MJm1pWGNcLMY/BZ8JAcbR5mjcGhTQi11nE6oUlD4fRwTXdcM9RK
87w8v6XBpVdO1sXzsdewJPWvCBoRITGFqxL54Of9I2qKpLFqjLeh7hQfOlp+
SxOjaLR+tE2u/Y2PHjUNSj2ahphhM59XxMd6xckxqyM0VH6wNKpp50Nf4OcZ
FkcjTLTUpWIehUdnNLXlp2lY/7hvyEyTgo1yRFApi8broRIWV4tCGvNOTXgK
jYQ3S+5dNqSAYwnuijM0chcZe5fbUuAFj8Vqp9Po9FocVrKTQvqGLpnnBRrp
ff5zv/aj8LzZxFw3i8aOoPzq4t0UXO2YRwZmPRCt/6oolMJHK/v5kTk03mXo
Hr8USyFcv9wpLY9Gi64vw+gkhY7s6VSvizSSinJbOIkUlmgGiPXyaahf054p
TKUgVfnqp4oCGkL7XWUG5yisToqkogpp5LdmuxVeoJAx1fWlPYdGoLtweDGb
wujxZd5Ts/7/v+D+hll8+xKN/wBJLHYr
            "]]},
          Annotation[#, "Charting`Private`Tag$9913#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Ps3lAkYwHHJ2bPJZSPX6LIY3bQty2Slx63tqkYaW+qgoaRa2lRSWOwQ
MmSY2WEwZAYhhlzmlTwGuURTRkMZl5eU1ZZNq0mrTrt7zv7wPZ//4LuGEXbg
uLqamprnv/2nVe+ypOxsAi+kR18O48jQN2v6TBaHwCKjdEobS4ZpR6Ve6RkE
9gkK5IaJMlS9OrsiIZnADeK29c0XZdih/ajybCSB44+WKLUOyfDE/jTFjsME
eupxncpMZVgq17RQGRNozan8OCl4gBufLm4+wJOgMmcsxresFyNGwmaC4xrw
pxjauIpzH/fYUUbmo+pRP8R9uVLYhRlNDvmi6Dq8UrA195e7HWjqLD1cebIW
dcUe8YqKdtyky+23PXEbiQ7ZlnBsReaTyR36+2owuS7Ys7W0BfcqWGm6TtXo
NqEdWkS9i/kWcZlXvxcjN5g24RVE4HH5sFXDzkrcmifWC9xWhzfU9hb6uFag
1vjyycX+1djGCZPaeJRhV9RS3E0pxxCTqwNNK0rRjLd2k/f0DbRwsTvpblyM
SQJ+87tzXGTQ+2fiposwwCV8u4tFBCb2WZvOtxcizdZ/SkRJgCvja5g9KQJs
7y4/T1Vkw9xH5V1Dez5ez+XFd20WAccP39DW/YYz1P4vB6YrwDUvRXuhg43e
jiFLdYU1cNo7emrt21S0dD56sgbrQThPLXZ8yUSZ7R7LjqxGmKhi/nzw1CW0
umRmGdHUDFt0olUT+wOwbPC8a+8+KZiXZdD7vvaHKIqCn2vfBuq/B8fk6EcC
JY/Cu7P9HoRSAo8x+Ey4o6VqY9t2Qmd+a5WRLwushfUZkp3d0OVcav/+PRtk
M2c1V9J7QOPF9py/5rnAsL1Z47TtAThULyyPpfGhN0/+sYT2EFwckrjmfgJY
tsjZ6YXgEbSo6FOi8kJ4ksry5LH7QPksXCehvwhSKwbEs9lymLD5JDkzIIL6
rtENJen9EJTMDs3VKIWeS2PvF+c8BrlrZslj7TLwsRIom9gKOJo55qTQqoCY
cmUWJ3EAjqmoSnNqJWTe+0pgkD4I65SfYqgrxWA+rCGdTXgCY23PDZgO1cBO
nLW7kPEULCLDh2p31UCx5pEoY94QjAzXkyG7b8Oma78OG7GUQN8V+6o1oBaE
AiGrmTsM7kGfHQuC6uC6mOkjTRuB5j2WdccC68GQPz73LG4UVE4P7TsjGiDF
hDp5K3kMhEPfzIsjJeB4X/RuGkg4xQjL2RwjAXpoZ7yuGwmbX1ZuFcdL4Jze
tK69BwlNH2ziqq5JoNx34/rYnSQ8Nt6oWZknAbM/avwMvUjQ+HGtWblUAp+X
tnS6MUgI6l/tIlpCQLvnUDafScL6IwETljoEkLMLFGkiCW8mBEyhHgGfOOa1
L5JIiHq7srtoBQEOowGyb1kkZC0zP3DDhoCS0Cn1Lg4J7ftNggReBKSkz52e
KyYhZfDQF6t8CCi2M/xgcpMEmj+vNN+XgNZBaiKUkzAcavQ6L5CAhVVXClKq
SJhjGVzMvUDAGfEixWoJCY0GdGOzywQkH7Rg/NBIQmxeViM/hgDRvMefp5tI
0Lql/znnKgGjLklLGlpIkH/nXWiaSsDfkze5w60k8JrY7jnXCTBM7rFQv0eC
n4f8uQmHADub12LrThL+/xfQ+nS2eXaT8A/JxIOe
            "]]},
          Annotation[#, "Charting`Private`Tag$9913#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Pk/1HkAx/FJHrtbjyhrbeRoM2npgSa5knqzLKtjdSFHjqGSPEi1WSpR
U451hHGNkGtGWOScb44PiY4tMgzlmK9GpUOy6jGEancfj/3h9Xj+B6817OC9
h+QYDMauf/tPnQdKMVlZFClfyO4oURUQN+6rQG4aRQKTDNxn5QQk0aNtT1Iy
RfS1yZT9Wz6RTRxXvxRLkSJ7qfp4G590KjyqOB5GEW6K7gmdY3xy2DFRbO9K
kVO6dVoFzcWkRLSUKVOliO3+rtBsdhHRf7K4ZW+mkDwrY6xPLM8noSPBk0ei
Goh534wqOyOD7Ni0bmT2bD3xZim8MLGIJclNprnF5+oI46DD+5/yDpJVW9tc
K/xrCStnlBVcfBGGy9N7jQ7XEP83C9unGrjgPH5mr/xrNfnBpILhYnMNO8UJ
icu33CBCl65SneV85DKjUqMtqki8M/u+RWgZDomGdRp+qSBGY+9MlpRWoYCx
M9/ZupxYxvpbZx6uQXtacJuBbSkZ9nY19lKpx1G16P4m9RLyeWqbf/RnIZhW
m/xtVPlka7CkX1TXCLZT72TUq0LyufjE5fOCFlzu+XHV7O18ohdNFKs7WnHm
6RrOX3F5xLe6YKZO6xY+LAw1f2+STSSbGVGvue1I8yRTu/UyiL/wpoA1fRvW
OXEK850pxCj1XZAgsBPH9p0b152OJ52XR/UsRu+gaNaMv/k1hwSEGF6QWNyD
tJITsj/gd+IolIXXVN+HueI5mdTRm9jI1JV4Sg+gWZrs1KPthUW7PvGuHn0I
uZdHInjKYWAwXDu6JV0IWufrw87m4GtxjF2c5iPcyb1VudItAYYHCuZsBx/h
7tYSk5mZFDSOZ5UkpPZA/sXPvPez6eieho6XlQimN+a/i9ydDXl95vTdeRGs
TGPSNT3z0Dpam9BY2otWmdN4cVk+nuavZVo692Fo7KTipd5CaCf3fOO0Qgyp
wSdhYH8xJub1m2XNYvjFpgRdlS+BmNvRxgrvh8g6VdCnUAq768vS3usNwCOV
3iJeVg6N+xvZtv0D8JGZDWmaVUBZjXveIPkx9IY+RZhpVSFlrOhYHp6Abn+u
wjG9AdbwtOD6whMww04O1jpUw/iplsS6fhAjw/WjR7fXoNXno5TtOwQnh8iJ
W961CFyhZK6xehg2fl82X/OrwzWLAXfPrmG07Fhb5+NbD/OQM2GG4SOQbek2
uRPagL/FHuPpxhIUDW6YrQoTglU/wYyRShDADuaxIoQwnRvrvfJcAtbrCsuq
C0JYbhu6mPVSgqaPBlGVfwhh13lvrHRSgj5V/aUVOUK49fMLH85JIO+iq1HW
JgRH5s1UVqbh1/uDVfESCo9Nxdq5NjTWu3tL1ypSkIQ/EPHtaExJ8zhF31KQ
trRfqHSgcXZa616hOoVJu2ppqyMNrpLm3gIDCnIuSQVj7jRuO6r55e2hoB/q
oK13ikbcwIGvVjtTMGq0Em0MpbHbK7Mk142C6RezCxbhNIaDVr7N8aVgFb1O
uiOSxocEldNXf6PgnLG4ICiexk0VJ1WNcAoeQ3N7QpNoROZwb2ZHUPBePb0o
MoXGsj+Vv/CiKQQIRn2SM2mIjPflr4qncPzNgBIvm0ZmU4oN7wqF0xu62wpy
aXjaip6rpVEIP9kZUpZP4/9/IbKheU1tEY1/ALQOfvo=
            "]]},
          Annotation[#, "Charting`Private`Tag$9913#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt1Ps31Hkcx/Hpou2CTHK/bFakdpRKVDjvHN2UjUlqo9yGqC3GcUp2x2z2
jJIybYPChOQSyjTD4Put4WPUFl22mvleKmaTFmXbmmgHRe13z9kfXud5Hv/A
yyk2eXv8VBaL9R2z/+pyn51dVISj0LGgTq5WC+H5rw/mF+BoxJLwqWQs3qPm
njmLI8/RXpmBseEN3y7rJI4uTJzKkxJauG3ySMZPx5GR3aJd/aQW9gWLyU27
cbSmOuXO0SdaqNHMdjZY42iJYVdQmU4LnKfT2rYXYuhbwf7BoUEtpOmS3yZk
tiBXe43e67MWtq501Y0JmhE7qVvKMifgrMqrtCqjCbVV8gPDFxFg66feLUtU
otYXH6bF+xGwdO457Yp9jehgrbHHOy4Boid/bjLf1oCyOVivWyIBQWSueK6P
AvVfZn9+n0FAqXNm3om1csQROiX6SgiI1/S4tGyWoXZNfZJnDQGXWEHlO/2v
ouVpVkqZioCbBclq9/V1qGtSsOX6IwL225ygVHY1CI3uLk8ZIMB53crEAOtq
ZHYYM6r/SEBsmPZt5usKFNW6pUJiRsLxx4tsx26Vo5G78RMzXUn46YWT6F5O
GaKPU75Ga0n4MNHdarlKigTdNx7WBpNQEIn0IYvPIwErxYfkkeBfkmPy6bYE
JV+U8C+nk/BDaMag2/BpZJP6u/WcMyRUjnlXrxkSIRq7d3j0Egl910QpOw4c
RW7SwMZsjITVphmGvuBotKDJtrDiPgkOdWfDHn8TBfqcxSS3l4SprxKExebp
4Mh9blHxDwlJrryYWKkIhndEPPh5FgV3SjuuWYXngu5BLuuzIwWdfjWrRkcl
cKRvs8HUk4LpAxuKR8bOwfIVh/zqN1Hgpfg0/1iIFITOSuu/9lCwziv7nENk
GZz3D/Ru4VPQbggbrLpSDoo/PCasRBR0v0w1zdJWgIkAT7csoqDPfRI7SFXB
+2rlzKqrFMSdlCRdmF4DYeNpXQ/VFGj88y4TJnWQcqhOfIqkYE/ecx/S+Cpw
hr3kPa8oiDF4dzt4y+BNiM6lc5KCxd2TQm9HOQzVevI3sml4frPfQuSlgHbx
zON7XWlwTk99pgxsABQNsbN8aND1NPfu39II4xOFbwO30RAWeOxNR7QSAuQz
Ip14NATEfVlzMa4J2O8GksVHaGjburAphtcMRSVdHMlJGgw+D1fdSWuBogUH
9EtKaah8tmxMno5BVCzfJUJBw4HY5GIPIQbLVBNqOWOPIZmv/BcMjFn6vTMa
aFCNu2deO4WBfsOcfAVjwpozW1aCQcTd+eNfKWmYvsvN/ooaA9SUWq1spiFO
u2Bd1Swc1JYxYhMVDUsiovsWmuKwoeGuFY+xvq9MVDkPB8pbehFjLBh27Kqw
w8F5Soqc10pDPtth+yV3HCJPv+vE22i4FWwTV8bFIS5rtS5eTUMO/f2Mr3fi
0KE223uDcUhUYU1pOA5LXwX3mHXQ0JNk9XcJj/HI1Kc3GH/ItThy4TAOmim+
99i3aLhuEWZt/yMOJeKtGxMYHyvJvy4V4pBm1NGuYmxcb/6l+AQOXMXLxoTf
aNB4hpbbnsYhdEDMaWVcqJIEFP+KQ4xReeW82zRErtf02xTgIDS1tU9k/P9/
Qe2Uj5JWxv8C8v6A0g==
            "]]},
          Annotation[#, "Charting`Private`Tag$10020#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
4MDFgf8BfhCR/A==
            "]]},
          Annotation[#, "Charting`Private`Tag$10020#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
sHeP8PrKJOH//3/hpLUQp5pOwv8AWSHB+w==
            "]]},
          Annotation[#, "Charting`Private`Tag$10020#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt13k0Ft8bAHCkbxFl/SJUspR9p6IeikobKr4osi8lKiWylCLJlqxZEwqV
vOu8rzDWsqUiL2YQQqJQypLK73bO7485cz5n7szc+8xzn+eMnKv/UQ8eLi4u
Eh1/z4ptwrfu3WPjLdJeQt5e07hDyifflFQ2flpGWnOV8zSecLLWOjGJjScc
LBt/aDeNz30+Jx0Vw8Z99S+ojVtM4y8E35SdC2bjwYbn5s6rTeOelgld++zZ
OPndLOXB1ym8uINffk6SjVcct56/HDqFq/WuqD6awcKHi384zCZ/wS/3+095
RWC45Ov+jTKFk/hBXaX+hVAmrpXYPenx/hOeVGmQWxTGwIf0dq/UUR/H1++s
tS/zpuPOJLfzgvMYrrEurVPHk4Z70LHF5KoRPLJnZJ/oESruJRv6aT3PB/xQ
V3zCOiMK/qdonHfYfgjPlY9Ijt5Rjs8UpHftL3+Pe3T0KWL7y3DpCgZfcEQf
/oDrUL6t6RP8s0m5yY6cXrw+1b9W3awUL3boLS0nOLiPVDSnUroYF/10t+DW
105c3kTXe4/kQ3xr86CT45G3uKtN51TEpwJc3uew9JjQK/zm2y3rFxry8cjE
1h3nW1/iIUNyka2383C1UOunKavr8e+/yKp/9bNwC7GIU2zRSjzVCZ+xUk7H
f/zTcm9CmIab5twWXHpxFxej3B8etyzAzxwL+7j1Wxx+Z6W3pLK/N164YPhw
+0Qk3jW+6+fQYDYMP4s8f/x0EP6DPHbPV/gZbFsbNjds6Yzf6zlpvPInE2RL
k2zebj4FvZwm7bWLVcAz7hWeKRoMHzbzinPn1IGfkpuLa1YkpCVn7hDqboSX
uXXPJBzigXvXr8dHVZqhaWex/vz8XTjBkA0MMW0D3jHzzNmFNCCHZ2i5S+1g
QFkSu2aVBcsfbmo+Gn4DJga30mSd8kBj13NlF+kOqJmz+Vj0OB8+p39S7NnR
CeSHgLVRnQWg8z3sqrPjOxhW/83y5RTBHmzDT0e7LnCPueuXzVsMBxuHQhKO
cqDDNPnRO8FS8G3na8/a0g0nk98bdQk8Acu1Oo66o93gMmdIyhqWwf4zz9P3
5PSAMvk73HBDOajyCCw16fXC+/pR8UgDCii3/7N9pK4X6D/ne97soEDs+/ng
kYZeuK3Nny0LFMhmRdt9eNELenkam7F9FGirvTHV19ILt65c1piwo4Cj1pcw
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
            "]]},
          Annotation[#, "Charting`Private`Tag$10020#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 0.0\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.5784507877803295}}, {{0.1, 
             0.559387052228157}}, {{0.08333333333333333, 
             0.5437780590721166}}, {{0.07142857142857142, 
             0.5125333156927505}}, {{0.0625, 0.45133959623335596`}}, {{
             0.05555555555555555, 0.406323152446034}}, {{0.05, 
             0.3705895277487805}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.6017076222977549}}, {{0.1, 
             0.5785249120661158}}, {{0.08333333333333333, 
             0.5683271832897887}}, {{0.07142857142857142, 
             0.5287943537523354}}, {{0.0625, 0.47674763965586564`}}, {{
             0.05555555555555555, 0.43907496593883977`}}, {{0.05, 
             0.4102769805238573}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.7715384258405242}}, {{0.1, 
             0.7613682970707023}}, {{0.08333333333333333, 
             0.8202983133079345}}, {{0.07142857142857142, 
             0.8731914035482582}}, {{0.0625, 0.940667487187044}}, {{
             0.05555555555555555, 1.0094713029825417`}}, {{0.05, 
             1.0672292000473842`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 1.042583698890069}}, {{0.1, 
             1.1290635368634618`}}, {{0.08333333333333333, 
             1.325100080238828}}, {{0.07142857142857142, 
             1.4184061179375655`}}, {{0.0625, 1.4569947181254723`}}, {{
             0.05555555555555555, 1.4834614563644468`}}, {{0.05, 
             1.5026723289538193`}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 0.0\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.23433193732206845`}}, {{0.08333333333333333, 
           0.19599659798550656`}}, {{0.0625, 0.1721096623025501}}, {{0.05, 
           0.1552778086829933}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.24386344713823566`}}, {{0.08333333333333333, 
           0.20839177039623244`}}, {{0.0625, 0.1858912428887602}}, {{0.05, 
           0.16849837113140897`}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.2807642869113267}}, {{0.08333333333333333, 
           0.26518719991503853`}}, {{0.0625, 0.26233654101785525`}}, {{0.05, 
           0.25127686430899054`}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.3413281977121634}}, {{0.08333333333333333, 
           0.3614054327848939}}, {{0.0625, 0.3524093327231163}}, {{0.05, 
           0.3316256437896955}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlGs01HkYxyWLRHZYZYhCpE6qk1xCPRw2U9qlCZtJYphGN+xGjOKgqWFC
YtQYGbmMnZJhxmD+NfkZ1/LvlNy6oDRlK9lOq9lpStbOnrMvnvO8+Hy/nxfP
i8eOmkim6ero6Pyknf+2431CblkZhr7ZX0+qvs9DFM6745xSDMmCjFJtMB4q
jFTsvXgJQ0nJxzK4Ah5SzyRZn8vD0GSPC7swk4d6TQZESQwMdcRLatI389Dh
4MKRwAgMZYluj5I5ZUg4aOSgtsSQsdcDn8WRXLTh6eJ2MleGVu/9ZBj3vhSl
TiR+oGe3IR9nyQ5CVREKcnWa0JxpRZPzvb7folnoktydL8hoQavzU4KnqKeR
1XZFhCheinwXoT26mRFoo+nloS2Hm9EkkTvbzzgKzCevA81/liBS+VfWgx3Z
sGekoNDUW4xIFu2NBQ0XgO+QXcLyakJ6pAfosLQYaIPjjm0kEUoeJxlZz12B
ap09VeF+NxHprwGh6dur0FWaqHAJuIEoPne/Wj2/BkeIrFG5tRDx6k+QZWdq
wMHXNd7fsg4tGSMOp3wQADVs6EP2uxq0qHUp6w5HCOcfrbXSdFehnbuJBP7G
ejj90o6JsyuRnO/Swy9vANW3sTvL3crRwYf+IxzbJiiNQh9D1l1ByZtUkdP7
xeBXwTaZ6y1GIbTAeWaDBI7ty3jjPJuPBlOdl8zMNUOtxqNu2zQTHZs2Xv/K
tQWUjcxfQ4+mof4tnNhV51vBc1mGWhkcjXzHbCXvFW1gc+NS2CP7Q3Aw2uM4
87MMdN/SM3nmDIDbszuogbcgwSk2hlrOBM9TYqeBrNvQx+9sXEEpALW++dqz
w3K4u13o9vlzMVCSdUt07dtB748feZ80l+Gx39/mZhEI3MVzP2SFlEP+bz3h
rmEd4Ouee9kmqhI8VQSRYLYDOtRhbwT1VeAZ5+j9T74Cxl6dXHZuqAasgB3K
2NoJSpd52fFRARj0J6XJBzohLq844aqeEB4jobN9ehcM+pX8PmxyA5pp1FfB
lt0QWfLCe8T4Jii/KIdim7shRu0xZuMhApVGGsI70APrxuYzPbR3NRMaPuFq
euBF15QF010MZp0N77HqXnBgnHwm3SUBWj/RTbGrDybGWyeP7G6G7hyDvKKp
PgjblTXTGS0F/bqdR3IK74J/3MK2a3EtEMowCPXZcA/ag9a0xMS2gsrrYvJ4
7z1Qez9060ttg1R6vF1lQj/UPtukaWLI4LuArifrluJwlJrI25wpg2fG9NHX
Jjhsnhb5NOXIoGnEaLjyexzkX1yyGy/IgEInP7RYjsOw5QYjUYWWs1/2LLLD
Qe8X55X1ChkceLQgeeqOQ9zQal/BEgzEUT4FeVQc1h+IVq5ZhsH5tZPsABoO
H5WVzFozDCI/ns1doONwZtb2Xo01Bvo5+NmUEzhwCDbkahctF1DSY9Jw6A4m
xlXuxcBgJo2+rRAH9uP9+qvCMRiXrqSpinAIOcQV8ikYSDI6qI0lOIwnrPiz
IlbbNzWMcizDQVVgcepqipZvuRJKqMXhlkWY5cp0DHLnvMj363DIquDcKs/U
5rufB7Ou42DcYL7AY2FgGO4UNC/CYXDrviqrfAwmbPtJMjEOXHmxP69I63tz
YudJKQ5RAYNTxFKtr4kQsLENh///F0QxWvzeYTj8C9b6bzw=
            "]]},
          Annotation[#, "Charting`Private`Tag$10242#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwtlGdQ03ccxlPFWqmYKjJkqEwBBbQKhJH7BkEIyowFlKoEiANFoHqKUUbQ
CIpAGSGGYBIjYdtAmPlT4CdDcORvlRFbEZU4UBmK0EBP0NK7vnjuefHcPZ+7
58VjEhlHO7iIQCD4Leg/t1CsvFRYiKG3QyGSiRcsFMZ5F8MpwBAPysr6mlko
e1970K+5GKKKZyrlHBZSj8UbXry8kDN4svNUFurWeiiNZ2IoXlmXZEtPQYcC
sge892KIMInVJn1JROW9mmZqfQxRLLuN1rqeQZv+WtxG48kRy6R1uPXIcZQw
FDdxOLUJEXg/xOTgobBrq+XQbGIjevFKc6LVjQm5LY7CkqQGlKPLGxWuSgMD
cvte6ZF6RKUYCAg2OWBH5Pb9eKgOURO2nNab4gD7z1fe2v61yC3XLxGZ8sF3
ICub6CpDbL/JpVtcRCA0S81Pd6lB75dUm2rMi+Fg71OLJqoUZShHQkk5ErhB
8BWHuN9EdlZLDolmSqGzIK7d1rMSze184zhKq4DoNenKFsNy5PHcR5gyXAVm
lK1HPPRLUdZ07jMvTylEBvdNpL4rRuVkadjG4zWQ9miDwWyXGAmjT5VZ1Mrg
3LAJ+36GCOkqpXTn4VqYnhts1XUoQjvPWR+ctK6HggPoY6D1VUSI0FV27GsA
d0GG1ufuPHQixTOPVNEIx3YnjVh9ykRn0vqrr39oAsmsU6nzezb65oHS2XQ9
Bqpq9i8/HT2DvPwNiNSjzUBakaRWBdCRFvFhYLrwdzCuzA1+ZBoO0fKRKbmi
BRa9PZzM12ZCKp+iyl7dBrGWURGRRWwwaP2enOyFoEfYUa0XlgWk5ZmT3/nc
gjvkcoeZmTyws/P4+/7oLdB4s4M/NcsFRvzW6qIL7eAo+7yaFVgEs/5d2WSr
DqA4XuIaHxDBA79s87H2DrilDh4pqRLDOGXZaP6eThh8eXLFxb5iOPbQ/LHW
XCeobOflMcoSsGExmRxOFzAu58Ve0ygHL0Ws+7jzbeh1zy/r16oECUmAaP23
YV/+c9eB5TfBtzAxVnasGyLUToPGTlKgcee2q4g9YD04n+y0tgb4dQ34uooe
eN75WoftKAM4Tky2D7gDZsyTT+p9asHe0CCc9OkODD1tfBG9sw7o7/ar/TLu
QrAPa6yDXg8fdm+vc7C/Bx6Mr87XGQ2AnoVb2ty9B227zBsiohrhyX67e3r0
+6B2/cOhJ6EJgpiC/MeLFSB5Yj9bw5SDZsMObck1BRyNjONvTpbD5iDvMH+R
Aja/l7rVnJdD6DhVPCtWQMs/tqnVV+QgsfC19ytTQL/+Jk2pQA5kLm2XWqYA
jVAro6p2OcQnhF+g9iiA0beeUrIMA6Uzc2psUgE2P9NV5iswmB8463J1WgEf
VSK2ZBUG5icSU91nFJD4ae3dYkMM4itTiNw5BXBWGtNu2GKgaZi2EZbi0BWw
hiEKwoA8lxeVa4RDxuM9364LwSCKx6l0XYdDYDivXBiGQcY27uRrExyexuqN
C6IW+DGFKS4bcJjO0jl97dRC/5Co6OUWHJp1gvWNzmLAZYpVWdtwYAk4zUXJ
GLToFFuTnHBY/pv2V376At+/tCnTDYfebbvFBpnYwi5lXxwBB15Lngc/B4OQ
tIodw+44HPDsfb2mAINE06rMK544/P9fIGm72efgjcO//hFp4g==
            "]]},
          Annotation[#, "Charting`Private`Tag$10242#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Ps/1XcAx/ETqqWok5pbSkNkWEuoYW9nXUTNJamYuUfktppKxRwdSUXL
bTpunVCHOC6J83X7dJAcHOd8ndRyWcsIrbVWuVRrZo/Hfng/Xo/nP/Be6x+5
56ACg8H4em7/1aCbee7KFYr0L9IxZM8TwzNjIiwjkyJ9FmxDBwUxUr1Erpcu
U4T2GzVkKoox9TxKOzGZIh1UuRFPSYx2FZkgKoYitSFfGosWihHknNpn70GR
NLGP6TxVMfi9ynpTGhRxTL5mztYSw+SRYvOebCGp/8jIjm0uxvGhyBfB7DpS
7DI7vzZEjF3m64ZmTtcS8/CmTW65YlxutMwvjr1NNiZ6bH4lEUPLVuQhOFRD
bJ6Kxu8qdsJsaZZ8Y9AtMqHNVFCw7ATn5xF7NadqcpVr0nEkrBO7+1JSl1pX
kY4V6wJGeZ3I12OnJ31RSTICFgTfkXfiYO+gQd1OAQl9X60uW9SFa4zdvH2s
MjISvOPznTZdaM2MFJluKyU90ro1LeFdCNFMetCozSet8ZP1UYVd0LMzP7RV
4zrxWqBFkvq64O8uf8GeKCSz95Wj5Iu7cZY21Jpp45HlBY8mdVndOPVkLafr
fAHptL008uBIN978PdD0sUUOuWDAjBfxu5HpTV66rP+J/PUkhrNioBusvPMq
79vTiO+YwCKXKcFht9gxo1cXCWtc1GBgL0HRjNX1Lc845G5TQ6l6jATDFZzv
9oaeIG6D7B1fVkiwWTV2atjZl5yVmu2SPJFAp/SyO/2JD4yaKX1vtR4ojAfH
cdVi8GBy2U09hx5ErAvw88/hwFDBmet6qgf38lsq1D1TkLDfw7KmqgcdtnyL
6ek0OPFZNzTGeqD0dDv39UwWmiXL2KMaUlhWvV8R75KDzTZlC8ecpLCzPJel
410A9x/Mpl3YUtyZch8rvsnDSFNqQ2O1FAO/HVVNlBcidnuDybfjUgybfhCG
PSjGkEuwormKDIHJaRG5SnzE6z1sdzWSoZeVfuO+Simifeubi1gyeKU/tu5b
Uga9nCW8E54y+E1ZDehYCbDvXdujoGgZ1g98iLNaXYn+1pc7klNleNw6upJj
WYWRqgTl9hIZ9GKO9tc4VON63hnhmTYZhgZrfw1xvIX619Pc6CEZ3B3in7f4
1mBvRK+cPSPD1sDZLVcDbwNuuqwWJo3mXfq3/QJqMWwxlH3GmMaUtdTi3vE6
LLZl2Ptsp1HU/9lMZYwQiYKs9ZHeNEL9I7kb4oTYZCZhPp7zhmcCm8oEIUbK
Fd85+dBofGvKrrggxFflUZ1mvjTua5goC/KEYJQ5Hn7hR0Npv9GqmyIhTpb8
UxZ+kEagXNeueBGFyKKgDWFhNIy/8R3WV6WwWj9PY3DOL4cLOEXLKUgK5Yzd
4TROv1otLtSmYFJoR38aQSODqbPnmimFCZ7Wkd8jabQ5awYWuFIIKOi5FXqU
xvmHBxas2Udh+Zr5uf1zdvHJ5ud7UmjJt+Y4fk9jMEL9j7wACrr5/L3G0TTe
pKw8lhtN4ZfchMmJYzTqV7prrDpJIWUVNeRxnEZ8XkZ9ThwFm9w/74rnvKRc
bZabRCEnxyur5ASN3k1uPK2LFBy10+M0Y2hkN6Zt5f5I4S1XHJQ8Z+9tvaOa
mRRKtBjOb+f8/3/hANfSKuQkjX8BSbhrmg==
            "]]},
          Annotation[#, "Charting`Private`Tag$10242#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlPk71HkAxxX1LEspucOIxC6l1Mi1b8pWoojGllohReXq2KTF0uNKIUIi
I2fjWKkc8xU+kaMmwoyZ+eaoaG2XlXVMWh3bPs/+8Hpez+sfeOn6BLsemi8l
JbXjK/95ZeeShKtXKcLc16SXd4cHj/TXAekZFGGz7LJda3hI3t+8KyWVIjIu
rYoL63iQjIVoxp6nSJ8971NAPQ/tCj2VIWEUOb5aJLZs5uGwc7Jw616KVMwb
vyB6zAOHL6cnUaMIg6M1rfCGB+Mn0k2uWVwiOxPeGs54hNCh4HG/6DpiYLOl
8FzmIziaGQzNhtcSlTOWDrUynUhtYLKLI2oIx6Io4V5IJzRsmvdW+leT+FK1
hVOjnVi9OFOw7vAdwpTnbndz60IM/cdWpZ23yVotn66Bh11wEiYlL7a6RXqq
o19b/vAYbL3oy/GWVcQWnZ0dZY9xiD+4sm5bJfkYqjsezuhGgZRTvrtdBUko
zBcdSO7G/YzgZhP7MsJlXdmj/k83jqjHixo0OURjwPFihHkP9GzN/DerlZDm
mGHnBUE98GEJxqNfF5Kk2PB1uqU9iOtdpTHbmk8qHPjehi968OuwbsyjxDxi
Ft94aot6L6Y/DjSqbMghzzUrS2bdepHhSSZcjK6QGaP1Dc2JvbDLTVSYa08j
a1LIhHZ7L465Rbw0nLxIGusWnPCT4qNo1rzE4k0Mub13WNTO5GPkZszx3UfP
kC7XFo/643xsXBQhGXH2IrvaNra0cvjQKktl9a44AIO5I6frn/Ix/5VfZLZS
GFYkXHewVxcgyOCgt09ODOKSA6RGnQXoYLfcVPVIguKYjUj9ggAPbDgb3r9P
w5g8b9aiTQCZP3/MnprNhOmNt59D5gRg3ppbFuWSg+yspfrWzD7YMhMytTzz
ECjdbawd2Id7EtbL4vJ8pK7dcu5tQR8GXpxcFCsoxGBti8RpqA8jJp+4AaJi
pNT07WxTEsL3fFrQNRkO/L4da+vdKQTf7vKNPoUycPqzGDOxQuy//MxKKF8B
q0CpB9INQnhLzAe0zCsx7R6YXCIRwmjgU6S5dhVU6oM3epmI8Oz+qHIM8xZ+
PhU6r9JfBL2wk/3VDrch+dtC9WWBCEODtc+PbL+D2VepiuZPRGA5RI21eFWD
Yf7OUHOZGJt9v1hc961B1edhfRVHMZoc9Wu8D9Yi7XxK4McoMSRW3Rs6QuuQ
fWyT8PRdMYr618xWhXEh15HI+GZSjKM+wdmmkVyc8Ld5MPe1Td9UWled46Jf
diL43ZQYDR9Mom9e4KLUiUVEM2L0qRnLVeZysY2v41n8QQyZnwyXlzdzETtU
nbNpHg1fAcO2WJbCl6mnKhGKNL7b5zWiv4iCX0ZqU8gSGhMjeTFFSyl0M+0P
+y6lET6p/bBQkwI7rLTGcRmN9CVargUmFGy+nNytoUaj1VndN28XhbNysml1
OjQSxXsW6rhTGCm/a1HOoOFyIIvD9qDgsCNomK1LYzBI9a/cgxTULglM4/Ro
TCcpn772C4U6ZXb37lU06pVZasvPUtCpcwndZkgjKje9PieSQtweaR1rIxry
vyt9yY6n4J7jH6T3PQ3+erd8jYsUmqw1VVSNaWQ1pG3OvkRh5dOuRjkTGp72
/FH1DApJv0Ud+vy1//8XZhhmCpOrafwLbKpv/Q==
            "]]},
          Annotation[#, "Charting`Private`Tag$10242#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlH040wkcwCW9TXQlYU2d1vtResGVq6+iJErFXLke75JuxfV66+KoFYmE
YV7GaZvmnXlpP+S7sTG/5TqEasRNJZLrqhs9Utc9z/3xeT7/ff78WASEHQrW
1dHR2feF/7zi/vzYjAwCLUM3auliJXpzhpmcVAIVvYrswiIl3jwqO5iYROB0
ratgg1CJ2tHwxVevE3jazLrbgavEZoM/SsNZBNKWH1YERirxmPvNLucjBN7e
s6q9bq8SRR0UutaUQNbvspyqwRa0fDy94RBXgs5tQ/NbF7Xghb6wsZDou8hT
q8TFvgp03bSyb+JSDaq4ezgm95swqd42RxhRjULqS/rZ3Y1I3SY7Unq8Ci3j
ptqu50tx3by0zo3HKpE2OZFw8mADsh89czbaL8aFH1dTRPQ6dOtKuDnPvgJp
60O4lQskmEOPTonZWo6N+qeXfdxZjcEdvSvu7ilF0e5Zwd84ifG2jlue145i
dC7Wmq2nlGFTapjMyqkQ7dWOmwuwAEPNYrrrF4uwxu9oezdNgHSHTccdTfMx
bgHV+uoQDwMYnWPRw3w8zZu29vxYMl5rX0WdkOdhDYXx8J40Cn/504KtisvF
4lsXtHxfT3j/UX1vkU0Wzl7bkOJhGAOpPvjmwJp0zNbsdU9/wYEdvDiDyeZk
vOgyg2vekwM/ekQMrX4bjwNJYv9sawEIJuzyt4ywkVeg21oaJwJNGfsnzxM/
Y5yyKXn7qhL41jBCq3H3w3i7V14jJeVgXpjEaF/mC+VOD2jZFWLQfRkSmWnE
gsqCti3czio4tTLQPyCLDSEOC7nn5TXQktNYZuKdAKmtGXkb2iWg3CayGR9P
BgEnZCy4uRb0XuzKfDeRBp6zFB4nE+rBtmJyYdSBLOBfYc10O9kADraxaeY+
ufAmtA63fyUFqZYxJCzKAzffdFVKvxTUg2cMr3by4YbfsL+akIHGakrC7BaC
HeHydOuvjRB0PflUtp4IRrjjo177m6BjR8qdhwaFMIvDSHOdI4ejKf32XXOL
IZ/W8Sq+Vg7+Wju1uV0pmN15NTXvrALWqKci7ZaUw74j+mo1tRn6m54bs20r
IDaDNBYrm4HOOvOkykUMI91yAx9mC/T11gyE7q2EcLewAdWnFmC4RI02+lWB
zSidkKYpwTHo85bfgqpBt4XKtVvSCg2uy6v9A2ugVhB+Q4/XClr7BzYtF+4C
U/4Bny4lQfBk/UQ5SwIzAqotClNIOBEQlmkdKYE5Md6H81JJsB4p/a78sgRi
d6Ubc9NJqP9gFV12QwJzE3vo7CwSHppaUkp5EtD3PJPoxSdB7/vVtCKZBP4R
mvCfiUkI6vzaQTiHgLOhRvXCdhLW/uCnWW5IQEhDkSKhk4Q3mly2YAEBfcVq
xrkuEi69XdLKX0zATi9diuNjEjjzzQ/dtiKAoj4hezRAgtzdLCj3IAGXi0XM
13+RENdzeOZSLwLCM2r72/4m4YAvV5Tj/aW3NOhxyTsSek+ZvOYFEmD7IcKP
OU7C+wTj89nnCBjou39v8BMJtcYMU9pFAlRpWcFSHRVE8Ti1WZEEbB6exsnW
VcHcEqPPmTEEXPNOZXvMVEHHZo88ajwBTFbj7nWzVcCtT3bMvEVA14aYxNkU
Ffg4dTw3SyWg/sqgj0ZfBf//CyzCeqrqDFTwLyx2gFE=
            "]]},
          Annotation[#, "Charting`Private`Tag$10291#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwtlGk41Akcxz2arWcVyrEmV6wcibIxJjH9FCVUJjXa2lIknevYToVlmwpF
OdO4ZnI0jsbIMfOX+jXuMf8tQ03rTNMxeEpWktbatn2effF9Pi8+z+ft1zw4
3P+gupqa2pav+4+W5KKEmzcJdBOdWtVqKcfdGSPHMzIJdIjq9Yg0l2PKHsm2
a6kEnne8xzU2kePU2wiji4kEGqaOu53Uk2OrZqcgIorAqHHbL1Zz5Bjql/LU
axeBjTBYxhnqRH6XhsUU9WtvBgX1OZ1o1zPngX+2GNmjIzP9Op14ZiB87FC8
CLmP83uY/b+jr6PVwHR0HbayOih1TTJMbXDOL46pRSfjoRIKStGQIdklOFyD
j5gtZho323CFdlb3qtBq3GoW8JbLa0H2H6+8dLfexdv0tSbdSU24+WlyirZr
FUY0MnpvJ0gw3yI+/fIaIRp3sN0vHUQ82NVvKdokwHbKjHXpr/fwltpmXsC6
ClR40ubOGRdhU2a4xN6zDG0NdFo/smvwyOLLigYjPp5Uj+AdfyVEC3fHwx7U
EuTeDY/xWl6OwazusfiRQkzQkqCPbRFeklsbTjfzMHpartc8ysHzL8zZsqQC
vK5demfHsWSc/Lvv/ne0HNx8pt9jTfsezAzEceayG9hSeWXjOeUFWJeXpDnT
moazyrK259uz4Nj2GJXNxFUMXcGZFenwoGiaXuIyykZjkyXr/w4rAWUlO3LH
0bN4g6S7rNergNVaMVNKv/2ocuAye7KFYFKWypJ/vw9MffNWzMyrBvXhQ7Ec
3SjYp8mlUm7UQpjVgaDgHDYEiMgxzhsRtOU3VhrsTgbuN5L7TP96aGfwaZ8+
pcGMghr5T24DUN5s4HyYzoKa0pWhjyoegHPVjF4cMwdO5UxcoBx9CO7OCVkm
gQXwvkJatTdIAg+nWKrich4E6C3wSfBphL6XJ7QudheC3cXBv4wZTaC0nxUf
VxTDtZ1rN/D1myEkMS0sl8IHSzvVp/qPzdC1Lv32E80yoFqn7RpvaIE96c9d
ny6ogCrGmg/PTrdC0BS9z4QuANXKP+d9prXBsr7ZWLqpEI45vF96brANnje9
1mc7V8Gw6t2AX1I7WESd6K3xvgud0myOqY0UBvrrho74VEOgkyQxu0oKLO+4
t437ayBNwRie79YBHiFfXLghtfBLIYNgVXfAA9+ltUEH6qBjcFLzvakMplwf
09rOiOD6B34yLVEGRb0rp4VRYlhFH3BNUcrgaHA4xyFWDHHUF0XzXsnAYVTg
JvxNDOmWCmbcaxk0fLaPr7wiBo2m9MjwYRk8odppCPLEsGn+XoXnmAwoO22M
yyViGOu0tic/yyCk28y9+FsCJh3ytbcsJMH2p/3KpVoEaFxpUwgWkTCuLGAX
6RAwvFA5pK1LQvSEqbTQiICJgtH7j/VJyFhk4n/LngCWzDtnoxEJzX6LQwq2
EbBxp/vLhVYkJD37ce6SAAIaf47uCbUmgbkvm5+/mwB1YalOgw0J/WEG7/IO
EKAQPdsSspyEyWT907mnCJA9iVeVO5BQr8+iGp8j4Ky318eZH0iIy8uoz4kl
YHRkdoOvIwkL7uh+4VwmwFKwVqiikdDltJ1nePWrl7dLnegkZDekeXCuE3Da
3NMqfjUJgZ5drxdnEtCRK2whXUj4/79A6aHFN3Al4V/Y2H7U
            "]]},
          Annotation[#, "Charting`Private`Tag$10291#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
DniL3776WI+E//9fACkSKq7euiT8D4alE/I=
            "]]},
          Annotation[#, "Charting`Private`Tag$10291#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$10291#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 0.5\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 1.2317662194723402`}}, {{
             0.08333333333333333, 0.7943280489286924}}, {{0.0625, 
             0.5854016413246672}}, {{0.05, 0.4637303022114274}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 1.2418218300955575`}}, {{
             0.08333333333333333, 0.8108645486490209}}, {{0.0625, 
             0.6030286286158368}}, {{0.05, 0.4814647269464274}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 1.2683901323225308`}}, {{
             0.08333333333333333, 0.8933519238858176}}, {{0.0625, 
             0.8088107609384787}}, {{0.05, 0.8908763014274017}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 1.3108073992225195`}}, {{
             0.08333333333333333, 1.1908826342873744`}}, {{0.0625, 
             1.3907068092307875`}}, {{0.05, 
             1.5111725163376226`}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 0.5\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     GraphicsBox[{{{}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           9.59614152996557*^-32}}, {{0.1, 8.86983817355311*^-31}}, {{
           0.08333333333333333, 5.0552688596720414`*^-33}}, {{
           0.07142857142857142, 2.201060664766986*^-31}}, {{0.0625, 
           4.057507517340635*^-30}}, {{0.05555555555555555, 
           1.2994670613430545`*^-30}}, {{0.05, 3.6708223724738933`*^-31}}}]}, 
         {RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 
           NCache[
            Rational[7, 9], 0.7777777777777778], 
           NCache[
            Rational[1, 3], 0.3333333333333333]], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[
                 Rational[1, 3], 
                 Rational[7, 9], 
                 Rational[1, 3]]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.008841029974886998}}, {{0.1, 0.012970376870923655`}}, {{
           0.08333333333333333, 0.017133668220468103`}}, {{
           0.07142857142857142, 0.021235802684581626`}}, {{0.0625, 
           0.025063008453441567`}}, {{0.05555555555555555, 
           0.02835837936946065}}, {{0.05, 0.03086863687137668}}}]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0.5, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.202834732579576}}, {{0.1, 0.2606748252432441}}, {{
           0.08333333333333333, 0.28740160272630744`}}, {{0.07142857142857142,
            0.29579327316630055`}}, {{0.0625, 0.29398527150157233`}}, {{
           0.05555555555555555, 0.2864836999078148}}, {{0.05, 
           0.27585147023752804`}}}]}, 
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[
                 NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                   1, 1 - 3^Rational[1, 2]}}, {{0, 
                   1}, {-1, -0.7320508075688772}, {
                   1, -0.7320508075688772}}]]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[1, 0, 0]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[8]], {{{0.125, 
           0.3603379714662491}}, {{0.1, 0.38323524700057193`}}, {{
           0.08333333333333333, 0.38354396029788845`}}, {{0.07142857142857142,
            0.3755805201353328}}, {{0.0625, 0.3645375743568678}}, {{
           0.05555555555555555, 0.352318505062457}}, {{0.05, 
           0.3396884678464918}}}]}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAJcwRiJmZub/YvAL3ImYMulqU6WyU
lbm/cosCFShjDLqOXMFRj5G5vwpaAjMtYAy69uxwG4WJub889wFvN1oMusYN
0K5webm/oDEB50tODLpmT47VR1m5v2im/9Z0Ngy6qNIKI/YYub/6j/y2xgYM
uizZA75SmLi/HGP2dmqnC7p33W/uZ4G3v9wAlRyn2Aq6SzMm3fh8tr+2AwFu
lxcKupG8Np6lfbW/IkeEPlFaCboaPcFZrmi0vwqCsjQAjQi6Lg+W0zJms78O
Iq7WYs0HuoTY5EcTTrK/jLlUnrr9BrpM1Y2ODzuxv5uREuXbMQa6niOBk4c6
sL/Gzp3XsHMFumXS3CW3SK6/bAPU73qlBLqiAEyhVkGsvy6d17P45AO6w5Vv
wS1Eqr+Ad/L2PygDumkZh9a8G6i/Tkm4X3xbArojQDNoQximvzeAS3RsnAG6
YlXT7oHpo7+bromuUc0AuobRJxr4xKG/kB3fZwACALp74SGEy4qfv0LjA5rF
iP659PzbvRY1m79aep+vdO38uZVev/BQKZe/qtvVHItt+7lBnYoN+8aSv+8r
YtWLzfm5a1N95yjyjL9X/RyMHzX4uaT4N6Y56oS/9phymhq49rnir4RxVGp4
v4sjHvT/GvW5OA599uJPYL9YeGSlTJnzuR2qkVXRIl8/Rk7ZVCwf8rkC6Gd+
mhN5PyoTpE/2hPC5biZjYWKbhD+NRBNETwzuuceewq8XWo0/sUCKf4bO6rnI
Pag19/eSPxg/Xrfjn+e5BOZFmvP4lj/v0WeeD6jkuTax+xSAUJs/sUIdHBBw
4blANoiWHV6fP8aPEJK+3dy5wPZV56WroT+0nqDkqPnWudvjcw6F06M/dmmI
ZDyV0LniLf24bNalPzi6toXaPMW5ZImSbpwEqD9QMhg6HZ2wudJBk6fUDao/
QLFBdhQknjlck9871QysP9D4UJL3Nb85YfY32x03rj/4StmoInLMOSnb/X43
HrA/6OPZZQc31Dnfw+UVhDaxP3xm70lUtdo5I3lz2rRJsj9EcqWaqorgOd3c
tuBpSrM/2pwdYdyD4zlVSYDswmC0P4jp6ZA5veY5Q2T/OaBktT/GoYARyL/p
Ob5LJLVhY7Y/vle6lTCz7Dn2O881x3e3P8YvSIPE5u85pNov+LB5uD+xOdDg
xHHxOWpib5owfrg/pRQPTnB48Tkw6q48sIK4P5nvTbsbf/E5vPktga+LuD9/
pcuVcozxOdQYLAqunbg/TxHHSiCn8TkEVygcq8G4P+vovbR73PE5ZNMgQKUJ
uT8nmKuIMkfyOSpbYOIkDrk/GXPq9d1N8jnw4p+EpBK5Pw1OKWOJVPI5fPIe
yaMbuT/1A6c94GHyOZQRHVKiLbk/w2+i8o188jnETxlkn1G5P2FHmVzpsfI5
itdYBh9WuT9VItjJlLjyOVBfmKieWrk/Sf0WN0C/8jncbhftnWO5Py+zlBGX
zPI59I0Vdpx1uT//HpDGROfyOboVVRgcerk/8fnOM/Dt8jmAnZS6m365P+XU
DaGb9PI5DK0T/5qHuT/Niot78gHzOdI0U6EajLk/wWXK6J0I8zmYvJJDmpC5
P7VACVZJD/M5XkTS5RmVuT+nG0jD9BXzOSXMEYiZmbk/nfaGMKAc8zk/6H1B

            "]]},
          Annotation[#, "Charting`Private`Tag$10442#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1:eJwtlPk7FHgAhyW1T1ZJ1pGjw0i1m622RZb2Q1Q6HYVRrSvlbNgnG3LNMEU5
ByPGOcxokpgxjvnG9kU22e2x5ejCZi2lnmqjmrRWbfs8/fA+71/wviv9w92O
qqqoqOz9yP9edVMrtbCQ0Im9JqEJHQQH856E5fEJ9YzaO7+8jSDzcLtrFo/Q
X8qjhe1XCZTPIgxPnyVU+KrnrloLwfWFt2ojYgj1Kox1TJMTHHPOHNjhRWj3
WL9xgYhA0qvOUOoTWh2bckt2hmDd/blX3QoUNOziM4vxXQRRw+EvAjnNtPON
UZVttwK7N5kNT8c1Ud04ufwrFwV4rZal4vhGqmIqbTp1vxkGW9q9aoMaKG1d
4nOF2YyvNfP7vjkmpzFZgyLeSBO498Z2aO+rp5/tV8/28m7CnoGMTE0bGTXf
XBbB+aMRpQxObsp3UrrPU/DCLrARR3uHVjU71VKHwBmtyfEGVKjsEXrY19BN
so7ezccbcI0f3m7uWE1bjF6mjijlCF6acqfVUEL1YpLHok/KwbDbFOSgX0VZ
mvHDkvf18Hfve8F5UkkL84diu+Pqceb2aoPpTiE9jArNXbMyxP65kvvbuTJq
YNJj539Ghtf/Dv6sa1FEa9746IXOk4HvTV+6rD1Precy0z7PkMK+5NzCmes5
VDCnSVSsLkXo/vjHa6bS6WqH18cMdeogmraqsn7KpYvfOtF1ZrUYreP+eCAk
mpanB/svZ1zG5kXxylFnX2qW72Fnv7EGxtU899smPhge1VzAcLwE1YnABIF2
DGy0+EaPtlaDZXbEz7+Ii2z5o5B7bhfRVdpRp3cwA+lWamo1+yS4sUVi8fZt
Dsj75ylwvgC1R9sEr6bzMWQt2q7qVwVL2cwXbJciXPAwc6nyFsPOMjXf2LsM
gY8j82KOi9CmdH8sviQEsyXrmganEoN/nVh0uq8SUxEnt3DYFRg1n1WE3RGD
I1g7ZcoTIuBsDqtYTQKFWDJ5MaMcvfa5F/oXVqN754Rnq2UZDuc+tBnQqAG3
R69CdKgEfkqrQWOrWmTqPuQ4M4uwdnA2wWqZFNztuMuMKsTDa+M6XEsZfrW2
6jBlnQcj5sSDhp31iJB3JUWw+BgeahoJ3iWHqs6kwoCXC/ed7Gcdvg0Ys67n
pqTx4BDwwbo8oBG+GfrpYpcsXN1t2uh3pAlt8lliU5IGpc3vFl1RzWjzXaLt
WZgC0YP109IYBQqGmZ7rHyQjxD9csCFBAUnVD6cju5Ox4WmtrTRJgYZwfzlR
JKP1nTmnLk2B/jlhmo7nk9Gvv069tkQBDbPELuaBZKh5rjG61K4AlyW2SupJ
QkDfCjvxAoKwD5N6Ax0cfHnId9R0EUHcDeU2g3oOXo6WcUVLCFJ5Myd8hBzE
TS3rrjT82CVj3q0niRzkaRm7VZgTjOzQT31vy0Gn89KAMlcCZvb306ub2Th3
lzl/uQdBgJeD2fEqNlx8CiSlBwkiTZwO1PPZGGLpPS85QpDd4Cq1jWTjdYbO
yeKfCG7eCwhy3cjGFR13faNTBEPC4Pz8FWywS/KuFCUQTISwOgc12dC4rP1B
kEKw+J+/7W4OJaL32/1Cg3SCNenvij1aElHQmuMgyCZwWjb33UhhIrwde8eX
8gmCpBruodGJ+PQvRG/Vlb3xSMR/ncljcw==
            "]]},
          Annotation[#, "Charting`Private`Tag$10442#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt1Pk/1HkAx3HttrtlS8qWMY6ymsLDlHIl275rsblqSLQJyWgU1vFoVbbY
tCM5kvsMueIhjGMwX8lnHCstlRnmm7ORtlUe0WU1pbbdfTz2h9fj+R+8dH1D
9h39RElJac+//Serb+XFnByKzOmarNgbIYBH+tOg9AyKDAW7VA7xBUjybHe5
nEIR8Y0QW26yAPPPQjVj4iiS6FZ15nS5AN3L+2tCIyiiH8d6UiwTgMdJku0+
SBFjRcLEAqMWFVJlvXkGRXiHoyjn8FoYDX/ati9bRPrZ3MB37DqcGg+Z9Y9u
JktyJIXebfVwNNkwrjjbRIqlQc7bTYVIaTUvKItsJPkjnjni4kYwd7QfrDkm
JO9rX9YfMG7GphWZA1t5DeSGW4Mdr0QE/tAfu9X21pMHPRqCGLMWOMkuJa2w
qiNcZVk1R3wDBXrRabHba4k986Z+ivFNHJWOsZrtakiqwv6nR6QNxUpORe67
qkiBdFGBO1OMzoyQdrZNJWGpLr2rKhHjuEYs3apZQcaFvjzXrHbo7TQ5Zs24
RrrF0lYX5w74ug3MRj8tIRMmGWeGGJ24INnIVHQVESOV8xeE450481CX3xtf
SCo4MRynjC7MvR+9ucYsj7gpRs4Fef6GDG/ywtkgi5gu2R1qt6Ybu/Ljly90
pxLrXz7rqZJ3I9A1ckr/VSLhe80G8spuoVRhcc1ymk/mi2fujHr1YFLAD9sf
cJrkcJA9zLqNbSqR85McHxLELV+XNnEb2pUpbpKvDyPsgeVfRVm/45Mn/lG5
ahEoF+tstfTuRfAG7hHfPD5UlJnsRPU+3CroEKh7XEJ5i3+y/0QfenZUmL15
k4owqRzZZXew+E/b3NeKTAS6BFfzve7CvG7hq3POeciy4Pz6dv097DS/mKnt
XYg5/vfqhvJ7EM+7TZVdL4JYS7hw36Efo49OqMQMlOCq4exaeXU/JtkfREF0
GRhBJno2yhL4xaUGX1lcAf2HRR4/Bksg3ZVWPri8EpI4zbC5Xgk80+RWsmVV
UONVsq9tlOLIvMWotkUNZsJ9dbQSpDAY/RBloVMLH4o1+3xKCnnn49V88zoE
Gq96Fes0AL2IEyNC+3qojqpdcRAMYHysaeK4QwOcqHWswC8H4WZ/7lmHjxC6
ve6TnJBBWPt9tLzq14jLqtlRqX2DaHNc33iE24T0uFnxx40yzFvdM7t1qhmm
5sEWWxJkKB3ZrKiNECFgzdtE8ZQMAb4hucZRIrzL5A57PZXBeLrmm9rzIsSr
32UtTMvQ+pYdLUgQoZJR0mY2K8Mgw0i5Jl+EaeaeF5VzMiw+oK91vV2EoLVF
rhmLaPgNrNtZtpRCkL49M0CThuEhn8n1KhTeVzTwvtCm8WKykF+6ikKigU5D
qQ6Ns690bpdoUqg2fO0o16WRvlJ7XzGbwoxRfuR+fRpdHA2/QhcKwVteTnxr
RiP+/g+fr3Wn8HfdIfaYOQ3nw9kVBR4UkrZ2R0RsozEWrD6Tz6VQY5K3SmhF
Y+7S6pNXwinMmtnaGHxHo2W1G0PrZwpRTYLkbmsa5/LTW/KiKKhYMMe5tjSW
Vat9zI2lsHnb8/ACOxpSU9ciZiIFIjrYYeVAI7s11To3mQLHsktl2JGGt430
sUYGBTm16dDJPTT+/xdCt+eUq3Fo/ANal2xt
            "]]},
          Annotation[#, "Charting`Private`Tag$10442#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwtlHk41HkAh23RlkVPrNxH6aDociW1H5JKKldTUY9bOtFTCRsbO44UOYY0
7jDNonEN5lfydS1FiRlXfuNJIpukkmW28rTt8+wf7/P++/71rvAOdPZbICUl
deA7/3n1k2Vxt29TZP/iZFflXRy4sd6cZaVR5OLmqT/mXThIPN7odDOZIllu
9p/HfDiYnQzSiL5GkQ+lMpk1v3PQKt/FCwqlCMspTHykmYMTDom9e1wpMsz2
8WDvvAuuUFZvVpUiQUZmfjrWXBg+X1jvnCEgSc50kMEvxbg8FDjlH1lLTLab
6Q8n8GBvvGZIcqWGJC0pOmaxrwLJdWY5ReHVRJrfIuNvUwX1HY2uvJN8Ysib
/ObnX40NS9NFW05UkWntj2PCE7VgDozuUTpYSYJezGssS6awvzchcallBZlw
z+MbVzxAjl5kauy2crKIoWPRUvoQfkLx6tq9PNLH5sivERHckdqff9i6lBSu
lxkPm2hAc1pgo9GuYnL8TaTk0OtGnFKL7avT4JL3nQsqb801Qc/K+KSNKocI
35/3Sp5thjdDNBX5poAkbR0TfJL9EzHda9UlLfnkiWeB9V71Vvz6cgWzIz6X
HG1xaHBRacPMV/rhctNM0uAgNd5m8Ahp7uSDo8EtErI8d+Eng8ewzo6X/9Ka
QmRldj6KQTvOuISP60/fIBqijfVyjh0olJhzLCaYJFz8U7HdwScYKWOeP3Q6
hFDykzveez3FVoXw2REHT7I77H6bvU8ntIqTGd0rPeDUKopiezzDgr/8I9hK
odDMlkxzt3YhYI2Pl3cmE7UXI3Q8BV1oy2kqU3FLADwX5XXs7MajHVzTubkU
xD4wtihv74b0a1v2J0k6QkyOHgiyE8Ks4svPVx0zwWiMqB4VCmFlFpeu5Z4L
+kxWhomLCA2zjPGiknzoxniw5rtEoF9dUIgWFcCZv2o0zLUHI0bzgrN9RTCS
eskTDfTA91pKQJY0FzMeuU+HvXshtE692yNfDL+hQ/6PX/XieOoLy165UrDa
y9TWe/fBa9ac1jLnoaJDTtf6bR8M6PkIc+1yBE945m85048XzWPKTLMK6GvV
Bg/83Q+90AuDfLtKsEml71z4AIbENcOn9lWB/1vR049fB8CwuzrZ5MlHnQs7
Pi/mOWx8v1nk+VbjrG1M07ofB1Fvv6ray6cGNEdFaUP0IGYtn5m2Xa6FuWZJ
7Zg8jcLBjZLyUAEsy0z7QxJonPYOZG+KEGDt9YdXKm/S2DTB214eJYCiv+3K
yWQadf8YRZZdF2BCm3HOI51Gj6qhLC9bgIzEiwt359KQPqKvWdIowMy5qo1K
FTR8RbpWRUsolBpujrvXQ2PdMc+RVQoUbi2mjMb7aHwYyWUWKlKIGrUS6T6n
cWVa+3GBBgW3LEdt1hAN1jIt5ztGFBbLBfHDXtNocVDzzXWi4PuWN7xHQiO+
/+gincMUHNrMYiI/03D0yODmuFHYVlC//sFXGuIAlXfZPhQUj3UGb/hBjJkE
5eCsSxQa2t/JKcuKcV+ZoaoZRqGEc6nyoJwYV7NZ9zMjKKRHzR+JUxBD7p7S
N3YshYBt8gVfFMUQmrjkq9/43rc8ba+pshgZdSk27CQKttOaUwEqYrjvEo6p
pVHY1FmYylUT4/9/QbPY0GJEQ4x/AR67cOc=
            "]]},
          Annotation[#, "Charting`Private`Tag$10442#4"]& ]}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAJcwRiJmZub+aW6FHV/M/OlqU6WyU
lbm/sJEkrpPsPzqOXMFRj5G5v9UpKszQ5T869uxwG4WJub9RgLwuTdg/OsYN
0K5webm/EMb9jU69PzpmT47VR1m5v7K08rRzhz86qNIKI/YYub+GHqakRxw/
OizZA75SmLi/XCQzCxZIPjp33W/uZ4G3v1zt5ZTZhTw6SzMm3fh8tr8E9weo
nu06OpG8Np6lfbW/71R1c85oOToaPcFZrmi0v9ZYeaDPzzc6Lg+W0zJms7+p
UN3eGV42OoTY5EcTTrK/AEgAfoLaNDpM1Y2ODzuxv9Ikec82azM6niOBk4c6
sL+6iPDuaiAyOmXS3CW3SK6/aPISJZrGMDqiAEyhVkGsvw+knEu7Hy86w5Vv
wS1Eqr+16SikK9UsOmkZh9a8G6i/4o0GWCdyKjojQDNoQximv/z3sJ3eTyg6
YlXT7oHpo7+4XW31txkmOobRJxr4xKG/CjOlVzsIJDp74SGEy4qfvydooLHr
MSI69PzbvRY1m7/hrJWAc00gOpVev/BQKZe/sRfIjqZCHTpBnYoN+8aSv3EU
vBBN1xk6a1N95yjyjL90BNlh+bAWOqT4N6Y56oS/4hc6uyvwEzrir4RxVGp4
v0Znat28JxE6OA599uJPYL8HRtTxRn4NOh2qkVXRIl8/wMdSi10gCToC6Gd+
mhN5P7bV7GeQyQQ6biZjYWKbhD/0aMB1sBwBOseewq8XWo0/dd9qep8S+znI
Pag19/eSP6tmD5t84PQ5BOZFmvP4lj/eoHTMV6vvOTax+xSAUJs/cqMQXjFX
5jlANoiWHV6fPzD8QnaWSN45wPZV56WroT8A5O5QtP/SOdvjcw6F06M/EHgh
IHnYwzniLf24bNalP+BmgMhTt7E5ZImSbpwEqD8ALR6tZ3ibOdJBk6fUDao/
gMH0CbnYoTlck9871QysP4C0xG0FXbY5YfY32x03rj+gJVoplN3IOSnb/X43
HrA/MG3zQfbR1Tnfw+UVhDaxP9j0Rr/soeE5I3lz2rRJsj+4JAokT+PpOd3c
tuBpSrM/aCjbAaaI8TlVSYDswmC0PyAIBjMlUfc5Q2T/OaBktT94pV+XNXn9
Ob5LJLVhY7Y/PF00JQMcAjr2O881x3e3PyRHsGaEKgY6pNov+LB5uD8ET3N/
FlMKOmpib5owfrg/aLMBenlmCjow6q48sIK4PxB1CKPjeQo6vPktga+LuD8c
EH+AzaAKOtQYLAqunbg/IKUQaffuCjoEVygcq8G4PwBLxfCjjAs6ZNMgQKUJ
uT/chXTaX80MOipbYOIkDrk/JJIOpKjhDDrw4p+EpBK5P6j7IJz49Qw6fPIe
yaMbuT9o5q4Xrh4NOpQRHVKiLbk/5BpvPG9wDTrETxlkn1G5P6T/gDxKFQ46
itdYBh9WuT/Y36DtBSoOOlBfmKieWrk/SB05zcg+DjrcbhftnWO5P+iv0hdk
aA469I0Vdpx1uT8cNKra8LsOOroVVRgcerk/SP6M/+XQDjqAnZS6m365P7Al
6FLi5Q46DK0T/5qHuT88jAeF8A8POtI0U6EajLk/ZMvLYwIlDzqYvJJDmpC5
P8hnCHEbOg86XkTS5RmVuT9sYb2sO08POiXMEYiZmbk/ULjqFmNkDzps3UiC

            "]]},
          Annotation[#, "Charting`Private`Tag$10491#1"]& ], 
         TagBox[
          {RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 
            NCache[
             Rational[7, 9], 0.7777777777777778], 
            NCache[
             Rational[1, 3], 0.3333333333333333]], AbsoluteThickness[1.6], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
jP4HnClQIw==
            "]]},
          Annotation[#, "Charting`Private`Tag$10491#2"]& ], 
         TagBox[
          {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV1nlYDfsfB/AoS8maCNW9hYi2i5LQuxBSKko/udqIihTaiyipqChttKfl
tp5mzmklndOenHLOIC2WtItcXUlZf19/zDPP63lmPvOd72eZUTjmdvDEdBER
kc/k+H02tvt7rHolzb0b717h8vY9N3VlYEyoDsXNTe6fc3hwhHuCebG6fC+L
+8bLNaX/1jD3rohxhqV+Ifdsw/fxBp9Bbl2cW43qrnyuk62+db9vP9d5WWh7
1Ypcrr9/nM3WY73clXobnXbK5HDtXLSuv7vUwz126MmHwLeZ3Nlcae0TC15y
Q4Rrlk/WZ3B10gN1RI50cv3fKAQ/up7GvV12XGL1zHbu+PfuB0s0k7ibvFzl
O28y3Dgb7kcz5QSuiwIPL/9t4+qnXJ/7rfEWN/O8emxxWDP3tPnFobX/RXCl
HZpPGEbWcrMmN+dsGQnmXmKUHgRfuMftLQ4+Z3HKh9uQrz6/T7GYqz3v4kSv
qR13tynlnVaZwJXLjz4kVLTFzbXnOb2fQjF92DEgUcoXq2fvT5NVz4Wr0nH7
Y0nB4CRpdwbOLkFTam3x0iORaAjzep4lUYXm7bmaX77cgsXZWDflnBqIDRok
fpqMR8hFBWfDunpo0d8WXzZLwkjcvG6tjiboaYXFy9mkgffjJFVzrgW8iUND
2QUZcPQeHrh3n4/uPvd5V59kYtX76PsKo23oVf1R4dKejczdh3+GWglgduWJ
9+rX2fAaDBVIWwtQ3ZGn9WooG6nWmWsz7ARIvGJZYjqVjbfClFOUowAHO4uL
N8jmwI1J16Q9BagNPpYzaZ8D3Y2vh7ZGC5DZ3RQTPJqDXvftDzwbBXC4dss1
WSwXu8curfdXFmJ3hJdpjWQueuezW7RVhFh784jG4OJcGDuJ6Y+rCfEuVvE/
9dW5CG0U5zhsEuJ8OtuzziAXqdoJheshxOVy5sJISC7MPlV9PmAhRNLAonBt
8TzU127s+XVBiAvDE6etF+ZBcsWZ4z6XhLB512UctCwPikWNDz4ECqE4dnce
XzkPFQFdX56GCJH7fcMt2315CH4eHBgaJUSZlPmdkPA8pNv2jwRnCsHox/zz
dG4+hh+2Sb9pEkLGvT9PIJ0PrUfi3uItJH6WZiFfLh916d316nwhRmZ2UPWq
+Uhs3qnkJRBClC97r2R/PrTnKImMdAixyTKHHxuZj+1HNyxwfStEwqnKMYu5
BXBSPZUxNJvBqySJcTPpAkSVXYprlWCwqvXvCWO5AkxKqXjRkgwo9Z9fd6kW
INjI8Mf5BQyax3eIae4vQGRRnOLLpQy+BvCXSEeSeNu9Hu5XYnA05vXWZ5KF
2B5hGZauz2B4/KhNgHQhpCI9LjnuZOBh2XV5jXwhrplazFAxYBCx7FmDr3oh
rJZZPSjay6AqrcVU/mAhgnner2JMGcgVlh53TCiEpLX4wMhRst768PAphSII
2i6K1nsyOKUkzrq7rgiNok+Zbd4MJkJDBEYbi3D06zsNjg+DeUaB0qm7iuCk
Yn/ntj8DCL3SdjgWYVGW3YrdgQzSX9pzwguLEP2G07c+goH9xOZuuc0s7Ikr
uKqYzsBuRt0fG8HCLvGcQ1syiBebOOzdw4KFicgMk7vEGxxGz/+PhRKjp9PO
ZRG7Rv1q8mbhtNRX95RcBjaDwyvPV7BQ1b5NJ4oi/uzuFMpjYfrRTSJXaWKx
X4XJzSzYssOzvdkMrBWltZo6SHzG6oZlCdlPG/29slMs6Lx27/hazuBI+x2X
xi3FGFRJM3lZTTywiu7WL4ZPXYwExSUeL/780bAYf64fzr7MY2C1qDFgxZFi
FJ6h/FbUMjhs8l/UWb9iVHOrkzc3MLBs3Fe6/H4xGhOYWvFHxM+eTanXFSML
9R73frvfTtfgUTESKqRnOvMZHJru3eTWXYz7ch2N3FYGFrqZnfXfivGtpItn
LmCg3P0jYLM8BZulz+OlnzHg+1nRtxUpqPFDpSli1+WlfVNKFNb75Cze286g
xMplb5U6hZJS1dizzxnodXQt1NenMNp4/HZmJ4M+b61ddw3I/ZrBy9d1MQhZ
estLdB+FtMRFciziR5aG3Q0HKcwx8s1kdf9ef3nWPgcK83e4lka/ZDDlIfW8
wIlCg/NPHbFXDJIXu4nPPUMhL+y7ngdxr7mS62NPCl8LdrQZv2ZwhondbBFK
oTlsYvR1D4MF5z86l4ZTGHOe8NJ9w4C90Dh5SRQFgx0OlxOJJ81Ep3XepnCx
49pio14GwY/PtVjnU1ia9F3/Rh+DNW6t36tZFChNl7YO4pZ5yup/cij4NRl2
/9lP4pv0xPTepxAnMPHKI+aMbm3cyaPwdo+X2AixZWTCZFY9hVNlc6TWDjBI
4ptYO7ZSmPK5TCcT67rk32wWUpjVaqv/hLhnzsxa5XYK+jJFB2YNMlAyeqD0
/hWFHbHRnxyJH47IWO3voyDesPZqLLHLdY9w1hCFX+9VE6qJ2Q/Xfzz7kcJ5
xaBtc4ZIvp1DFZlxCh/VhY9ViSdn91lsnCL7v+lG337ixFzd0NgfFPw1Kr1P
E2/fm1j5eRqNqysPRoQQ9wx9fmc5kwZvrpVCGnFQ6AH5CgkaSv+2apUSr15T
ZLZsPo2qJorfTNzcOPuKnxSNSwnT+jqJT590KO1eSuOcDc93mHjeTN7QNlka
0bKjUePEdPaK5al/0ugRhq79SWxh4G38axUNm4AovRnDDL70MwF2yjTEFWd1
ihMnBqvRNao0+qvejc0h3rbqep/iBhrvTHTDf/t13YB0sBYNxY6fWbOJS75+
6RDo0NgYKG0jSnz9L4lkOdA4+4XD+kaeZ+ska3tqJ41Ona74MeJNaWqK5Xto
nDYKWzJALN6uNyBqTGOdcrVqO/ErSfNcMzMai5/6v6gn5uw8cTrFgoaycY0i
TRzm5602cpiGU/QNkSRia/ramJY1jSeZfZ5BxBuGk0qu2NM4dYUX5Eg86w+W
t+AEia+xes0+4heHeDpyp2gszV94fN3v/Ylgfji70lAfu6o1mzikrp9Xdp7s
54ygjD6Sb42/xPeY+dPwjluoG0M8w2mFRMolGtsXZrv9rpeuVNXWt1dorD/C
095CHCx50PxKBI1I8xvRz0i9We10WCKIovFdVF8hnVjNz6tTNo7GnUD/vU7E
HUOJtmUpNMz7Q63HSD0XyRcpit4lz39oZcQmDjrEHTDNoVHhzxGcJVap6zv9
lkWjZc/PjEHSL4GpKj6yPBpfLo7ZlPb+7m/drc71NFz408SPE6tIHvhZ2kxj
/vCdffOI2309g02FNJ6G2Mdak/5cd6g6KqiXxsljJjtek/7+FS4wfzxIY9Py
lFxf4qe1vUtk39HQSHPPWUgcoDErpfQTjdwFFU46ZD4wc8zyhsXYSIlOneX2
gsE/O465aIqz0chev26CzJsLvh7qQXPZWJah1+9HrDR0u3TFEjZ2DUz74yKZ
T361b2pM1rCRNqeX5dDBYKWve1eJIRunBTLavCek30IiWOX72XhGr0paT6wX
mx107wAbXbK8gViGfB+Kn6/jWbFB3cz+y15I6ndgq/8jZzauDa/L6mljsOig
mGzvNTYmT/4x7veQQYat3Mf+SOI3KwX1zSS/Z7Tqh6LZiB4sj5EkNglzchm9
w0ZkxA1hXCODa9X8qsk8NiqMJtbcrGMgsj7Oen4LGy3xxZB7wOCmNuuvRW1s
2BQUxhpUMZDf3TRDmmEjwnCL8PR90j/2U0XLu8j6FKdNY1cy8E6w/rl6hA3V
vUZbV5cx+CCqlLZNgoMe24fL/2ExePmirMd5Hwc6tS5XZVIZ3Jg+uKvOhAOj
H9avBpLJ+6+VzpM156BmOJlHJTHIcnc/9/hvDgYFogq4Q+aVhMZ0zTMcLBj0
PKAby+Db5ryVIlEcvFj57mzjNQbLYpJOxj/j4PDosvwf58m8rWhp+beTgxOa
NSoXzpF8vZpSM3zFwXPVMu1JNzKflA9/+TbIwSf1a++HXRjk8haH2U9yIOn7
pK7wJIPNHyLzVFaUoFR+SqPaisxDw8vva+1KMFoeNmO2LgOeQZk941CCXfMq
Ei23kXrc8b79jVMJDCQ1JDJ1GIhtPVwjcq4EZr+mvDU3k3yraMTrBpbAp+bz
DT0NMv8X9OBeRglkyyLy/1Ug38t2xNC9JeDYad+mRRnsdPi1Jd2hFFL3Q/bX
84To+fIOSU6leDtdihNbLURAeIdBvEspZFgms49XCXGPTR+I8ChFuNrTwKly
ITZMc3D2CS4F+/lSem4x+R9Nbb5tlkWufxQo8iRZCJGO6C8i/aVQ0+o5JvQS
otpoVan98TLEyjVppqwS4tIXJSOOYxkumG8tYikIoZep/EbMpQy7FreWPZAX
ovar2txcjzK4aBlefiojREPelhMfrpZB7Ufm+35JIfizTKX9c8twNrZvXfS4
AF11vp6xo2X4+Pb69qW1AkxsfazZ5F2OQQ2/+52HBMjqUp+kfCtgHOG0pbyv
DaeOuSVqBFTgxcCQo3J3GzRGWNuooApsa3hlFs+0oWpKNbA4vAJnpTcetKtp
w1MZFQlWSgUqvnkuKk1tg9j/1soW1FQg67XDNfvDbXB48qdetnglVs0YMmts
asW6v+16V82rxLjM/9puVrfiY29acNaiSiSzdWdalLbiwn/yDzNXVOKwt0c2
/24rYhfKHbyrWonC3X4ZARdbUW+6zCHtQCWqvn+4OfBXK64/PzzzD8tKUGee
lxxZ2woz29u5qUcq4eOwObZFvhUvXJeOphyvxIU+66DEOa0Yj5T2SvYk8dcY
yH7r5+Oe9CEZWb9KvGh8u3h3Nx+XU2LvJQVUYtP7Gc3hQj4ki6R+JYaS65uz
rGdV88FsMs9YHkHe59Iave0lfNyuurUzMaoS9fcVXp7J58NmFzOwLK4SGgEx
m+6k87GavzDszp1KeDRe2M2N5+P/KqbXTQ==
            "]]},
          Annotation[#, "Charting`Private`Tag$10491#3"]& ], 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           Dashing[{Small, Small}], LineBox[CompressedData["
1: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

            "]]},
          Annotation[#, "Charting`Private`Tag$10491#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"z\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}, {
         FormBox[
          StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
           GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameStyle->Directive[
        GrayLevel[0], 18],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->450,
      LabelStyle->Directive[
        GrayLevel[0], 18],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"k = 1.0\[Pi]\"", 
         GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
         False], TraditionalForm],
      PlotRange->{{0, 0.1}, {-0.01, 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     TemplateBox[{
       GraphicsBox[{{}, {{{
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   DiskBox[{0, 0}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.5538639746098397}}, {{0.1, 
             0.4058341529680489}}, {{0.08333333333333333, 
             0.32135295753236637`}}, {{0.07142857142857142, 
             0.26474759084219013`}}, {{0.0625, 0.2243117936500374}}, {{
             0.05555555555555555, 0.19403511750354951`}}, {{0.05, 
             0.17056479433266425`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 
              NCache[
               Rational[7, 9], 0.7777777777777778], 
              NCache[
               Rational[1, 3], 0.3333333333333333]]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.48964383700750913`}}, {{0.1, 
             0.37078026451475443`}}, {{0.08333333333333333, 
             0.2977347814019611}}, {{0.07142857142857142, 
             0.25162750000384726`}}, {{0.0625, 0.22177723559844065`}}, {{
             0.05555555555555555, 0.20271272292752318`}}, {{0.05, 
             0.19127841208662755`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.5003322582703271}}, {{0.1, 
             0.5658363976656191}}, {{0.08333333333333333, 
             0.6627648178827465}}, {{0.07142857142857142, 
             0.7716268527040495}}, {{0.0625, 0.8768499396597083}}, {{
             0.05555555555555555, 0.9690074550507175}}, {{0.05, 
             1.0412286197896945`}}}]}, {
            Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            GeometricTransformationBox[
             InsetBox[
              BoxData[
               FormBox[
                StyleBox[
                 GraphicsBox[{
                   EdgeForm[], 
                   PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], 
                 GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, StripOnInput -> False], 
                TraditionalForm]], {0., 0.}, Automatic, 
              Offset[8]], {{{0.125, 0.848691738239757}}, {{0.1, 
             1.0693380262922307`}}, {{0.08333333333333333, 
             1.2470993303458178`}}, {{0.07142857142857142, 
             1.3672674956844584`}}, {{0.0625, 1.4368256412822173`}}, {{
             0.05555555555555555, 1.4761908948879965`}}, {{0.05, 
             1.5002187706261392`}}}]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"\[CapitalDelta]E\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}, {
            FormBox[
             StyleBox["\"\\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\)\"", 
              GrayLevel[0], 20, FontFamily -> "Bookman Old Style", 
              StripOnInput -> False], TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 18], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 450, LabelStyle -> Directive[
           GrayLevel[0], 18], 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox["\"k = 1.0\[Pi]\"", 
            GrayLevel[0], 20, FontFamily -> "Bookman Old Style", StripOnInput -> 
            False], TraditionalForm], PlotRange -> {{0, 0.1}, {-0.01, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\[Beta] = 1.0\"", "\"\[Beta] = 0.9\"", "\"\[Beta] = 0.5\"", 
           "\"\[Beta] = 0.0\""}, "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[7, 9], 0.7777777777777778], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {10, 8}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              Directive[
               GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> 
             Automatic, StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.5185185185185185, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["7", "9"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[7, 9], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "8", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "False", ",", "False", ",", "False", ",", "False"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "18"}], "]"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.823434782015081*^9, {3.823434897909191*^9, 3.823434905579576*^9}, 
   3.823435664267488*^9, 3.8234391834636855`*^9, 3.823439275903926*^9, {
   3.82343931134362*^9, 3.8234393642984953`*^9}, {3.823439433383524*^9, 
   3.8234394564281673`*^9}, 3.8234395702863855`*^9, 3.823439718110694*^9, 
   3.823442189690989*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"098b8170-eb36-459e-af73-990782a911c9"]
}, Open  ]]
},
WindowSize->{1105.2, 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ee4149b7-4947-47de-9698-f58718194abd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 808, 18, 88, "Input",ExpressionUUID->"baf0a9d9-7bc6-4204-b6f3-ad0f16695c9c"],
Cell[1391, 42, 671, 9, 32, "Output",ExpressionUUID->"6c7efe3d-234c-4775-9cf8-fc51a808f38c"]
}, Open  ]],
Cell[2077, 54, 5677, 146, 439, "Input",ExpressionUUID->"01b2e14f-2311-4aab-94e8-2bfb49913c9b"],
Cell[7757, 202, 12144, 277, 1013, "Input",ExpressionUUID->"a018a8ca-be92-4432-bae9-e93d31ba77c1"],
Cell[CellGroupData[{
Cell[19926, 483, 1772, 47, 185, "Input",ExpressionUUID->"87b5179c-9725-4f8f-8a86-1bae24dc938e"],
Cell[21701, 532, 150505, 2996, 600, "Output",ExpressionUUID->"66677684-b71f-4c4a-826f-1cefe986e858"],
Cell[172209, 3530, 150275, 2995, 600, "Output",ExpressionUUID->"9240ca4e-996c-44f9-9b5c-aa44bf7c5779"],
Cell[322487, 6527, 178032, 3498, 1034, "Output",ExpressionUUID->"0dcc40c1-1e10-4e15-afbc-783f575f5b5d"],
Cell[500522, 10027, 179128, 3519, 1058, "Output",ExpressionUUID->"098b8170-eb36-459e-af73-990782a911c9"]
}, Open  ]]
}
]
*)

